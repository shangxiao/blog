{
  "swagger": "2.0",
  "info": {
    "version": "1-9",
    "title": "CorrigoPro Direct",
    "description": "Documentation reflects the API current status as of 2025-03-27 for the 5.19 release."
  },
  "host": "api.corrigopro.com",
  "basePath": "/documentation/docs/1-9",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/associates": {
      "get": {
        "tags": [
          "Associates"
        ],
        "summary": "api/associates/",
        "description": "This method retrieves a list of technicians and subcontractors belonging to a specified branch registered in the CorrigoPro.",
        "operationId": "Associates_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "description": "Identifier of a branch registered in the CorrigoPro Network.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "includeCruLeads",
            "in": "query",
            "description": "IncludeCruLeads boolean type. If true then return CruLead information.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssociateList"
            },
            "examples": {
              "CruMembers": [
                {
                  "Id": 8943,
                  "Name": "Jon Snow",
                  "Phone": "+12025550141"
                },
                {
                  "Id": 5732,
                  "Name": "Tywin Lannister",
                  "Phone": "+12025550352"
                }
              ],
              "Subcontractors": [
                {
                  "Id": 418,
                  "Name": "Small Council",
                  "Phone": "+12025550312"
                },
                {
                  "Id": 945,
                  "Name": "Order of Maesters",
                  "Phone": "+12025550646"
                }
              ],
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/attachments": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "summary": "api/attachments/",
        "description": "This method returns a list of attachments added to a work order.\r\nTo download a file with attachment, call the <strong>GET - api/attachments/GetDownloadUrl/</strong> that will return a temporary link for downloading the file.",
        "operationId": "Attachment_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AttachmentList"
            },
            "examples": {
              "Attachments": [
                {
                  "Sender": {
                    "Name": "Samwell Tarly",
                    "Phone": "+12025550148",
                    "Type": "CorrigoPro"
                  },
                  "Size": 234256756,
                  "SentAt": "2025-04-28T08:55:48.46342Z",
                  "DocumentType": 0,
                  "Visibility": "None",
                  "Subtype": "None",
                  "Id": "7c9e6679-7425-40de-944b-e07fc1f90ae7",
                  "Name": "test.doc",
                  "MimeType": "application/msword"
                },
                {
                  "Sender": {
                    "Name": "Petyr Baelish",
                    "Phone": "+12025550149",
                    "Type": "CorrigoProDirect"
                  },
                  "Size": 754368,
                  "SentAt": "2025-04-27T08:55:48.46342Z",
                  "DocumentType": 0,
                  "Visibility": "None",
                  "Subtype": "None",
                  "Id": "ba68655d-9e2a-498a-a8c4-7d6f821ded25",
                  "Name": "test.png",
                  "MimeType": "image/png"
                }
              ],
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Attachment"
        ],
        "summary": "api/attachments/",
        "description": "This mеthod allows to update uploaded file to a work order.",
        "operationId": "Attachment_Update",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateMessageAttachment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Attachment"
        ],
        "summary": "api/attachments/",
        "description": "This mеthod allows to attach a file to a work order.\r\nUpload a file by using <a href=\"https://www.w3.org/TR/html401/interact/forms.html#h-17.13.4\">multipart/form-data</a>, and add information about the attachment. When attachment is uploaded, the <strong>AttachmentId</strong> is returned.",
        "operationId": "Attachment_Upload",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UploadMessageAttachment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AttachmentUploaded"
            },
            "examples": {
              "AttachmentId": "7c9e6679-7425-40de-944b-e07fc1f90ae7",
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Attachment"
        ],
        "summary": "api/attachments/",
        "description": "This mеthod allows to delete uploaded file to a work order.",
        "operationId": "Attachment_Delete",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteAttachment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/attachments/downloadUrl": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "summary": "api/attachments/downloadUrl/",
        "description": "Use this method for getting a temporary link to a file attached to a work order.\r\n<br /><strong>Warning</strong>: You can download the attached file from the obtained URL within 15 minutes after the link is provided.\r\nDO NOT SAVE THIS LINK!.",
        "operationId": "Attachment_GetDownloadUrl",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "attachmentId",
            "in": "query",
            "description": "A unique identifier of the attached file from the CorrigoPro system.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AttachmentUrl"
            },
            "examples": {
              "TemporaryDownloadUrl": "https://proam.s3-us-west-1.amazonaws.com/0/52a72e7b-88eb-41fa-8b01-4a4a4b937cd6/test.png",
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/bulk/accept": {
      "put": {
        "tags": [
          "Bulk"
        ],
        "summary": "api/bulk/accept",
        "description": "This method allows to do a bulk accept of work orders.\r\nThe response to this operation contains details about each accepted work order.\r\nIf some of the work orders are not accepted, errors are returned.",
        "operationId": "Bulk_Accept",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkWoActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BulkActionResponse"
            },
            "examples": {
              "Results": [
                {
                  "WorkOrderId": 42
                },
                {
                  "WorkOrderId": 13,
                  "Error": {
                    "Code": 123,
                    "Message": "Details of failure."
                  }
                }
              ],
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/bulk/reject": {
      "put": {
        "tags": [
          "Bulk"
        ],
        "summary": "api/bulk/reject",
        "description": "This method allows to do a bulk reject of  work orders.\r\nThe reason of rejection, described in the <strong>Reason</strong> field is applied to all bulk rejected work orders.\r\nA response to this operation contains details about each rejected work order. Errors are returned if some of the work orders failed to be rejected.",
        "operationId": "Bulk_Reject",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkWoRejectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BulkActionResponse"
            },
            "examples": {
              "Results": [
                {
                  "WorkOrderId": 42
                },
                {
                  "WorkOrderId": 13,
                  "Error": {
                    "Code": 123,
                    "Message": "Details of failure."
                  }
                }
              ],
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/bulk/assign": {
      "put": {
        "tags": [
          "Bulk"
        ],
        "summary": "api/bulk/assign",
        "description": "This method should be used to assign members to the chats of the specified work orders.\r\n<br />\r\nIf a request contains members who are already assigned to a work order, the system ignores this case, and no error is returned.\r\nWork orders listed in the request are returned in the response.\r\nIf assign operation fails for some of work orders listed in the request, then the <strong>sError</strong> field for these work orders contains information about the error.\r\n<br /><strong>Note</strong>: The assign operation fails for members who do not belong to the branch of a work order. The error with details is returned.",
        "operationId": "Bulk_Assign",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkAssignRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BulkActionResponse"
            },
            "examples": {
              "Results": [
                {
                  "WorkOrderId": 42
                },
                {
                  "WorkOrderId": 13,
                  "Error": {
                    "Code": 123,
                    "Message": "Details of failure."
                  }
                }
              ],
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/bulk/unassign": {
      "put": {
        "tags": [
          "Bulk"
        ],
        "summary": "api/bulk/unassign",
        "description": "This method should be used for unassigning members from the chats of work orders.\r\n<br />\r\nIf a request contains members who are not assigned to a work order, the system ignores this case, and no error is returned.\r\nWork orders listed in the request are returned in the response.\r\nIf unassign operation fails for some of work orders listed in the request, then the <strong>Error</strong> field for these work orders contains additional information about the error.\r\n<br /><strong>Note</strong>: The unassign operation fails for members who do not belong to the branch of a work order. The error with details is returned.",
        "operationId": "Bulk_Unassign",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkAssignRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BulkActionResponse"
            },
            "examples": {
              "Results": [
                {
                  "WorkOrderId": 42
                },
                {
                  "WorkOrderId": 13,
                  "Error": {
                    "Code": 123,
                    "Message": "Details of failure."
                  }
                }
              ],
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/checklist": {
      "get": {
        "tags": [
          "CheckList"
        ],
        "summary": "api/checklist/",
        "description": "This method returns the current state of a <strong>CheckList</strong> of a work order.",
        "operationId": "CheckList_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CheckListItems"
            }
          }
        }
      },
      "put": {
        "tags": [
          "CheckList"
        ],
        "summary": "api/checklist/",
        "description": "This method allows to change state of <strong>CheckList</strong> items of a work order.",
        "operationId": "CheckList_Update",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutCheckList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/customers": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "api/customers/",
        "description": "This method retrieves a list of all customers with their IDs linked to the provider. The obtained information can be used  for entities mapping on the provider side of integration. It can also be used for getting <strong>CustomerId</strong> required for calling other methods, such as <strong>GET - api/customerSettings/</strong>.",
        "operationId": "Customer_Customers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomersResponse"
            }
          }
        }
      }
    },
    "/api/customerSettings": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "api/customerSettings/",
        "description": "This method retrieves customer specific settings. The obtained information is necessary during the <strong>CheckOut</strong> procedure. It is recommended to use this method before <strong>CheckOut</strong> calls to avoid rejection of requests due to validation errors.\r\n<br /><br /><strong>Important:</strong><br />\r\nThis method executes long-running queries to extract data, so it is strongly recommended to cache the customer settings on the provider side of integration, and refresh these data when necessary.",
        "operationId": "Customer_CustomerSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "description": "Identifier of a customer.<br />\r\nIt must correspond to the <strong>CustomerDetails.Id</strong> of a work order, or one of identifiers obtained from the <strong>GET - api/customers</strong> method.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerSettings"
            },
            "examples": {
              "CustomFields": [
                {
                  "Id": 6,
                  "LabelText": "Price",
                  "IsRequired": true,
                  "DataLength": 256,
                  "Values": [],
                  "Type": "Money"
                },
                {
                  "Id": 12,
                  "LabelText": "Date",
                  "IsRequired": false,
                  "DataLength": 256,
                  "Values": [],
                  "Type": "Date"
                },
                {
                  "Id": 15,
                  "LabelText": "Comment",
                  "IsRequired": true,
                  "DataLength": 256,
                  "Values": [
                    "Lorem ipsum dolor sit amet #1",
                    "Lorem ipsum dolor sit amet #2",
                    "Lorem ipsum dolor sit amet #3"
                  ],
                  "Type": "String"
                }
              ],
              "RepairCategories": [
                {
                  "Id": 1,
                  "Name": "Beverage Equipment",
                  "Codes": [
                    {
                      "Id": 2,
                      "Name": "Checked operation - unit OK"
                    },
                    {
                      "Id": 3,
                      "Name": "Cleaned/replaced water filter"
                    },
                    {
                      "Id": 4,
                      "Name": "Performed routine maintenance"
                    }
                  ]
                },
                {
                  "Id": 69,
                  "Name": "Grill",
                  "Codes": [
                    {
                      "Id": 70,
                      "Name": "Calibrated grill"
                    },
                    {
                      "Id": 71,
                      "Name": "Checked operation - unit OK"
                    },
                    {
                      "Id": 72,
                      "Name": "Cleaned unit"
                    }
                  ]
                }
              ],
              "AreRepairCodesAvailable": true,
              "IsRepairCodeRequired": true,
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/customerSettings/additionalFieldsDescriptors": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "api/customerSettings/additionalFieldsDescriptors",
        "description": "This method used to get custom fields configuration for the requestor.",
        "operationId": "Customer_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "description": "Identifier of a customer.<br />\r\nIt must correspond to the <strong>CustomerDetails.Id</strong> of a work order, or one of identifiers obtained from the <strong>GET - api/customers</strong> method.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdditionalFieldsDescriptors"
            }
          }
        }
      }
    },
    "/api/digitalrounds/search": {
      "post": {
        "tags": [
          "DigitalRounds"
        ],
        "summary": "api/digitalrounds/search",
        "description": "This method retrieves a digital rounds list.\r\n<br /><br /><strong>The request parameter RoundsStatus corresponds to the following operations:</strong><br />\r\n1:New<br />2:InProgress<br />3:Paused<br />4:Completed<br />5:Incomplete<br />6:Missed<br />7:Cancelled.<br />",
        "operationId": "DigitalRounds_GetRounds",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetRounds"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DigitalRoundsResponse"
            }
          }
        }
      }
    },
    "/api/digitalrounds/view": {
      "post": {
        "tags": [
          "DigitalRounds"
        ],
        "summary": "api/digitalrounds/view",
        "description": "This method retrieves a digital rounds view url.",
        "operationId": "DigitalRounds_ViewDigitalRounds",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDigitalRoundsViewStartUrl"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DigitalRoundsViewStartResponse"
            }
          }
        }
      }
    },
    "/api/digitalrounds/start": {
      "post": {
        "tags": [
          "DigitalRounds"
        ],
        "summary": "api/digitalrounds/start",
        "description": "This method retrieves a start digital rounds url.",
        "operationId": "DigitalRounds_StartDigitalRounds",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDigitalRoundsViewStartUrl"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DigitalRoundsViewStartResponse"
            }
          }
        }
      }
    },
    "/api/digitalrounds/participants/getavailableparticipants": {
      "get": {
        "tags": [
          "DigitalRounds"
        ],
        "summary": "api/digitalrounds/participants/getavailableparticipants",
        "description": "This method retrieves a digital rounds available participants.",
        "operationId": "DigitalRounds_GetAvailableParticipants",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "roundsId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DigitalRoundsAvailableParticipantsResponse"
            }
          }
        }
      }
    },
    "/api/digitalrounds/participants/assign": {
      "post": {
        "tags": [
          "DigitalRounds"
        ],
        "summary": "api/digitalrounds/participants/assign",
        "description": "This method allows to assign digital rounds participant.",
        "operationId": "DigitalRounds_AssignParticipant",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DigitalRoundsParticipantsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DigitalRoundsParticipantAssignedResponse"
            }
          }
        }
      }
    },
    "/api/digitalrounds/participants/unassign": {
      "post": {
        "tags": [
          "DigitalRounds"
        ],
        "summary": "api/digitalrounds/participants/unassign",
        "description": "This method allows to unassign digital rounds participant.",
        "operationId": "DigitalRounds_UnAssignParticipant",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DigitalRoundsParticipantsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DigitalRoundsParticipantUnAssignedResponse"
            }
          }
        }
      }
    },
    "/api/digitalrounds/accept": {
      "put": {
        "tags": [
          "DigitalRounds"
        ],
        "summary": "api/digitalrounds/accept",
        "description": "This method allows to accept a digital round. The method can be applied only to digital rounds in the <strong>New</strong> status.",
        "operationId": "DigitalRounds_Accept",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutAcceptDigitalRounds"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/digitalrounds/reject": {
      "put": {
        "tags": [
          "DigitalRounds"
        ],
        "summary": "api/digitalrounds/reject",
        "description": "This method allows to reject a digital round, and can be applied to digital rounds in the <strong>New</strong>, <strong>Open</strong>, <strong>Open:Paused</strong> status.<br />\r\nOnce a digital round is rejected, you can do nothing to it.",
        "operationId": "DigitalRounds_Reject",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutRejectDigitalRounds"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/equipment": {
      "get": {
        "tags": [
          "Equipment"
        ],
        "summary": "api/equipment/",
        "description": "This method retrieves information about equipment already added to the work order.\r\nIt returns only equipment summary, and does not contain detailed information.\r\nTo get the <strong>EquipmentType</strong> details of an existing piece of equipment, call the <strong>GET - api/equipment/details/</strong>.",
        "operationId": "Equipment_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EquipmentList"
            },
            "examples": {
              "Equipment": [
                {
                  "Id": 1082,
                  "Type": "Existing",
                  "EquipmentAssetId": 67181,
                  "Name": "255300 Integ Auto Ctrl of Fire-Suppression Sys",
                  "Comment": "Optional comment",
                  "FailureCategory": {
                    "Id": 1,
                    "Number": "FNC-P-01",
                    "Name": "Electrical"
                  },
                  "FailureProblem": {
                    "Id": 2,
                    "Number": "UFC-P-02",
                    "Name": "Motor fan dirty/clogged"
                  },
                  "FailureCause": {
                    "Id": 1,
                    "Number": "UFC-P-05",
                    "Name": "Motor Overheating"
                  },
                  "FailureRemedy": {
                    "Id": 2,
                    "Number": "UFC-P-02",
                    "Name": "Motor fan dirty/clogged"
                  },
                  "IsFailureCodesProperlyDefined": true
                },
                {
                  "Id": 1083,
                  "Type": "New",
                  "EquipmentAssetId": 67182,
                  "Name": "283113 Fire Alarm Ctrl GUI & Logic Sys",
                  "IsFailureCodesProperlyDefined": false
                }
              ],
              "FailureCodeState": "NotAvailable",
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Equipment"
        ],
        "summary": "api/equipment/",
        "description": "This method allows to edit equipment added to a work order.\r\nYou can modify the comment text, and attribute values if the Equipme<strong></strong>ntType is <span class=\"propOptKey\">Existing</span>.\r\n<br /><br />\r\nYou must first call the <strong>GET - api/equipment/</strong> method, and review the <strong>Id</strong> and the <strong>EquipmentAssetId</strong> of a piece of equipment that you want to edit in a work order. Then call the <strong>PUT - api/equipment/</strong>, and use the corresponding values from the Id and <strong>EquipmentAssetId</strong> fields that you obtained from the <strong>GET - api/equipment/</strong> method.",
        "operationId": "Equipment_Update",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutEquipment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Equipment"
        ],
        "summary": "api/equipment/",
        "description": "Use this method to add equipment to a work order.\r\nYou cannot add pieces of equipment to a work order if there is a record with <strong>EquipmentType</strong>=Excluding that is already added to the work order.\r\n<br /><br />\r\nTo add a new piece of equipment, specify New as <strong>EquipmentType</strong>, and add details about the equipment in the <strong>Comment</strong> field.\r\nTo add an existing equipment, you must first call the <strong>GET - api/equipment/available</strong> method, and review the <strong>EquipmentAssetId</strong> and <strong>Attributes</strong> of the equipment that you want to add to the work order.\r\nThen call the <strong>POST - api/equipment/</strong> method. Enter <span class=\"propOptKey\">Existing</span> as <strong>EquipmentType</strong>, specify an appropriate value from the <strong>EquipmentAssetId</strong> field, and enter the corresponding attributes from the <strong>Attributes</strong> entity.\r\nIf you cannot find <span class=\"propOptKey\">Existing</span> equipment in the list, use <strong>EquipmentType</strong> = <span class=\"propOptKey\">Unknown</span> and provide description of this equipment in the <strong>Comment</strong> field.",
        "operationId": "Equipment_Add",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutEquipment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Equipment"
        ],
        "summary": "api/equipment/",
        "description": "This method allows to remove a piece of equipment from a work order.\r\nTo remove a piece of equipment, first call the <strong>GET - api/equipment/</strong> method, and review the <strong>Id</strong> of the equipment that you want to remove. Specify this <strong>Id</strong> in the <strong>DELETE - api/equipment/</strong> method.",
        "operationId": "Equipment_Delete",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteEquipment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/equipment/available": {
      "get": {
        "tags": [
          "Equipment"
        ],
        "summary": "api/equipment/available",
        "description": "This method allows to get a list of the available equipment assets that can be added to a work order.\r\nThe pieces of equipment already added to a  work order are not returned.\r\nThis method returns only equipment summary, and does not return detailed information about equipment attributes.\r\nTo get detailed information about a piece of equipment, call the <strong>GET - api/equipment/details/</strong> method.",
        "operationId": "Equipment_Available",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EquipmentAssetList"
            },
            "examples": {
              "EquipmentAssets": [
                {
                  "Id": 67177,
                  "Name": "211213 Fire-Suppression Hoses & Nozzels"
                },
                {
                  "Id": 67178,
                  "Name": "211300 Fire-Suppression Sprinkler Systems"
                },
                {
                  "Id": 67179,
                  "Name": "212100 Carbon-Dioxide Fire-Extinguishing Systems"
                },
                {
                  "Id": 67180,
                  "Name": "233313.16-MOT Fire Dampers Motorised"
                },
                {
                  "Id": 67183,
                  "Name": "283123 Fire Alarm Annunciators & Fire Stations"
                }
              ],
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/equipment/details": {
      "get": {
        "tags": [
          "Equipment"
        ],
        "summary": "api/equipment/details",
        "description": "This method returns detailed information about a piece of equipment.",
        "operationId": "Equipment_Details",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "equipmentAssetId",
            "in": "query",
            "description": "Identifier of a piece of equipment in a customer system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EquipmentDetails"
            },
            "examples": {
              "Attributes": [
                {
                  "Id": 10176,
                  "LabelText": "Asset Safety Comments",
                  "Value": "Comment",
                  "Values": [],
                  "Type": "String",
                  "HistoryAvailable": false,
                  "DataLength": 256
                },
                {
                  "Id": 10177,
                  "LabelText": "Asset Status",
                  "Value": "Out-of-Service",
                  "Values": [
                    "In-Service",
                    "Out-of-Service",
                    "Stand-By",
                    "Emergency Use Only",
                    "Abandoned In Place",
                    "Seasonally In-Service",
                    "Back-Up",
                    "Removed from Facility",
                    "Critical Spare",
                    "Surplus"
                  ],
                  "Type": "String",
                  "HistoryAvailable": false,
                  "DataLength": 256
                }
              ],
              "FailureCategories": [
                {
                  "Id": 1,
                  "Number": "FNC-P-01",
                  "Name": "Electrical"
                },
                {
                  "Id": 2,
                  "Number": "PF-P-01",
                  "Name": "Mechanical/Lubrication"
                }
              ],
              "FailureProblems": [
                {
                  "CategoryIds": [
                    1
                  ],
                  "Id": 1,
                  "Number": "UFC-P-05",
                  "Name": "Motor Overheating"
                },
                {
                  "CategoryIds": [
                    1
                  ],
                  "Id": 2,
                  "Number": "UFC-P-02",
                  "Name": "Motor does not start"
                },
                {
                  "CategoryIds": [
                    2
                  ],
                  "Id": 3,
                  "Number": "UFC-F-01",
                  "Name": "Railing cracked"
                }
              ],
              "FailureCauses": [
                {
                  "CategoryIds": [
                    1
                  ],
                  "Id": 1,
                  "Number": "UFC-P-05",
                  "Name": "Overload tripped"
                },
                {
                  "CategoryIds": [
                    1
                  ],
                  "Id": 2,
                  "Number": "UFC-P-02",
                  "Name": "Motor fan dirty/clogged"
                }
              ],
              "FailureRemedies": [
                {
                  "CategoryIds": [
                    1
                  ],
                  "Id": 2,
                  "Number": "UFC-P-02",
                  "Name": "Motor fan dirty/clogged"
                },
                {
                  "CategoryIds": [
                    1
                  ],
                  "Id": 2,
                  "Number": "OVRHL-REBLD",
                  "Name": "Overhauled/Rebuilt"
                }
              ],
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/equipment/history": {
      "get": {
        "tags": [
          "Equipment"
        ],
        "summary": "api/equipment/history",
        "description": "This method returns history data about changes of equipment.",
        "operationId": "Equipment_History",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "equipmentAttributeId",
            "in": "query",
            "description": "The value of this parameter corresponds to the <strong>Id</strong> of the <strong>EquipmentAttributeDescriptor</strong> entity.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "equipmentAssetId",
            "in": "query",
            "description": "Identifier of a piece of equipment in a customer system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HistoryList"
            },
            "examples": {
              "Values": [
                {
                  "TimeStamp": "2025-04-18T08:55:48.46342Z",
                  "Value": "Value1"
                },
                {
                  "TimeStamp": "2025-04-23T08:55:48.46342Z",
                  "Value": "Value2"
                }
              ],
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/Health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "api/{controller}/{id}",
        "operationId": "Health_Readiness",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/heartbeat/checkhealth": {
      "get": {
        "tags": [
          "Heartbeat"
        ],
        "summary": "api/heartbeat/checkhealth",
        "operationId": "Heartbeat_CheckHealth",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/invoice": {
      "get": {
        "tags": [
          "Invoicing"
        ],
        "summary": "api/invoice/",
        "description": "This method retrieves information about Invoice added to the work order.\r\n<br /><strong>It will be unavailable if Invoicing App is disabled in a provider’s country.</strong>",
        "operationId": "Invoicing_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Invoicing"
        ],
        "summary": "api/invoice/",
        "description": "This method allows to edit Invoice added to a work order.\r\n<br /><strong>It will be unavailable if Invoicing App is disabled in a provider’s country.</strong>",
        "operationId": "Invoicing_Save",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutInvoice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InvoicingBaseResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Invoicing"
        ],
        "summary": "api/invoice",
        "description": "This method used for resetting invoice data of work order.\r\n<br /><strong>It will be unavailable if Invoicing App is disabled in a provider’s country.</strong>",
        "operationId": "Invoicing_DeleteInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deleteInvoiceRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BaseConcurrentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InvoicingBaseResponse"
            }
          }
        }
      }
    },
    "/api/invoice/submit": {
      "put": {
        "tags": [
          "Invoicing"
        ],
        "summary": "api/invoice/submit",
        "description": "This method allows to submit Invoice added to a work order.\r\n<br /><strong>It will be unavailable if Invoicing App is disabled in a provider’s country.</strong>",
        "operationId": "Invoicing_Submit",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitInvoice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/InvoicingBaseResponse"
            }
          },
          "400": {
            "description": "TaxValidationFailed",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse[TaxValidationResultModel]"
            }
          }
        }
      }
    },
    "/api/invoice/recall": {
      "post": {
        "tags": [
          "Invoicing"
        ],
        "summary": "api/invoice/recall",
        "operationId": "Invoicing_Recall",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecallInvoice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/invoice/pricelist": {
      "get": {
        "tags": [
          "Invoicing"
        ],
        "summary": "api/invoice/pricelist",
        "description": "This method retrieves information about available price list items of Invoice added to the work order.\r\n<br /><strong>It will be unavailable if Invoicing App is disabled in a provider’s country.</strong>",
        "operationId": "Invoicing_PriceList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "serviceDate",
            "in": "query",
            "description": "Date of service",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PriceListResponse"
            }
          }
        }
      }
    },
    "/api/invoice/attachments": {
      "get": {
        "tags": [
          "Invoicing"
        ],
        "summary": "api/invoice/attachments",
        "description": "This method returns a list of attachments added to an invoice.\r\nTo download a file with attachment, call the <strong>GET - api/invoice/attachments/GetDownloadUrl/</strong> that will return a temporary link for downloading the file.\r\n<br /><strong>It will be unavailable if Invoicing App is disabled in a provider’s country.</strong>",
        "operationId": "Invoicing_GetAttachments",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InvoiceAttachmentList"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Invoicing"
        ],
        "summary": "api/invoice/attachments",
        "description": "This mеthod allows to update a file attached to an Invoice.\r\n<br /><strong>It will be unavailable if Invoicing App is disabled in a provider’s country.</strong>",
        "operationId": "Invoicing_UpdateAttachment",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAttachment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InvoicingBaseResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Invoicing"
        ],
        "summary": "api/invoice/attachments",
        "description": "This mеthod allows to attach a file to an Invoice.\r\nUpload a file by using <a href=\"https://www.w3.org/TR/html401/interact/forms.html#h-17.13.4\">multipart/form-data</a>, and add information about the attachment. When attachment is uploaded, the <strong>AttachmentId</strong> is returned.\r\n<br /><strong>It will be unavailable if Invoicing App is disabled in a provider’s country.</strong>",
        "operationId": "Invoicing_AddAttachment",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UploadAttachment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InvoicingAttachmentUploaded"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Invoicing"
        ],
        "summary": "api/invoice/attachments/",
        "description": "This method allows to remove attachments from an invoice.\r\nTo remove attachments, first call the <strong>GET - api/invoice/attachments/ </strong> method, and review the <strong>Ids</strong> of the attachments that you want to remove. Specify this <strong>Ids</strong> in the <strong>DELETE - api/invoice/attachments/</strong> method.\r\n<br /><strong>It will be unavailable if Invoicing App is disabled in a provider’s country.</strong>",
        "operationId": "Invoicing_Delete",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteInvoiceAttachment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InvoicingBaseResponse"
            }
          }
        }
      }
    },
    "/api/invoice/attachments/GetDownloadUrl": {
      "get": {
        "tags": [
          "Invoicing"
        ],
        "summary": "api/invoice/attachments/GetDownloadUrl/",
        "description": "Use this method for getting a temporary link to a file attached to an invoice.\r\n<br /><strong>It will be unavailable if Invoicing App is disabled in a provider’s country.</strong><br /><strong>Warning</strong>: You can download the attached file from the obtained URL within 15 minutes after the link is provided.\r\nDO NOT SAVE THIS LINK!.",
        "operationId": "Invoicing_GetDownloadUrl",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "attachmentId",
            "in": "query",
            "description": "A unique identifier of the attached file from the CorrigoPro system.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AttachmentUrl"
            },
            "examples": {
              "TemporaryDownloadUrl": "https://proam.s3-us-west-1.amazonaws.com/0/52a72e7b-88eb-41fa-8b01-4a4a4b937cd6/test.png",
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/locations": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "api/locations/",
        "description": "This method returns all locations.",
        "operationId": "Locations_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "localeId",
            "in": "query",
            "description": "Response language. Defaults to 1033 (en-US).",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number. Defaults to 1.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Location"
              }
            }
          }
        }
      }
    },
    "/api/messages": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "api/messages/",
        "description": "This method returns all text messages sent by any user who has access to a work order.\r\n<br /><strong>Note</strong>: Only messages that are visible to ALL are returned.",
        "operationId": "Message_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MessageList"
            },
            "examples": {
              "Messages": [
                {
                  "Text": "Hello Direct!",
                  "SentAt": "2025-04-25T08:55:48.46342Z",
                  "Sender": {
                    "Name": "Samwell Tarly",
                    "Phone": "+12025550148",
                    "Type": "CorrigoPro"
                  },
                  "TextMessageId": 12345,
                  "WorkOrderId": 53
                },
                {
                  "Text": "Welcome to our magnificent api.",
                  "SentAt": "2025-04-25T22:55:48.4790438Z",
                  "Sender": {
                    "Name": "Petyr Baelish",
                    "Phone": "+12025550149",
                    "Type": "CorrigoProDirect"
                  },
                  "TextMessageId": 12346,
                  "WorkOrderId": 53
                }
              ],
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "api/messages/",
        "description": "This method should be used to send text messages to chat with ALL visibility (customer, cru members and subcontractors).",
        "operationId": "Message_Send",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "message",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostMessageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/messages/search": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "api/messages/search/",
        "description": "This method returns a list of messages based on the specified search criteria.",
        "operationId": "Message_Search",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetMessagesByFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MessageList"
            },
            "examples": {
              "Messages": [
                {
                  "Text": "Hello Direct!",
                  "SentAt": "2025-04-25T08:55:48.46342Z",
                  "Sender": {
                    "Name": "Samwell Tarly",
                    "Phone": "+12025550148",
                    "Type": "CorrigoPro"
                  },
                  "TextMessageId": 12345,
                  "WorkOrderId": 53
                },
                {
                  "Text": "Welcome to our magnificent api.",
                  "SentAt": "2025-04-25T22:55:48.4790438Z",
                  "Sender": {
                    "Name": "Petyr Baelish",
                    "Phone": "+12025550149",
                    "Type": "CorrigoProDirect"
                  },
                  "TextMessageId": 12346,
                  "WorkOrderId": 53
                }
              ],
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/priorities": {
      "get": {
        "tags": [
          "Priorities"
        ],
        "summary": "api/priorities/",
        "description": "This method returns all priorities.\r\nNote: Paging is only applied on overridden priorities.",
        "operationId": "Priorities_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "localeId",
            "in": "query",
            "description": "Response language. Defaults to 1033 (en-US).",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number. Defaults to 1.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PrioritiesResponse"
            }
          }
        }
      }
    },
    "/api/procedure": {
      "get": {
        "tags": [
          "Procedure"
        ],
        "summary": "api/procedure/",
        "description": "This method retrieves information about procedures and steps already added to the work order.\r\nTo get the step details, call the <strong>GET - api/procedure/step/</strong>.",
        "operationId": "Procedure_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProcedureListResponse"
            }
          }
        }
      }
    },
    "/api/procedure/step": {
      "get": {
        "tags": [
          "Procedure"
        ],
        "summary": "api/procedure/step",
        "description": "This method returns detailed information about a step.",
        "operationId": "Procedure_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "stepIds",
            "in": "query",
            "description": "Step identifiers in a customer system.",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StepsDetailsResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Procedure"
        ],
        "summary": "api/procedure/step",
        "description": "This method allows to edit procedure step added to a work order.",
        "operationId": "Procedure_Update",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProcedureStepRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/procedure/step/attachments": {
      "get": {
        "tags": [
          "Procedure"
        ],
        "summary": "api/procedure/step/attachments",
        "description": "This method returns a list of attachments added to a step.\r\nTo download a file with attachment, call the <strong>GET - api/procedure/step/attachments/GetDownloadUrl/</strong> that will return a temporary link for downloading the file.",
        "operationId": "Procedure_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "procedureId",
            "in": "query",
            "description": "Procedure identifier in a customer system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "stepId",
            "in": "query",
            "description": "Step identifier in a customer system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StepAttachmentList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Procedure"
        ],
        "summary": "api/procedure/step/attachments/",
        "description": "This mеthod allows to attach a file to a step.\r\nUpload a file by using <a href=\"https://www.w3.org/TR/html401/interact/forms.html#h-17.13.4\">multipart/form-data</a>, and add information about the attachment. When attachment is uploaded, the <strong>AttachmentId</strong> is returned.",
        "operationId": "Procedure_Upload",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UploadAttachmentToStep"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AttachmentUploaded"
            },
            "examples": {
              "AttachmentId": "7c9e6679-7425-40de-944b-e07fc1f90ae7",
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Procedure"
        ],
        "summary": "api/procedure/step/attachments/",
        "description": "This method allows to remove attachments from procedure`s step.\r\nTo remove attachments, first call the <strong>GET - api/procedure/step/attachments/ </strong> method, and review the <strong>Ids</strong> of the attachments that you want to remove. Specify this <strong>Ids</strong> in the <strong>DELETE - api/procedure/step/attachments/</strong> method.",
        "operationId": "Procedure_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "attachmentIds",
            "in": "query",
            "description": "A unique identifier of the attached file from the CorrigoPro system.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "stepId",
            "in": "query",
            "description": "Step identifier in a customer system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/procedure/step/tasks": {
      "get": {
        "tags": [
          "Procedure"
        ],
        "summary": "api/procedure/step/tasks",
        "description": "This method returns step tasks marked as “Corrective” associated with an Asset and will be used to create a new WO from procedure step.",
        "operationId": "Procedure_GetStepTasks",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "stepId",
            "in": "query",
            "description": "Step identifier in a customer system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StepTasksResponse"
            }
          }
        }
      }
    },
    "/api/procedure/step/correctiveWorkOrder": {
      "post": {
        "tags": [
          "Procedure"
        ],
        "summary": "api/procedure/step/correctiveWorkOrder",
        "description": "This method allows to create the Corrective Work that the client needs to do or have done as a result of the Procedure Step.\r\n Corrective Work Orders creation allowed only for steps with StepType = Field\r\nTo get the <strong>TaskId</strong> details for the corrective work order, call the <strong>GET - api/procedure/step/tasks/</strong>.",
        "operationId": "Procedure_CreateCorrectiveWorkOrder",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCorrectiveWorkOrderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/procedure/markAsNA": {
      "put": {
        "tags": [
          "Procedure"
        ],
        "summary": "api/procedure/markAsNA",
        "description": "This method marks specified procedure as not applicable.",
        "operationId": "Procedure_MarkAsNa",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MarkProcedureAsNaRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/procedure/step/attachments/GetDownloadUrl": {
      "get": {
        "tags": [
          "Procedure"
        ],
        "summary": "api/procedure/step/attachments/GetDownloadUrl/",
        "description": "Use this method for getting a temporary link to a file attached to a step.\r\n<br /><strong>Warning</strong>: You can download the attached file from the obtained URL within 15 minutes after the link is provided.\r\nDO NOT SAVE THIS LINK!.",
        "operationId": "Procedure_GetDownloadUrl",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "attachmentId",
            "in": "query",
            "description": "A unique identifier of the attached file from the CorrigoPro system.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AttachmentUrl"
            },
            "examples": {
              "TemporaryDownloadUrl": "https://proam.s3-us-west-1.amazonaws.com/0/52a72e7b-88eb-41fa-8b01-4a4a4b937cd6/test.png",
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/refrigerant/circuits": {
      "get": {
        "tags": [
          "Refrigerant"
        ],
        "summary": "api/refrigerant/circuits",
        "operationId": "Refrigerant_GetCircuits",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RefrigerantCircuitsResponse"
            }
          }
        }
      }
    },
    "/api/refrigerant/cylinders": {
      "get": {
        "tags": [
          "Refrigerant"
        ],
        "summary": "api/refrigerant/cylinders",
        "operationId": "Refrigerant_GetCylinders",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "isRecovery",
            "in": "query",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "circuitProductId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RefrigerantCylindersResponse"
            }
          }
        }
      }
    },
    "/api/refrigerant/transaction": {
      "get": {
        "tags": [
          "Refrigerant"
        ],
        "summary": "api/refrigerant/transaction",
        "description": "This method retrieves a refrigerant transaction with their TransactionId and ProviderWorkOrderId. Please via GET api/workorder request to get TransactionId.",
        "operationId": "Refrigerant_GetTransaction",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RefrigerantTransactionResponse"
            }
          }
        }
      }
    },
    "/api/refrigerant/availabletransactiontypes": {
      "get": {
        "tags": [
          "Refrigerant"
        ],
        "summary": "api/refrigerant/availabletransactiontypes",
        "description": "Retrieves the available transaction types for refrigerant.",
        "operationId": "Refrigerant_GetAvailableTransactionTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "circuitId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RefrigerantTransactionTypeResponse"
            }
          }
        }
      }
    },
    "/api/refrigerant/add": {
      "post": {
        "tags": [
          "Refrigerant"
        ],
        "summary": "api/refrigerant/add",
        "description": "This method retrieves a refrigerant transaction specific AddRefrigerantRequest.\r\n<br /><br /><strong>Mode 1:</strong><br /><strong>This parameter TypeId corresponds to the following operations:</strong><br />\r\n7:Add Refrigerant<br />8:Recover Refrigerant<br />6:Accidental Release<br />13:Identify Leak<br />14:Repair Leak<br />19:Test Leak (Initial)<br />15:Test Leak (Follow up).<br /><strong>This ExternalCylinder corresponds to the following operations:</strong><br />\r\nThe ExternalCylinder field are only necessary if TypeId is 7(Add Refrigerant) or 8(Recover Refrigerant) also CylinderId is 0.<br /><strong>This TestMethodId corresponds to the following operations:</strong><br />\r\n1:Not tested<br />2:Pressurizing<br />3:Electronic<br />4:Deep Vacuum<br />5:Soap Bubbles<br />6:Other<br />\r\nWhen TypeId is 13(Identify Leak), 14(Repair Leak), 19(Test Leak (Initial)), 15(Test Leak (Follow up)) the TestMethodId filed is required.<br /><br /><strong>Mode 2:</strong><br /><strong>This parameter TypeId corresponds to the transaction types return from api/refrigerant/availabletransactiontypes and which ScheduledTransactionId is zero(not a scheduled transaction):</strong><br />\r\n22: Leak Inspection<br />23: ALD Calibration<br />26: Serviced Or Leak Repaired<br /><strong>This TestMethodId corresponds to the following operations:</strong><br />\r\n2:Pressurizing<br />3:Electronic<br />4:Deep Vacuum<br />5:Soap Bubbles<br />6:Other<br />7:Calibrated Leak Detection Device<br />8:Dye Inject<br />9:Halide Detector<br />10:Oil Residue<br />11:Approved Alternate<br />\r\nWhen TypeId is 22(Leak Inspection), or 26(Serviced Or Leak Repaired) and WasLeakFoundOrCircuitOpened is true, the TestMethodId filed is required.<br /><strong>This LeakCauseId corresponds to the following operations:</strong><br />\r\nCorrosion, JointFailure, NormalWear, RubOut, Rupture, SealFailure, Vibration, Abuse, Warranty, MechanicalFailure<br /><strong>This LeakLocationId corresponds to the following operations:</strong><br />\r\nCompressor, DischargeLine, Condenser, Receiver, LiquidLine, Evaporator, SuctionLine, HeatRecovery, Piping, Purge, Valve, RuptureDisc<br />\r\nWhen TypeId in the transaction getting from GET api/workorder is 26(Serviced Or Leak Repaired) and WasLeakFoundOrCircuitOpened is true.<br /><strong>This LeakLocationDetailId corresponds to the following operations:</strong><br /><strong>When LeakLocationId is Compressor:</strong><br />\r\nBodyOrTerminalLugs, Fittings, FlangesOrCouplings, HeadGasket, OilFloat, OilSeparatorOrOilLine, PressureControlTransducer, Schrader, ShaftSeal, VibrationEliminator, LiquidInjectionValve, CompressorRepairNotOtherwiseListed.<br /><strong>When LeakLocationId is DischargeLine:</strong><br />\r\nAmbientValve, BallValve, CheckValve, Header, HotReclaimCoil, HotGasBypass, Muffler, SchraderDisChargeLine, Piping, OilSeparatorOrRes, PressureRegulatingValve, PressureControlTransducerDischargeLine, DischargeLineRepairNotOtherwiseListed.<br /><strong>When LeakLocationId is Condenser:</strong><br />\r\nBallValveCondensor, CondenserCoil, HeaderOrPiping, SchraderCondensor, SplittingValve, TubeBundle, PressureControlTransducerCondensor, CondenserRepairNotOtherwiseListed.<br /><strong>When LeakLocationId is Receiver:</strong><br />\r\nKingValve, LevelIndicatorOrAlarm, PressureReliefValve, ReceiverRepairNotOtherwiseListed.<br /><strong>When LeakLocationId is LiquidLine:</strong><br />\r\nBallValveLiquidLine, DifferentialValve, Drier, HeaderOrPipingLiquidLine, Pump, SchraderLiquidLine, SightGlass, SolenoidValve, SubCooler, PressureControlTransducerLiquidLine, LiquidLineRepairNotOtherwiseListed.<br /><strong>When LeakLocationId is Evaporator:</strong><br />\r\nBallValveEvaporator, Coil, Distributor, PipingEvaporator, SchraderEvaporator, ExpansionDevice, SecondaryHeatExchanger, EvaporatorRepairNotOtherwiseListed.<br /><strong>When LeakLocationId is SuctionLine:</strong><br />\r\nAccumulator, CPR, EPR, FilterShell, SchraderSuctionLine, BallValveSuctionLine, PipingOrHeader, PressureControlTransducerSuctionLine, SuctionLineRepairNotOtherwiseListed.<br /><strong>When LeakLocationId is HeatRecovery:</strong><br />\r\nValve.<br /><strong>When LeakLocationId is Piping:</strong><br />\r\nCapillaryTube, JointFlare, JointSoldered, JointThreaded, JointWelded, Other, PipeWear.<br /><strong>When LeakLocationId is Purge:</strong><br />\r\nSolenoidValveForPurge, CondensingUnit, Filter, IsolationValves, RegenerationTank, SystemPiping, TankOrExchanger, PurgeRepairNotOtherwiseListed.<br /><strong>When LeakLocationId is Valve:</strong><br />\r\nValveService.<br />\r\nWhen TypeId in the transaction getting from GET api/workorder is 26(Serviced Or Leak Repaired) and WasLeakFoundOrCircuitOpened is true and LeakLocationId is not RuptureDisc.<br /><strong>This TypeOfRepairId corresponds to the following operations:</strong><br />\r\nAuditOrInspect, Weld, Replace, Bypass, Repair, Remove, Tighten, Newcap, Relocate, LeakInspection, Calibrate, Other<br />\r\nWhen TypeId in the transaction getting from GET api/workorder is 26(Serviced Or Leak Repaired) and WasLeakFoundOrCircuitOpened is true.<br />",
        "operationId": "Refrigerant_AddRefrigerant",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddRefrigerantRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AddRefrigerantResponse"
            }
          }
        }
      }
    },
    "/api/refrigerant/delete": {
      "delete": {
        "tags": [
          "Refrigerant"
        ],
        "summary": "api/refrigerant/delete",
        "description": "This method allows you to delete the Refrigerant transaction if you can't find the TransactionId please via GET api/workorder request to get it.",
        "operationId": "Refrigerant_DeleteRefrigerant",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/refrigerant/update": {
      "put": {
        "tags": [
          "Refrigerant"
        ],
        "summary": "api/refrigerant/update",
        "description": "This method allows you to update the Refrigerant transaction if you can't find the Id(TransactionId) please via GET api/workorder request to get it.\r\n<br /><br /><strong>This parameter CertificationId means Certification's Id in CorrigoPro side</strong><br />\r\nIt is not mandatory, please via GET api/refrigerant/certification request to get it.<br /><br /><strong>This parameter ClientId means Cru member's Id in CorrigoPro side</strong><br />\r\nIt is not mandatory, please via GET api/associates request to get it.<br /><br /><strong>This TestMethodId corresponds to the following operations:</strong><br />\r\nPressurizing, Electronic, DeepVacuum, SoapBubbles, Other, CalibratedLeakDetectionDevice, DyeInject, HalideDetector, OilResidue, ApprovedAlternate<br />\r\nWhen TypeId in the transaction getting from GET api/workorder is 13(Identify Leak), 14(Repair Leak), 19(Test Leak (Initial)), 15(Test Leak (Follow up)) the TestMethodId filed is required.<br /><strong>This parameter LeaksFoundCount only accept integer range from 0 to 5.</strong><br /><br /><strong>This LeakCauseId corresponds to the following operations:</strong><br />\r\nCorrosion, JointFailure, NormalWear, RubOut, Rupture, SealFailure, Vibration, Abuse, Warranty, MechanicalFailure<br /><strong>This LeakLocationId corresponds to the following operations:</strong><br />\r\nCompressor, DischargeLine, Condenser, Receiver, LiquidLine, Evaporator, SuctionLine, HeatRecovery, Piping, Purge, Valve, RuptureDisc<br />\r\nWhen TypeId in the transaction getting from GET api/workorder is 13(Identify Leak).<br /><br /><strong>This LeakLocationDetailId corresponds to the following operations:</strong><br /><strong>When LeakLocationId is Compressor:</strong><br />\r\nBodyOrTerminalLugs, Fittings, FlangesOrCouplings, HeadGasket, OilFloat, OilSeparatorOrOilLine, PressureControlTransducer, Schrader, ShaftSeal, VibrationEliminator, LiquidInjectionValve, CompressorRepairNotOtherwiseListed.<br /><strong>When LeakLocationId is DischargeLine:</strong><br />\r\nAmbientValve, BallValve, CheckValve, Header, HotReclaimCoil, HotGasBypass, Muffler, SchraderDisChargeLine, Piping, OilSeparatorOrRes, PressureRegulatingValve, PressureControlTransducerDischargeLine, DischargeLineRepairNotOtherwiseListed.<br /><strong>When LeakLocationId is Condenser:</strong><br />\r\nBallValveCondensor, CondenserCoil, HeaderOrPiping, SchraderCondensor, SplittingValve, TubeBundle, PressureControlTransducerCondensor, CondenserRepairNotOtherwiseListed.<br /><strong>When LeakLocationId is Receiver:</strong><br />\r\nKingValve, LevelIndicatorOrAlarm, PressureReliefValve, ReceiverRepairNotOtherwiseListed.<br /><strong>When LeakLocationId is LiquidLine:</strong><br />\r\nBallValveLiquidLine, DifferentialValve, Drier, HeaderOrPipingLiquidLine, Pump, SchraderLiquidLine, SightGlass, SolenoidValve, SubCooler, PressureControlTransducerLiquidLine, LiquidLineRepairNotOtherwiseListed.<br /><strong>When LeakLocationId is Evaporator:</strong><br />\r\nBallValveEvaporator, Coil, Distributor, PipingEvaporator, SchraderEvaporator, ExpansionDevice, SecondaryHeatExchanger, EvaporatorRepairNotOtherwiseListed.<br /><strong>When LeakLocationId is SuctionLine:</strong><br />\r\nAccumulator, CPR, EPR, FilterShell, SchraderSuctionLine, BallValveSuctionLine, PipingOrHeader, PressureControlTransducerSuctionLine, SuctionLineRepairNotOtherwiseListed.<br /><strong>When LeakLocationId is HeatRecovery:</strong><br />\r\nValve.<br /><strong>When LeakLocationId is Piping:</strong><br />\r\nCapillaryTube, JointFlare, JointSoldered, JointThreaded, JointWelded, Other, PipeWear.<br /><strong>When LeakLocationId is Purge:</strong><br />\r\nSolenoidValveForPurge, CondensingUnit, Filter, IsolationValves, RegenerationTank, SystemPiping, TankOrExchanger, PurgeRepairNotOtherwiseListed.<br /><strong>When LeakLocationId is Valve:</strong><br />\r\nValveService.<br />\r\nWhen TypeId in the transaction getting from GET api/workorder is 13(Identify Leak) and LeakLocationId is not RuptureDisc.<br /><br /><strong>This TypeOfRepairId corresponds to the following operations:</strong><br />\r\nAuditOrInspect, Weld, Replace, Bypass, Repair, Remove, Tighten, Newcap, Relocate, LeakInspection, Calibrate, Other<br />\r\nWhen TypeId in the transaction getting from GET api/workorder is 14(Repair Leak).<br /><br /><strong>This StockTypeId corresponds to the following operations:</strong><br />\r\nSupplierStock, OwnerStock<br />\r\nWhen TypeId in the transaction getting from GET api/workorder is 7(Added), 8(Recovered).<br />",
        "operationId": "Refrigerant_UpdateRefrigerant",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutRefrigerantRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateRefrigerantResponse"
            }
          }
        }
      }
    },
    "/api/refrigerant/certification": {
      "get": {
        "tags": [
          "Refrigerant"
        ],
        "summary": "api/refrigerant/certification",
        "description": "This method retrieves a refrigerant certification with their ClientId. Please via GET api/associates request to get ClientId.\r\n<br /><br /><strong>The response parameter CertificationClass corresponds to the following operations:</strong><br />\r\n0:None<br />1:Class1<br />2:Class1AndClass2<br />3:Class1AndClass2AndClass3<br />4:Class1AndClass3<br />5:Class2<br />6:Class2AndClass3.<br />7:Class3.<br />8:Universal.<br />",
        "operationId": "Refrigerant_GetCertification",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RefrigerantCertificationResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Refrigerant"
        ],
        "summary": "api/refrigerant/certification",
        "description": "This method is to update refrigerant certification with Certification Id. Please via GET api/associates request to get CruMemberId,\r\nand via GET api/refrigerant/certification request to get CertificationId.",
        "operationId": "Refrigerant_UpdateCertification",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutRefrigerantCertificationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Refrigerant"
        ],
        "summary": "api/refrigerant/certification",
        "description": "This method is to add refrigerant certification with their CruMemberId. Please via GET api/associates request to get CruMemberId.\r\n<br /><br /><strong>The response parameter CertificationClass corresponds to the following operations:</strong><br />\r\n0:None<br />1:Class1<br />2:Class1AndClass2<br />3:Class1AndClass2AndClass3<br />4:Class1AndClass3<br />5:Class2<br />6:Class2AndClass3.<br />7:Class3.<br />8:Universal.<br />",
        "operationId": "Refrigerant_AddCertification",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddRefrigerantCertificationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RefrigerantCertificationResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Refrigerant"
        ],
        "summary": "api/refrigerant/certification",
        "description": "This method is to delete refrigerant certification with Certification Id. Please via GET api/refrigerant/certification request to get CertificationId.",
        "operationId": "Refrigerant_DeleteCertification",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteRefrigerantCertificationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/requiredDocument": {
      "get": {
        "tags": [
          "RequiredDocument"
        ],
        "summary": "api/requiredDocument/",
        "description": "This method returns a list of required documents added to a work order.\r\nTo download a file with attachment, call the <strong>GET - api/requiredDocument/GetDownloadUrl/</strong> that will return a temporary link for downloading the file.",
        "operationId": "RequiredDocument_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RequiredDocumentList"
            }
          }
        }
      },
      "put": {
        "tags": [
          "RequiredDocument"
        ],
        "summary": "api/requiredDocument/",
        "description": "This method allows to update required document details.\r\nTo check detailed information about a required documents call GET - api/requiredDocument/.",
        "operationId": "RequiredDocument_Update",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BaseRequiredDocumentUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RequiredDocumentUpdated"
            }
          }
        }
      },
      "post": {
        "tags": [
          "RequiredDocument"
        ],
        "summary": "api/requiredDocument/",
        "description": "This method allows to fill required document with attachment and required fields.\r\nTo check detailed information about a required documents call GET - api/requiredDocument/\r\nUpload a file by using <a href=\"https://www.w3.org/TR/html401/interact/forms.html#h-17.13.4\">multipart/form-data</a>, and add information about the required document. When attachment is uploaded, the <strong>AttachmentId</strong> is returned.",
        "operationId": "RequiredDocument_Add",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddRequiredDocumentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RequiredDocumentAdded"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RequiredDocument"
        ],
        "summary": "api/requiredDocument/",
        "description": "This method allows to delete uploaded to a required document file and clear all document fields.",
        "operationId": "RequiredDocument_Delete",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BaseRequiredDocumentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/requiredDocument/downloadUrl": {
      "get": {
        "tags": [
          "RequiredDocument"
        ],
        "summary": "api/requiredDocument/downloadUrl/",
        "description": "Use this method for getting a temporary link to a file attached to a required document.\r\n<br /><strong>Warning</strong>: You can download the attached file from the obtained URL within 15 minutes after the link is provided.\r\nDO NOT SAVE THIS LINK!.",
        "operationId": "RequiredDocument_GetDownloadUrl",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "attachmentId",
            "in": "query",
            "description": "A unique identifier of the attached file from the CorrigoPro system.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AttachmentUrl"
            },
            "examples": {
              "TemporaryDownloadUrl": "https://proam.s3-us-west-1.amazonaws.com/0/52a72e7b-88eb-41fa-8b01-4a4a4b937cd6/test.png",
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/specialties": {
      "get": {
        "tags": [
          "Specialties"
        ],
        "summary": "api/specialties/",
        "description": "This method returns all specialties.",
        "operationId": "Specialties_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "localeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SpecialtiesResponse"
            }
          }
        }
      }
    },
    "/api/visits/services": {
      "get": {
        "tags": [
          "Visits"
        ],
        "summary": "api/visits/services",
        "operationId": "Visits_GetServices",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VisitServiceList"
            }
          }
        }
      }
    },
    "/api/visits/checkIn": {
      "put": {
        "tags": [
          "Visits"
        ],
        "summary": "api/visits/checkIn",
        "description": "This method should be called when a technician/subcontractor arrives on site, and starts the work described in the work order.\r\nThis method can be called only if the work order is in <strong>Accepted</strong> or <strong>Paused</strong> status.\r\n<br /><br /><strong>Note</strong>: The information about geographical location of a technician/subcontractor at the time of the <strong>CheckIn</strong> operation is required for verification of the work order in the Corrigo Enterprise.\r\n<br />\r\nThe optional parameter VisitServices, please via GET api/workorder or api/visits/services request to get Visit Services.",
        "operationId": "Visits_VisitsCheckIn",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutVisitsCheckIn"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/visits/checkOut": {
      "put": {
        "tags": [
          "Visits"
        ],
        "summary": "api/visits/checkOut",
        "description": "This method should be called when a work order is temporarily stopped due to some reason, such as end of a work day or lunch time.\r\nThis method can be called only when a work order is  in the <strong>CheckedIn</strong> status.\r\n<br /><br /><strong>Note</strong>: The information about geographical location of a technician/subcontractor at the time of the <strong>CheckOut</strong> operation is required for verification of  the work order in the Corrigo Enterprise.\r\n<br />\r\nThe optional parameter VisitServices, please via GET api/workorder request to get Visit Services.",
        "operationId": "Visits_VisitsCheckOut",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutVisitsCheckOut"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/visits": {
      "get": {
        "tags": [
          "Visits"
        ],
        "summary": "api/visits",
        "description": "Handles the HTTP GET request to retrieve visits associated with a specific work order.\r\nInformation for Visits here will be present when the User performs an Accept and Check In.",
        "operationId": "Visits_GetVisits",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VisitResponse"
            }
          }
        }
      }
    },
    "/api/visits/attachmentUrl": {
      "get": {
        "tags": [
          "Visits"
        ],
        "summary": "api/visits/attachmentUrl",
        "description": "Use this method for getting a temporary link to a file attached to a step.\r\n<br /><strong>Warning</strong>: You can download the attached file from the obtained URL within 15 minutes after the link is provided.\r\nDO NOT SAVE THIS LINK!.",
        "operationId": "Visits_GetDownloadUrl",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "attachmentId",
            "in": "query",
            "description": "A unique identifier of the attached file from the CorrigoPro system.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AttachmentUrl"
            },
            "examples": {
              "TemporaryDownloadUrl": "https://proam.s3-us-west-1.amazonaws.com/0/52a72e7b-88eb-41fa-8b01-4a4a4b937cd6/test.png",
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/visits/attachments": {
      "post": {
        "tags": [
          "Visits"
        ],
        "summary": "api/visits/attachments",
        "description": "This mеthod allows to attach a file to a visit.\r\nUpload a file by using <a href=\"https://www.w3.org/TR/html401/interact/forms.html#h-17.13.4\">multipart/form-data</a>, and add information about the attachment. When attachment is uploaded, the <strong>AttachmentId</strong> is returned.",
        "operationId": "Visits_Upload",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddVisitsAttachment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AttachmentUploaded"
            },
            "examples": {
              "AttachmentId": "7c9e6679-7425-40de-944b-e07fc1f90ae7",
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Visits"
        ],
        "summary": "api/visits/attachments",
        "description": "This method allows to remove attachments from a visit.\r\nTo remove attachments, first call the <strong>GET - api/visits/ </strong> method, and review the <strong>attachmentId</strong> of the attachments that you want to remove. Specify this <strong>attachmentId</strong> in the <strong>DELETE - api/visits/attachments</strong> method.",
        "operationId": "Visits_Delete",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteVisitsAttachment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/workOrder": {
      "get": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "api/workOrder/",
        "description": "This method allows to retrieve all the latest information about a list of work orders.\r\nYou cannot retrieve more than 50 work orders in a single call.<br />\r\nIf you do not use WebHooks notifications that send updates about new orders, you can use this method to get full information about a work order, available in the <strong>WorkOrderSearchResults</strong> entity.",
        "operationId": "WorkOrder_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Unique identifiers of  work orders in the CorrigoPro system.",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "maxItems": 50
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkOrderList"
            },
            "examples": {
              "WorkOrders": [
                {
                  "WorkOrderNumber": "WN73243",
                  "WorkOrderId": 42,
                  "BranchId": 19872,
                  "Schedule": {
                    "ScheduledStart": "2025-04-28T05:55:48.4790438Z",
                    "Pte": "CallFirst"
                  },
                  "Type": "PMRM",
                  "WorkType": {
                    "Category": "PMRM",
                    "Id": 2,
                    "Name": "PmRm",
                    "IsVisit": false
                  },
                  "AccompanyingMessage": "Here goes accompanying message, description of a Work Order in a plain text format.",
                  "Nte": {
                    "Amount": 300.0,
                    "IsQuoteMultiline": false,
                    "DtLastUpdate": "0001-01-01T00:00:00"
                  },
                  "Sla": {
                    "DueDate": "2025-04-28T18:55:48.4790438Z",
                    "OnSiteBy": "2025-04-28T05:55:48.4790438Z",
                    "AcknowledgeBy": "2025-04-28T00:55:48.4790438Z",
                    "PriorityId": 2,
                    "PriorityName": "HIGH",
                    "IsEmergency": true
                  },
                  "WorkDetails": {
                    "CheckList": [
                      {
                        "SortingIndex": 1,
                        "Description": "Visual Inspections Task A001 PIPING-HOSE/MECH/VI-01 General",
                        "Id": 6,
                        "IsDone": false
                      },
                      {
                        "SortingIndex": 2,
                        "Description": "Visual Inspections Task A002 PIPING-HOSE/MECH/VI-01 Hoses/Nozzels/Pipe",
                        "Id": 7,
                        "IsDone": false
                      }
                    ],
                    "Assets": [
                      {
                        "Id": 46182,
                        "Path": "BUILDING EXTERIOR>BACK LOT",
                        "Task": "Graffiti",
                        "AssetName": "Dumpster Area",
                        "Comment": "Some optional description.",
                        "Type": "Building",
                        "TypeId": 2,
                        "Model": {
                          "Id": 49602,
                          "Name": "Base Building"
                        }
                      },
                      {
                        "Id": 45822,
                        "Path": "EQUIPMENT>COOKING",
                        "Task": "Cleaning problem",
                        "AssetName": "Combi Oven",
                        "Type": "Equipment",
                        "TypeId": 8,
                        "Model": {
                          "Id": 49602,
                          "Name": "Oven"
                        }
                      }
                    ],
                    "Flags": 0
                  },
                  "Contact": {
                    "FullName": "Jon Snow",
                    "ContactAt": "Please, email me at: jon.snow@email.com, or call: 2025550141",
                    "Phones": [
                      "+12025550141"
                    ],
                    "Emails": [
                      "jon.snow@email.com"
                    ]
                  },
                  "ServiceLocation": {
                    "OccupantID": 327,
                    "Address": {
                      "City": "San Mateo",
                      "Country": "United States",
                      "State": "CA",
                      "Street1": "S. Norfolk St. Suite 100",
                      "PostalCode": "1900"
                    },
                    "Geo": {
                      "Latitude": 33.803559,
                      "Longitude": -117.930203
                    },
                    "OccupantName": "5340 - 12909 HARBOR BOULEVARD",
                    "SpaceName": "Restaurant",
                    "SpaceId": 28111
                  },
                  "Customer": {
                    "Id": 234,
                    "Name": "ABC Inc"
                  },
                  "IsPrebilled": false,
                  "IsWarranty": false,
                  "Created": "2025-04-27T08:55:48.4790438Z",
                  "LastUpdate": "2025-04-27T08:55:48.4790438Z",
                  "Status": "New",
                  "Currency": "USD",
                  "TimeZone": "Standard Time Zone",
                  "WorkZoneNumber": "5340",
                  "InternalNote": "Here goes internal note",
                  "IsmStatus": "Waiting"
                },
                {
                  "WorkOrderNumber": "WN73248",
                  "WorkOrderId": 43,
                  "BranchId": 19873,
                  "IVRInfo": {
                    "IvrNumber": "+12025550110",
                    "WonInfo": "An optional customer-specific instructions",
                    "IvrCode": "972756674"
                  },
                  "Schedule": {
                    "ScheduledStart": "2025-04-28T05:55:48.4790438Z",
                    "Pte": "CallFirst"
                  },
                  "Type": "Request",
                  "WorkType": {
                    "Category": "Request",
                    "Id": 270,
                    "Name": "Reactive",
                    "IsVisit": false
                  },
                  "AccompanyingMessage": "Here goes accompanying message, description of a Work Order in a plain text format.",
                  "Nte": {
                    "Amount": 1000.0,
                    "Quote": {
                      "Amount": 1000.0,
                      "QuoteStatus": "Approved",
                      "Comment": "We need more money to by parts.",
                      "DiscountAmount": 0.0,
                      "DiscountType": "None"
                    },
                    "IsQuoteMultiline": false,
                    "DtLastUpdate": "0001-01-01T00:00:00"
                  },
                  "Sla": {
                    "DueDate": "2025-04-28T18:55:48.4790438Z",
                    "OnSiteBy": "2025-04-28T05:55:48.4790438Z",
                    "AcknowledgeBy": "2025-04-28T00:55:48.4790438Z",
                    "PriorityId": 1,
                    "PriorityName": "NORMAL",
                    "IsEmergency": false
                  },
                  "WorkDetails": {
                    "Procedures": [
                      {
                        "Id": 1,
                        "Order": 2,
                        "Name": "Procedure 1",
                        "AllowMarkNotApplicable": true,
                        "Status": "Open",
                        "Steps": [
                          {
                            "Order": 1,
                            "IsRequired": false,
                            "Description": "Field Date pick-list",
                            "StepType": "Field",
                            "Label": "Date pick-list",
                            "DataType": "Date",
                            "ActionsRequired": "None",
                            "ActionsTaken": "None",
                            "IsVisible": false,
                            "Id": 7942,
                            "Status": "Open",
                            "Comment": ""
                          },
                          {
                            "Order": 2,
                            "IsRequired": false,
                            "Description": "Field Number (integer) pick-list",
                            "StepType": "Field",
                            "Label": "Number pick-list",
                            "DataType": "Float",
                            "ActionsRequired": "Document, WorkOrder",
                            "ActionsTaken": "WorkOrder",
                            "IsVisible": false,
                            "Id": 7943,
                            "Status": "Open",
                            "Comment": ""
                          },
                          {
                            "Order": 3,
                            "IsRequired": false,
                            "Description": "Field Numeric pick-list",
                            "StepType": "Field",
                            "Label": "Numeric pick-list",
                            "DataType": "Float",
                            "ActionsRequired": "None",
                            "ActionsTaken": "None",
                            "IsVisible": false,
                            "Id": 7944,
                            "Status": "Open",
                            "Comment": ""
                          }
                        ]
                      }
                    ],
                    "Assets": [
                      {
                        "Id": 45231,
                        "Path": "BUILDING EXTERIOR>BACK LOT",
                        "Task": "Graffiti",
                        "AssetName": "Dumpster Area",
                        "Comment": "Some optional description.",
                        "Type": "Building",
                        "TypeId": 2,
                        "Model": {
                          "Id": 49602,
                          "Name": "Base Building"
                        }
                      },
                      {
                        "Id": 65214,
                        "Path": "EQUIPMENT>COOKING",
                        "Task": "Cleaning problem",
                        "AssetName": "Combi Oven",
                        "Type": "Equipment",
                        "TypeId": 8,
                        "Model": {
                          "Id": 49602,
                          "Name": "Oven"
                        }
                      }
                    ],
                    "Flags": 0
                  },
                  "Contact": {
                    "FullName": "Jon Snow",
                    "ContactAt": "2025550141",
                    "Phones": [
                      "+12025550141"
                    ]
                  },
                  "ServiceLocation": {
                    "OccupantID": 327,
                    "Address": {
                      "City": "San Mateo",
                      "Country": "United States",
                      "State": "CA",
                      "Street1": "S. Norfolk St. Suite 100",
                      "PostalCode": "1900"
                    },
                    "Geo": {
                      "Latitude": 33.803559,
                      "Longitude": -117.930203
                    },
                    "OccupantName": "5340 - 12909 HARBOR BOULEVARD",
                    "SpaceName": "Restaurant",
                    "SpaceId": 28111
                  },
                  "Customer": {
                    "Id": 234,
                    "Name": "ABC Inc"
                  },
                  "IsPrebilled": false,
                  "IsWarranty": false,
                  "Created": "2025-04-27T08:55:48.4790438Z",
                  "LastUpdate": "2025-04-28T08:55:48.4790438Z",
                  "Feedback": {
                    "TimeStamp": "2025-04-28T08:55:48.4790438Z",
                    "Actor": "Jon Snow",
                    "Comment": "Great work!",
                    "Type": "Positive"
                  },
                  "Status": "Verified",
                  "Currency": "USD",
                  "TimeZone": "Standart Time Zone",
                  "WorkZoneNumber": "5340",
                  "InternalNote": "Here goes internal note",
                  "LastAction": {
                    "DtStamp": "2025-04-28T00:55:48.4790438Z",
                    "EventType": "Reject",
                    "Data": {
                      "Comment": "Rejection Reason comment"
                    }
                  },
                  "IsmStatus": "NotApplicable"
                }
              ],
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/workOrder/search": {
      "post": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "api/workOrder/search/",
        "description": "This method returns a list of available work  orders based on the specified search criteria.\r\nThe returned list of entities contains information that can be used for filtering.\r\nTo retrieve  more details about a work order, call the <strong>GET - api/workOrder/</strong> method.",
        "operationId": "WorkOrder_Search",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LightweightWorkOrderList"
            },
            "examples": {
              "WorkOrders": [
                {
                  "WorkOrderNumber": "WN73243",
                  "WorkOrderId": 42,
                  "BranchId": 19872,
                  "Type": "PMRM",
                  "Sla": {
                    "DueDate": "2025-04-28T18:55:48.4790438Z",
                    "OnSiteBy": "2025-04-28T05:55:48.4790438Z",
                    "AcknowledgeBy": "2025-04-28T00:55:48.4790438Z",
                    "PriorityId": 2,
                    "PriorityName": "HIGH",
                    "IsEmergency": true
                  },
                  "Status": "New",
                  "Customer": {
                    "Id": 234,
                    "Name": "ABC Inc"
                  },
                  "LastUpdate": "2025-04-27T08:55:48.4790438Z",
                  "Created": "2025-04-27T08:55:48.4790438Z"
                },
                {
                  "WorkOrderNumber": "WN73248",
                  "WorkOrderId": 43,
                  "BranchId": 19873,
                  "Type": "Request",
                  "Sla": {
                    "DueDate": "2025-04-28T18:55:48.4790438Z",
                    "OnSiteBy": "2025-04-28T05:55:48.4790438Z",
                    "AcknowledgeBy": "2025-04-28T00:55:48.4790438Z",
                    "PriorityId": 1,
                    "PriorityName": "NORMAL",
                    "IsEmergency": false
                  },
                  "Status": "Verified",
                  "Customer": {
                    "Id": 234,
                    "Name": "ABC Inc"
                  },
                  "LastUpdate": "2025-04-28T08:55:48.4790438Z",
                  "Created": "2025-04-27T08:55:48.4790438Z"
                }
              ],
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/workOrder/accept": {
      "put": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "api/workOrder/accept",
        "description": "This method allows to accept a work order. The method can be applied only to work orders in the <strong>New</strong> status.<br /><strong>Note</strong>: Once a work order is accepted, you cannot reject it.\r\nTo accept a work order with the <strong>IsPrebilled</strong> flag set to true, you must submit an invoice by using the CorigoPro Desktop.",
        "operationId": "WorkOrder_Accept",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accept",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutBaseWorkOrderManagement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/workOrder/reject": {
      "put": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "api/workOrder/reject",
        "description": "This method allows to reject a work order, and can be applied only to new work orders. Once a work order is rejected, you can do nothing to it.",
        "operationId": "WorkOrder_Reject",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "reject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutRejectWorkOrder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/workOrder/reopen": {
      "put": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "api/workOrder/reopen",
        "description": "This method allows to reopen work order, it can reopen work orders that not in new state.",
        "operationId": "WorkOrder_ReOpen",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "reopen",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutBaseWorkOrderManagement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/workOrder/quoteSubmit": {
      "put": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "api/workOrder/quoteSubmit",
        "description": "This method allows to request a change (increase) of the NTE amount.\r\n<br /><br />\r\nYou can resubmit a quote only if the quote that was submitted previously is rejected.\r\nTo get information about the current quote, call the <strong>GET - api/workOrder/</strong>, and review the <strong>NTE.Quote</strong> entity.\r\n            \r\nYou can submit quote with quote line items.\r\nTo get list of available quote list items call the <strong>Get api/invoice/pricelist</strong>.\r\n<strong>During submit, quote line items will be rewritten.</strong>",
        "operationId": "WorkOrder_QuoteSubmit",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "quoteSubmit",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutQuoteSubmit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/workOrder/quoteRecall": {
      "put": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "api/workOrder/quoteRecall",
        "operationId": "WorkOrder_QuoteRecall",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecallQuote"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/workOrder/checkIn": {
      "put": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "api/workOrder/checkIn",
        "description": "This method should be called when a technician/subcontractor arrives on site, and starts the work described in the work order.\r\nThis method can be called only if the work order is in <strong>Accepted</strong> or <strong>Paused</strong> status.\r\n<br /><br /><strong>Note</strong>: The information about geographical location of a technician/subcontractor at the time of the <strong>CheckIn</strong> operation is required for verification of the work order in the Corrigo Enterprise.",
        "operationId": "WorkOrder_CheckIn",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "checkIn",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutCheckIn"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/workOrder/pause": {
      "put": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "api/workOrder/pause",
        "description": "This method should be called when a work order is temporarily stopped due to some reason, such as end of a work day or lunch time.\r\nThis method can be called only when a work order is  in the <strong>CheckedIn</strong> status.<br /><strong>Note</strong>: The information about geographical location of a technician/subcontractor at the time of the <strong>Pause</strong> operation is required for verification of  the work order in the Corrigo Enterprise.",
        "operationId": "WorkOrder_Pause",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "pause",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutPause"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/workOrder/checkOut": {
      "put": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "api/workOrder/checkOut",
        "description": "This method should be called when the work described in a work order is done.\r\nTo complete a work order, you must submit the required information.\r\nCall the <strong>GET - api/customerSettings/</strong> to obtain the information required for completion of a work order, such as the <strong>Repair Category, Repair Code, CheckList,</strong> and <strong>CustomFileds</strong>.\r\n<br /><br /><strong>Note</strong>: If an error is returned that the equipment must be provided, call the <strong>POST - api/equipment/</strong> method, and specify a piece of equipment that a technician/subcontractor worked on.",
        "operationId": "WorkOrder_CheckOut",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "checkOut",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutCheckOut"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/workOrder/workDoneDetails": {
      "put": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "api/workOrder/workDoneDetails",
        "description": "This method should be called when you want to change the work order done details.\r\nCall the <strong>GET - api/customerSettings/</strong> to obtain the information required for completion of a work order, such as the <strong>Repair Category, Repair Code, CheckList,</strong> and <strong>CustomFileds</strong>.\r\n<br /><br /><strong>Note</strong>: This information will not reach the requestor side until you submit the invoice in Invoicing module.",
        "operationId": "WorkOrder_WorkDoneDetails",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "doneDetails",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutWorkDoneDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/workOrder/appointmentInfo": {
      "put": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "api/workOrder/appointmentInfo",
        "description": "TBD.",
        "operationId": "WorkOrder_AppointmentInfo",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "appointment",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutAppointmentInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/workOrder/noteHistory": {
      "get": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "api/workOrder/noteHistory",
        "description": "This method retrieves information about all internal notes already added to the work order.",
        "operationId": "WorkOrder_InternalNoteHistory",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InternalNoteHistoryList"
            }
          }
        }
      }
    },
    "/api/workOrder/note": {
      "put": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "api/workOrder/note",
        "description": "This method allows to populate internal note to a work order.",
        "operationId": "WorkOrder_InternalNote",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutInternalNote"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/WorkOrder/additionalField": {
      "put": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "api/WorkOrder/additionalField",
        "description": "This method allows to edit custom fields added to a work order.",
        "operationId": "WorkOrder_Update",
        "consumes": [
          "application/json",
          "text/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAdditionalFieldsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            },
            "examples": {
              "MessageId": "0f8fad5b-d9cb-469f-a165-70867728950e"
            }
          }
        }
      }
    },
    "/api/WorkOrder/AdditionalFieldHistory": {
      "get": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "api/WorkOrder/AdditionalFieldHistory",
        "description": "This method returns history data about changes of custom field.",
        "operationId": "WorkOrder_History",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "additionalFieldId",
            "in": "query",
            "description": "Unique identifiers of a custom field in requestor’s system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdditionalFieldHistoryList"
            }
          }
        }
      }
    },
    "/api/WorkOrder/IsmSettings": {
      "get": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "api/WorkOrder/IsmSettings",
        "description": "This method returns Induction and Safety Management settings.",
        "operationId": "WorkOrder_IsmSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "workOrderId",
            "in": "query",
            "description": "A unique identifier of a work order in the CorrigoPro system.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "A unique identifier of the request.",
            "required": true,
            "type": "string",
            "maxLength": 36,
            "minLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IsmSettingsResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "GetAssociates": {
      "description": "Request for retrieving list of all associates of branch.",
      "required": [
        "BranchId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "BranchId": {
          "format": "int32",
          "description": "Identifier of a branch registered in the CorrigoPro Network.",
          "type": "integer"
        },
        "IncludeCruLeads": {
          "description": "IncludeCruLeads boolean type. If true then return CruLead information.",
          "type": "boolean"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "AssociateList": {
      "description": "List of all available members for a Branch registered in the CorrigoPro\r\nThere are two types of members - Cru, Sub. Sub is a subcontractor and Cru is your technicians.",
      "required": [
        "CruMembers",
        "Subcontractors",
        "CruLeads",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "CruMembers": {
          "description": "A list of technicians belonging to the branch specified in the request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CruMember"
          }
        },
        "Subcontractors": {
          "description": "A list of subcontractors belonging to the branch specified in the request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subcontractor"
          }
        },
        "CruLeads": {
          "description": "A list of cru leads belonging to the branch specified in the request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CruLead"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "CruMember": {
      "description": "Information about a technician.",
      "required": [
        "Id",
        "Name",
        "Phone"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "A cru member identifier.",
          "type": "integer"
        },
        "Name": {
          "description": "The cru member name.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "Phone": {
          "description": "The cru member phone.",
          "type": "string"
        }
      }
    },
    "Subcontractor": {
      "description": "Information about a subcontractor.",
      "required": [
        "Id",
        "Name",
        "Phone"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "A subcontractor member identifier.",
          "type": "integer"
        },
        "Name": {
          "description": "The subcontractor member name.",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "Phone": {
          "description": "The subcontractor member phone.",
          "type": "string"
        }
      }
    },
    "CruLead": {
      "description": "Information about a cru lead.",
      "required": [
        "Id",
        "Name",
        "Phone"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "A cru lead identifier.",
          "type": "integer"
        },
        "Name": {
          "description": "The cru lead name.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "Phone": {
          "description": "The cru lead phone.",
          "type": "string"
        }
      }
    },
    "GetByWorkOrder": {
      "required": [
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "AttachmentList": {
      "description": "Attachments response model.",
      "required": [
        "Attachments",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Attachments": {
          "description": "A list of attachments.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "Attachment": {
      "description": "Description of a file attached to a work order.",
      "required": [
        "Sender",
        "Size",
        "SentAt",
        "Id",
        "Name",
        "MimeType"
      ],
      "type": "object",
      "properties": {
        "Sender": {
          "$ref": "#/definitions/Sender",
          "description": "Information about a person who added the attachment."
        },
        "Size": {
          "format": "int64",
          "description": "The file size in bytes.",
          "type": "integer"
        },
        "SentAt": {
          "format": "date-time",
          "description": "The date when the attachment was sent.",
          "type": "string"
        },
        "DocumentType": {
          "description": "Detailed attachment qualification, if any.",
          "enum": [
            "Document",
            "Picture",
            "Signature",
            "InvoicePrintout",
            "ServiceContract",
            "Misc"
          ],
          "type": "string"
        },
        "Title": {
          "description": "The attachment display name.",
          "type": "string"
        },
        "Visibility": {
          "description": "Attachment visibility.",
          "enum": [
            "None",
            "CruOnly",
            "CruSubs",
            "CruLeads",
            "CruLead",
            "All"
          ],
          "type": "string"
        },
        "Subtype": {
          "description": "<strong>Obsolete field leaved for backward compatible</strong>\r\n<br />\r\n            Detailed attachment qualification, if any.",
          "enum": [
            "None",
            "Signature"
          ],
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "description": "A unique attachment identifier.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Name": {
          "description": "The attachment name.",
          "type": "string"
        },
        "MimeType": {
          "description": "The attachment type.",
          "type": "string"
        }
      }
    },
    "Sender": {
      "description": "Information about a person who performed an action, or sent a message.",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Name of a person who performed an action.",
          "type": "string"
        },
        "Phone": {
          "description": "A phone number of the person who performed the action.",
          "type": "string"
        },
        "Type": {
          "description": "Determines application from which a message was sent.",
          "enum": [
            "CorrigoPro",
            "Customer",
            "CorrigoProDirect"
          ],
          "type": "string"
        }
      }
    },
    "UploadMessageAttachment": {
      "description": "The request-model for posting an attachment message.",
      "required": [
        "Name",
        "MimeType",
        "File",
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "MessageVisibility": {
          "description": "Defines target of message.",
          "enum": [
            "None",
            "CruOnly",
            "CruSubs",
            "CruLeads",
            "CruLead",
            "All"
          ],
          "type": "string"
        },
        "Name": {
          "description": "Attachment name with the extension of the file.",
          "type": "string"
        },
        "MimeType": {
          "description": "Type of the attachment.",
          "type": "string"
        },
        "DocumentType": {
          "description": "Type of the attachment.",
          "enum": [
            "Document",
            "Picture",
            "Signature",
            "InvoicePrintout",
            "ServiceContract",
            "Misc"
          ],
          "type": "string"
        },
        "File": {
          "$ref": "#/definitions/HttpPostedFileMultipart",
          "description": "Attachment to be uploaded."
        },
        "ConcurrencyId": {
          "format": "int64",
          "description": "Concurrency id for concurrent actions. It will be ignored if set as \"null\".",
          "type": "integer"
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "HttpPostedFileMultipart": {
      "type": "object",
      "properties": {
        "ContentLength": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "ContentType": {
          "type": "string",
          "readOnly": true
        },
        "FileName": {
          "type": "string",
          "readOnly": true
        },
        "InputStream": {
          "$ref": "#/definitions/Stream",
          "readOnly": true
        }
      }
    },
    "PerformedBy": {
      "description": "Information about a person who performs an operation.",
      "required": [
        "Name"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "Name of a person who performs the operation.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "Phone": {
          "description": "Phone number of the person who performs the operation.",
          "type": "string"
        }
      }
    },
    "Stream": {
      "type": "object",
      "properties": {
        "__identity": {
          "type": "object"
        }
      }
    },
    "AttachmentUploaded": {
      "description": "Attachment uploaded response model.",
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "AttachmentId": {
          "description": "A unique identifier of the attachment in the CorrigoPro system.",
          "type": "string"
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "UpdateMessageAttachment": {
      "description": "The request-model for editing an attachment message.",
      "required": [
        "AttachmentId",
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Visibility": {
          "description": "Defines target of message.",
          "enum": [
            "None",
            "CruOnly",
            "CruSubs",
            "CruLeads",
            "CruLead",
            "All"
          ],
          "type": "string"
        },
        "AttachmentId": {
          "format": "uuid",
          "description": "A unique attachment identifier.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Title": {
          "description": "The label of this attachment as it appears to other users.",
          "type": "string"
        },
        "DocumentType": {
          "description": "Type of the attachment.",
          "enum": [
            "Document",
            "Picture",
            "Signature",
            "InvoicePrintout",
            "ServiceContract",
            "Misc"
          ],
          "type": "string"
        },
        "ConcurrencyId": {
          "format": "int64",
          "description": "Concurrency id for concurrent actions. It will be ignored if set as \"null\".",
          "type": "integer"
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "BaseResponse": {
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "DeleteAttachment": {
      "description": "The request-model for delete an attachment message.",
      "required": [
        "AttachmentIds",
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "AttachmentIds": {
          "description": "A unique attachment identifier.",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "ConcurrencyId": {
          "format": "int64",
          "description": "Concurrency id for concurrent actions. It will be ignored if set as \"null\".",
          "type": "integer"
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "GetByAttachmentId": {
      "required": [
        "AttachmentId",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "AttachmentId": {
          "format": "uuid",
          "description": "A unique identifier of the attached file from the CorrigoPro system.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "AttachmentUrl": {
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "TemporaryDownloadUrl": {
          "description": "A temporary link to the attached file is available for 15 min.",
          "type": "string"
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "BulkWoActionRequest": {
      "required": [
        "PerformedBy",
        "WorkOrderIds",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who performs the bulk operation."
        },
        "WorkOrderIds": {
          "description": "A list of unique identifiers of work orders in the CorrigoPro system.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "CancellationToken": {
      "type": "object",
      "properties": {
        "IsCancellationRequested": {
          "type": "boolean",
          "readOnly": true
        },
        "CanBeCanceled": {
          "type": "boolean",
          "readOnly": true
        },
        "WaitHandle": {
          "$ref": "#/definitions/WaitHandle",
          "readOnly": true
        }
      }
    },
    "WaitHandle": {
      "type": "object",
      "properties": {
        "Handle": {
          "type": "object"
        },
        "SafeWaitHandle": {
          "$ref": "#/definitions/SafeWaitHandle"
        }
      }
    },
    "SafeWaitHandle": {
      "type": "object",
      "properties": {
        "IsInvalid": {
          "type": "boolean",
          "readOnly": true
        },
        "IsClosed": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "BulkActionResponse": {
      "description": "Bulk action results.",
      "required": [
        "Results",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Results": {
          "description": "The bulk action results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BulkActionResult"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "BulkActionResult": {
      "description": "Description of a result of a bulk action.",
      "required": [
        "WorkOrderId"
      ],
      "type": "object",
      "properties": {
        "WorkOrderId": {
          "format": "int32",
          "description": "Identifier of a work order.",
          "type": "integer"
        },
        "Error": {
          "$ref": "#/definitions/BulkActionError",
          "description": "Description of an error.\r\n<br />\r\nIs available only if a work order failed to be processed."
        }
      }
    },
    "BulkActionError": {
      "description": "Description of a bulk action error.",
      "required": [
        "Code"
      ],
      "type": "object",
      "properties": {
        "Code": {
          "format": "int32",
          "description": "The detailed code of an error.",
          "type": "integer"
        },
        "Message": {
          "description": "The error message.",
          "type": "string"
        }
      }
    },
    "BulkWoRejectRequest": {
      "description": "Bulk reject of WorkOrders model.",
      "required": [
        "Reason",
        "PerformedBy",
        "WorkOrderIds",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Reason": {
          "description": "Mandatory text field for entering a reason of rejection of the work order.",
          "maxLength": 3000,
          "minLength": 5,
          "type": "string"
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who performs the bulk operation."
        },
        "WorkOrderIds": {
          "description": "A list of unique identifiers of work orders in the CorrigoPro system.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "BulkAssignRequest": {
      "required": [
        "Participants",
        "PerformedBy",
        "WorkOrderIds",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Participants": {
          "$ref": "#/definitions/Participants",
          "description": "A list of participants to be assigned to/unassigned from work orders."
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who performs the bulk operation."
        },
        "WorkOrderIds": {
          "description": "A list of unique identifiers of work orders in the CorrigoPro system.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "Participants": {
      "description": "A list of participants to be assigned or unassigned to work orders.",
      "type": "object",
      "properties": {
        "SubcontractorIds": {
          "description": "Identifiers of subcontractors.\r\n<br />\r\nTo retrieve these identifiers, call the <strong>GET - api/associates/</strong> method, and review the Response.Subcontractors.Id.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "x-custom-annotations": [
            "At least one of fields 'SubcontractorIds', 'ProMemberIds' should be specified."
          ]
        },
        "ProMemberIds": {
          "description": "Identifiers of CorrigoPro cru members.\r\n<br />\r\nTo retrieve these identifiers, call the <strong>GET - api/associates/</strong> method, and review the Response.CruMembers.Id.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "x-custom-annotations": [
            "At least one of fields 'SubcontractorIds', 'ProMemberIds' should be specified."
          ]
        }
      }
    },
    "CheckListItems": {
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "CheckList": {
          "description": "The <strong>CheckList</strong> state of the work order.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CheckListItemDescriptor"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "CheckListItemDescriptor": {
      "description": "Description of an item to be checked as the work is done.",
      "required": [
        "SortingIndex",
        "Description",
        "Id",
        "IsDone"
      ],
      "type": "object",
      "properties": {
        "SortingIndex": {
          "format": "int32",
          "description": "Index for ordering items in the checklist.",
          "type": "integer"
        },
        "Description": {
          "description": "Description of an activity or a check to be done.",
          "maxLength": 512,
          "minLength": 0,
          "type": "string"
        },
        "Id": {
          "format": "int32",
          "description": "Identifier of an item to be checked.",
          "type": "integer"
        },
        "Comment": {
          "description": "A comment provided by the provider about the checklist item.",
          "maxLength": 512,
          "minLength": 0,
          "type": "string"
        },
        "Exception": {
          "description": "Text of the exception. Additional information provided by the provider for the checklist item.",
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "IsDone": {
          "description": "When true, indicates that the work is completed.",
          "type": "boolean"
        }
      }
    },
    "PutCheckList": {
      "required": [
        "CheckList",
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "CheckList": {
          "description": "Information about the <strong>CheckList</strong> of the work order.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CheckListItem"
          }
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "CheckListItem": {
      "description": "An item to be checked as the work is done.",
      "required": [
        "Id",
        "IsDone"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Identifier of an item to be checked.",
          "type": "integer"
        },
        "Comment": {
          "description": "A comment provided by the provider about the checklist item.",
          "maxLength": 512,
          "minLength": 0,
          "type": "string"
        },
        "Exception": {
          "description": "Text of the exception. Additional information provided by the provider for the checklist item.",
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "IsDone": {
          "description": "When true, indicates that the work is completed.",
          "type": "boolean"
        }
      }
    },
    "BaseRequest": {
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "CustomersResponse": {
      "description": "Contains a list of all linked customers.",
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Customers": {
          "description": "Contains a list of all linked customers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerWithBranches"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "CustomerWithBranches": {
      "required": [
        "Id",
        "Name"
      ],
      "type": "object",
      "properties": {
        "BranchIds": {
          "description": "Unique identifiers of customer locations.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "Id": {
          "format": "int32",
          "description": "A unique identifier of a customer.",
          "type": "integer"
        },
        "Name": {
          "description": "The customer name.",
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "GetByCustomer": {
      "required": [
        "CustomerId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "CustomerId": {
          "format": "int32",
          "description": "Identifier of a customer.<br />\r\nIt must correspond to the <strong>CustomerDetails.Id</strong> of a work order, or one of identifiers obtained from the <strong>GET - api/customers</strong> method.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "CustomerSettings": {
      "description": "Customer specific settings.",
      "required": [
        "CustomFields",
        "RepairCategories",
        "AreRepairCodesAvailable",
        "IsRepairCodeRequired",
        "AvailablePriorities",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "CustomFields": {
          "description": "Contains descriptions of all possible additional fields (data) required during the <strong>CheckOut</strong> operation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldDescriptor"
          }
        },
        "RepairCategories": {
          "description": "Contains all existing <strong>Repair Codes</strong> and <strong>Categories</strong> of a customer.\r\nIf required (which is defined by the customer settings), it must be used during the <strong>CheckOut</strong> operation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RepairCategory"
          }
        },
        "AreRepairCodesAvailable": {
          "description": "If true, indicates that <strong>Repair Codes</strong> are available, and one of the available codes can be selected during the <strong>CheckOut</strong> operation of a work order.",
          "type": "boolean"
        },
        "IsRepairCodeRequired": {
          "description": "If true, indicates that repair information is required on completion of the work order.",
          "type": "boolean"
        },
        "AvailablePriorities": {
          "description": "Contains all existing <strong>Priorities</strong> of the work order.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Priority"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "CustomFieldDescriptor": {
      "description": "Detailed description of an additional field required for completion of a work order.",
      "required": [
        "Id",
        "LabelText",
        "IsRequired",
        "DataLength",
        "Type"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "The identifier of a custom field in a customer system.",
          "type": "integer"
        },
        "LabelText": {
          "description": "A name of the custom field.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "IsRequired": {
          "description": "If true, the custom field value is required.",
          "type": "boolean"
        },
        "DataLength": {
          "format": "int32",
          "description": "Length of a value that can be entered in the custom field.",
          "type": "integer"
        },
        "Values": {
          "description": "If available, the custom field must be one of the values from this list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Type": {
          "description": "The custom field value data type.",
          "enum": [
            "Unknown",
            "String",
            "Integer",
            "Float",
            "Money",
            "PhoneNumber",
            "Date",
            "Time",
            "Bool",
            "Url",
            "Text"
          ],
          "type": "string"
        },
        "Currency": {
          "description": "ISO 4217 alphabetic currency code. This parameter is required if the <strong>Type</strong> is Money.",
          "maxLength": 3,
          "minLength": 3,
          "type": "string",
          "x-custom-annotations": [
            "Currency is required if value of 'Type' is 'Money'."
          ]
        }
      }
    },
    "RepairCategory": {
      "description": "A repair category of a customer.",
      "required": [
        "Id",
        "Name"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Identifier of a repair category in a customer system.",
          "type": "integer"
        },
        "Name": {
          "description": "A repair category name.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Codes": {
          "description": "A code of the repair category.\r\n<br />\r\nIf the <strong>AreRepairCodesAvailable</strong> is set to false in customer settings, the codes list is not available.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RepairCode"
          }
        }
      }
    },
    "Priority": {
      "description": "information about priority and deadlines of a work.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Id of the priority.",
          "type": "integer"
        },
        "Name": {
          "description": "Name of the priority.",
          "type": "string"
        },
        "RespondInMinutes": {
          "format": "int32",
          "description": "Respond deadline in minutes.",
          "type": "integer"
        },
        "DueInHours": {
          "format": "int32",
          "description": "Completion deadline in hours.",
          "type": "integer"
        },
        "IsEmergency": {
          "description": "Indicates if the work order is an emergency case.",
          "type": "boolean"
        }
      }
    },
    "RepairCode": {
      "description": "A repair code name.",
      "required": [
        "Id",
        "Name"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Identifier of a repair code in a customer system.",
          "type": "integer"
        },
        "Name": {
          "description": "A repair code name.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "AdditionalFieldsDescriptors": {
      "description": "List of all available custom fields configurations set up on the requestor’s instance.",
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "AdditionalFieldDescriptors": {
          "description": "The list of custom fields configurations set up on the requestor’s instance.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalFieldDescriptor"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "AdditionalFieldDescriptor": {
      "description": "Description of an attribute of a piece of equipment.",
      "required": [
        "Id",
        "Label",
        "DataType",
        "DataLength",
        "IsDeleted",
        "IsReadonly"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Custom field ID.",
          "type": "integer"
        },
        "Label": {
          "description": "A label of the custom field.",
          "maxLength": 64,
          "minLength": 0,
          "type": "string"
        },
        "Values": {
          "description": "Custom field values, which are possible to select. Array.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "DataType": {
          "description": "Custom field value data type.",
          "enum": [
            "Unknown",
            "String",
            "Integer",
            "Float",
            "Money",
            "PhoneNumber",
            "Date",
            "Time",
            "Bool",
            "Url",
            "Text"
          ],
          "type": "string"
        },
        "DataLength": {
          "format": "int32",
          "description": "Length of a value that can be entered in the custom field.",
          "type": "integer"
        },
        "IsDeleted": {
          "description": "Identifies whether the custom field is already deleted.",
          "type": "boolean"
        },
        "IsReadonly": {
          "description": "Identifies whether the custom field is read-only. If value = true, then value is ready-only.",
          "type": "boolean"
        }
      }
    },
    "GetRounds": {
      "required": [
        "Parameters",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Parameters": {
          "$ref": "#/definitions/DrSearchModel",
          "description": "A model with search parameters."
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "DrSearchModel": {
      "required": [
        "BranchId",
        "PageNumber",
        "PageSize"
      ],
      "type": "object",
      "properties": {
        "BranchId": {
          "format": "int32",
          "description": "branch id.",
          "type": "integer"
        },
        "CustomerId": {
          "format": "int32",
          "description": "Identifier of a customer from whom the digital rounds is received.",
          "type": "integer"
        },
        "Statuses": {
          "description": "rounds status.",
          "type": "array",
          "items": {
            "enum": [
              "Unknown",
              "New",
              "InProgress",
              "Paused",
              "Completed",
              "Incomplete",
              "Missed",
              "Cancelled",
              "Open",
              "Recalled"
            ],
            "type": "string"
          }
        },
        "RequestorRoundsID": {
          "format": "int32",
          "description": "Requestor RoundsID.",
          "type": "integer"
        },
        "Created": {
          "$ref": "#/definitions/DateRange",
          "description": "Digital Rounds creation date range.",
          "x-custom-annotations": [
            "At least one of fields 'Created', 'LastUpdate', 'ExecutionWindowEnd' should be specified."
          ]
        },
        "LastUpdate": {
          "$ref": "#/definitions/DateRange",
          "description": "Digital Rounds lastUpdate date range.",
          "x-custom-annotations": [
            "At least one of fields 'Created', 'LastUpdate', 'ExecutionWindowEnd' should be specified."
          ]
        },
        "ExecutionWindowEnd": {
          "$ref": "#/definitions/DateRange",
          "description": "Digital Rounds ExecutionWindowEnd date range.",
          "x-custom-annotations": [
            "At least one of fields 'Created', 'LastUpdate', 'ExecutionWindowEnd' should be specified."
          ]
        },
        "PageNumber": {
          "format": "int32",
          "description": "Page Number.",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "description": "Page Size.",
          "type": "integer"
        }
      }
    },
    "DateRange": {
      "description": "Description of a date range.",
      "required": [
        "From",
        "To"
      ],
      "type": "object",
      "properties": {
        "From": {
          "format": "date-time",
          "description": "Date and time when an event starts.",
          "type": "string",
          "x-custom-annotations": [
            "Timespan between 'From' and 'To' should not exceed 30 days."
          ]
        },
        "To": {
          "format": "date-time",
          "description": "Date and time when the event completes.",
          "type": "string"
        }
      }
    },
    "DigitalRoundsResponse": {
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "DigitalRounds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DigitalRounds"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "DigitalRounds": {
      "type": "object",
      "properties": {
        "ID": {
          "format": "int32",
          "type": "integer"
        },
        "RequestorRoundsID": {
          "format": "int32",
          "type": "integer"
        },
        "RoundsNumber": {
          "type": "string"
        },
        "DisplayAs": {
          "type": "string"
        },
        "StatusID": {
          "format": "int32",
          "type": "integer"
        },
        "Status": {
          "enum": [
            "Unknown",
            "New",
            "InProgress",
            "Paused",
            "Completed",
            "Incomplete",
            "Missed",
            "Cancelled",
            "Open",
            "Recalled"
          ],
          "type": "string"
        },
        "CustomerID": {
          "format": "int32",
          "type": "integer"
        },
        "CustomerName": {
          "type": "string"
        },
        "BranchID": {
          "format": "int32",
          "type": "integer"
        },
        "ProviderMemberID": {
          "format": "int32",
          "type": "integer"
        },
        "HasGrouping": {
          "type": "boolean"
        },
        "GroupingStrictOrder": {
          "type": "boolean"
        },
        "StepsStrictOrder": {
          "type": "boolean"
        },
        "IsExecutionWindowEnforced": {
          "type": "boolean"
        },
        "ExecutionWindowStart": {
          "format": "date-time",
          "type": "string"
        },
        "ExecutionWindowEnd": {
          "format": "date-time",
          "type": "string"
        },
        "ExecutionWindowInMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "TimeZone": {
          "type": "string"
        },
        "IsAdHoc": {
          "type": "boolean"
        },
        "Comment": {
          "type": "string"
        },
        "Summary": {
          "type": "string"
        },
        "WorkZoneID": {
          "format": "int32",
          "type": "integer"
        },
        "WorkZoneNumber": {
          "type": "string"
        },
        "WorkZoneName": {
          "type": "string"
        },
        "WorkZoneTimeZone": {
          "type": "string"
        },
        "CreatedTime": {
          "format": "date-time",
          "type": "string"
        },
        "UpdatedTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "GetDigitalRoundsViewStartUrl": {
      "required": [
        "RoundsId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "RoundsId": {
          "format": "int32",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "DigitalRoundsViewStartResponse": {
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Url": {
          "type": "string"
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "GetAvailableParticipantsRequest": {
      "required": [
        "BranchId",
        "RoundsId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "BranchId": {
          "format": "int32",
          "type": "integer"
        },
        "RoundsId": {
          "format": "int32",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "DigitalRoundsAvailableParticipantsResponse": {
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Participants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DigitalRoundsParticipant"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "DigitalRoundsParticipant": {
      "type": "object",
      "properties": {
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "IsLinked": {
          "type": "boolean"
        },
        "Role": {
          "enum": [
            "Unspecified",
            "Customer",
            "CruMember",
            "CruLead",
            "Direct"
          ],
          "type": "string"
        }
      }
    },
    "DigitalRoundsParticipantsRequest": {
      "required": [
        "BranchId",
        "RoundsId",
        "ClientIds",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "BranchId": {
          "format": "int32",
          "type": "integer"
        },
        "RoundsId": {
          "format": "int32",
          "type": "integer"
        },
        "ClientIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "DigitalRoundsParticipantAssignedResponse": {
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "AssignedParticipants": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "DigitalRoundsParticipantUnAssignedResponse": {
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "UnAssignedParticipants": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "PutAcceptDigitalRounds": {
      "required": [
        "ProviderRoundsId",
        "PerformedBy",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "ProviderRoundsId": {
          "format": "int32",
          "description": "Gets or sets a unique identifier of a digital round in the CorrigoPro system.",
          "type": "integer"
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Gets or sets information about a person who changed the digital round."
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "PutRejectDigitalRounds": {
      "required": [
        "Comment",
        "ProviderRoundsId",
        "PerformedBy",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Comment": {
          "description": "Gets or sets a text field for describing a reason of rejecting the digital round.",
          "maxLength": 3000,
          "minLength": 5,
          "type": "string"
        },
        "ProviderRoundsId": {
          "format": "int32",
          "description": "Gets or sets a unique identifier of a digital round in the CorrigoPro system.",
          "type": "integer"
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Gets or sets information about a person who changed the digital round."
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "EquipmentList": {
      "required": [
        "Equipment",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Equipment": {
          "description": "Returns the pieces of the equipment added to the work order.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Equipment"
          }
        },
        "FailureCodeState": {
          "description": "Indicating whether Failure Codes are supported for this WO.",
          "enum": [
            "NotAvailable",
            "Optional",
            "Required"
          ],
          "type": "string"
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "Equipment": {
      "description": "Description of a piece of equipment.",
      "required": [
        "Id",
        "Type"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Equipment identifier in a customer system.",
          "type": "integer"
        },
        "Type": {
          "description": "Type of equipment.",
          "enum": [
            "Existing",
            "New",
            "Unknown",
            "Excluding"
          ],
          "type": "string"
        },
        "EquipmentAssetId": {
          "format": "int32",
          "description": "Corresponds to the <strong>EquipmentAsset.Id</strong> in a customer system.",
          "type": "integer"
        },
        "Name": {
          "description": "Name or title of equipment.",
          "type": "string"
        },
        "Comment": {
          "description": "Additional information about equipment, such as S/N, model number, manufacturer, etc.",
          "type": "string"
        },
        "FailureCategory": {
          "$ref": "#/definitions/FailureCode",
          "description": "Selected failure Category."
        },
        "FailureProblem": {
          "$ref": "#/definitions/FailureCode",
          "description": "Selected failure Problem."
        },
        "FailureCause": {
          "$ref": "#/definitions/FailureCode",
          "description": "Selected failure Cause."
        },
        "FailureRemedy": {
          "$ref": "#/definitions/FailureCode",
          "description": "Selected failure Remedy."
        },
        "IsFailureCodesProperlyDefined": {
          "description": "Indicating whether Failure Codes are properly defined for this particular Equipment.",
          "type": "boolean"
        }
      }
    },
    "FailureCode": {
      "description": "Description of a equipment's failure code.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Failure code identifier in a customer system.",
          "type": "integer"
        },
        "Number": {
          "description": "Failure code number in a customer system.",
          "type": "string"
        },
        "Name": {
          "description": "Name or title of failure code.",
          "type": "string"
        }
      }
    },
    "PutEquipment": {
      "required": [
        "EquipmentWorkedOn",
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "EquipmentWorkedOn": {
          "$ref": "#/definitions/EquipmentWorkedOn",
          "description": "Information about a piece of equipment to be added/ updated in the work order."
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "EquipmentWorkedOn": {
      "description": "Information about a piece of equipment to be added or updated in a work order.",
      "required": [
        "Id",
        "Type"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Corresponds to the <strong>Field Id</strong> in a customer system.\r\n<br />\r\nIt must be 0 when you add equipment to the work order.",
          "type": "integer"
        },
        "Type": {
          "description": "Equipment type.",
          "enum": [
            "Existing",
            "New",
            "Unknown",
            "Excluding"
          ],
          "type": "string"
        },
        "EquipmentAssetId": {
          "format": "int32",
          "description": "Corresponds to the <strong>EquipmentAsset.Id</strong> in a customer system.",
          "type": "integer"
        },
        "Comment": {
          "description": "A field for entering information about piece of equipment, such as S/N, model number, manufacturer, etc.",
          "maxLength": 1024,
          "minLength": 0,
          "type": "string"
        },
        "Attributes": {
          "description": "List of attributes of the piece of equipment.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EquipmentAttribute"
          }
        },
        "FailureCategoryId": {
          "format": "int32",
          "description": "Identifier of a failure category in a customer system.",
          "type": "integer"
        },
        "FailureProblemId": {
          "format": "int32",
          "description": "Identifier of a failure problem in a customer system.",
          "type": "integer"
        },
        "FailureCauseId": {
          "format": "int32",
          "description": "Identifier of a failure cause in a customer system.",
          "type": "integer"
        },
        "FailureRemedyId": {
          "format": "int32",
          "description": "Identifier of a failure remedy in a customer system.",
          "type": "integer"
        }
      }
    },
    "EquipmentAttribute": {
      "description": "New value of the attribute of the predefined customer equipment.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Identifier of an attribute descriptor in a customer system.",
          "type": "integer"
        },
        "Value": {
          "description": "A value of the attribute of the piece of equipment.",
          "type": "string"
        }
      }
    },
    "DeleteEquipment": {
      "required": [
        "EquipmentId",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "EquipmentId": {
          "format": "int32",
          "description": "Identifier from the Equipment entity.",
          "type": "integer"
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "EquipmentAssetList": {
      "required": [
        "EquipmentAssets",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "EquipmentAssets": {
          "description": "The equipment that can be related to the work order but not added yet.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EquipmentAsset"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "EquipmentAsset": {
      "description": "Description of the predefined customer equipment.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Identifier of a piece of equipment in a customer system.",
          "type": "integer"
        },
        "Name": {
          "description": "Name of the piece of equipment.",
          "type": "string"
        }
      }
    },
    "GetEquipmentsDetails": {
      "required": [
        "EquipmentAssetId",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "EquipmentAssetId": {
          "format": "int32",
          "description": "Identifier of a piece of equipment in a customer system.",
          "type": "integer"
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "EquipmentDetails": {
      "required": [
        "Attributes",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Attributes": {
          "description": "A list of attribute descriptors and the current value of each attribute.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EquipmentAttributeDescriptor"
          }
        },
        "FailureCategories": {
          "description": "A list of available failure categories.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FailureCode"
          }
        },
        "FailureProblems": {
          "description": "A list of available failure problems.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FailureCodeRelatedToCategory"
          }
        },
        "FailureCauses": {
          "description": "A list of available failure causes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FailureCodeRelatedToCategory"
          }
        },
        "FailureRemedies": {
          "description": "A list of available failure remedies.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FailureCodeRelatedToCategory"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "EquipmentAttributeDescriptor": {
      "description": "Description of an attribute of a piece of equipment.",
      "required": [
        "Id",
        "LabelText",
        "Values",
        "Type",
        "DataLength"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "An attribute identifier in a customer system.",
          "type": "integer"
        },
        "LabelText": {
          "description": "The attribute name.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Value": {
          "description": "The current value of the attribute.",
          "maxLength": 1024,
          "minLength": 0,
          "type": "string"
        },
        "Values": {
          "description": "If available, the attribute value must be one of the values from this list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Type": {
          "description": "The attribute value type.",
          "enum": [
            "Unknown",
            "String",
            "Integer",
            "Float",
            "Money",
            "PhoneNumber",
            "Date",
            "Time",
            "Bool",
            "Url",
            "Text"
          ],
          "type": "string"
        },
        "HistoryAvailable": {
          "description": "If true, the history of the attribute changes is available, and can be viewed.\r\n<br />\r\nIf false, the history of changes is not tracked.",
          "type": "boolean"
        },
        "DataLength": {
          "format": "int32",
          "description": "The attribute value length.",
          "type": "integer"
        }
      }
    },
    "FailureCodeRelatedToCategory": {
      "description": "Description of a equipment's failure that related to specific categories.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "CategoryIds": {
          "description": "List of category ids associated with the given Problem/Cause/Remedy.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "Id": {
          "format": "int32",
          "description": "Failure code identifier in a customer system.",
          "type": "integer"
        },
        "Number": {
          "description": "Failure code number in a customer system.",
          "type": "string"
        },
        "Name": {
          "description": "Name or title of failure code.",
          "type": "string"
        }
      }
    },
    "GetHistoryDetails": {
      "required": [
        "EquipmentAttributeId",
        "EquipmentAssetId",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "EquipmentAttributeId": {
          "format": "int32",
          "description": "The value of this parameter corresponds to the <strong>Id</strong> of the <strong>EquipmentAttributeDescriptor</strong> entity.",
          "type": "integer"
        },
        "EquipmentAssetId": {
          "format": "int32",
          "description": "Identifier of a piece of equipment in a customer system.",
          "type": "integer"
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "HistoryList": {
      "description": "Represents attribute history.",
      "required": [
        "Values",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Values": {
          "description": "Contains a list of values with the corresponding DateTime stamps.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EquipmentAttributeHistory"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "EquipmentAttributeHistory": {
      "description": "History of an attribute of the piece of equipment.",
      "type": "object",
      "properties": {
        "TimeStamp": {
          "format": "date-time",
          "description": "Date and time when the attribute was changed.",
          "type": "string"
        },
        "Value": {
          "description": "A value of the attribute.",
          "type": "string"
        }
      }
    },
    "BaseWorkOrderRequest": {
      "required": [
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "InvoiceResponse": {
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Invoice": {
          "$ref": "#/definitions/Invoice"
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "Invoice": {
      "type": "object",
      "properties": {
        "Status": {
          "enum": [
            "New",
            "PendingVerification",
            "Draft",
            "Submitted",
            "Disputed",
            "Authorized",
            "Paid",
            "Cancelled",
            "WaitingForWoCompletionDetails",
            "PendingWoComplete",
            "Recalled"
          ],
          "type": "string"
        },
        "TotalAmount": {
          "format": "double",
          "type": "number"
        },
        "Nte": {
          "format": "double",
          "type": "number"
        },
        "IsPrebilled": {
          "type": "boolean"
        },
        "IsValid": {
          "type": "boolean"
        },
        "CustomerComment": {
          "type": "string"
        },
        "Currency": {
          "type": "string"
        },
        "LastUpdateDate": {
          "format": "date-time",
          "type": "string"
        },
        "SubmissionDeadline": {
          "format": "date-time",
          "type": "string"
        },
        "CheckNumber": {
          "type": "string"
        },
        "PaymentAmount": {
          "format": "double",
          "type": "number"
        },
        "PaymentDate": {
          "format": "date-time",
          "type": "string"
        },
        "HasAttachments": {
          "type": "boolean"
        },
        "ConcurrencyId": {
          "format": "int64",
          "type": "integer",
          "readOnly": true
        },
        "TaxIdPrimary": {
          "type": "string"
        },
        "TaxIdSecondary": {
          "type": "string"
        },
        "InvoiceNumber": {
          "maxLength": 32,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceDate": {
          "format": "date-time",
          "type": "string"
        },
        "ServiceDate": {
          "format": "date-time",
          "type": "string"
        },
        "DiscountAmount": {
          "format": "double",
          "type": "number"
        },
        "LineItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceLineItem"
          }
        }
      }
    },
    "InvoiceLineItem": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Category": {
          "enum": [
            "Labor",
            "Materials",
            "Misc",
            "Shipping",
            "Services",
            "PriceList",
            "Tax"
          ],
          "type": "string"
        },
        "PriceListItemId": {
          "format": "int32",
          "type": "integer"
        },
        "RequestorServiceId": {
          "format": "int32",
          "type": "integer"
        },
        "PriceListItemName": {
          "type": "string"
        },
        "Description": {
          "maxLength": 3000,
          "minLength": 0,
          "type": "string"
        },
        "Quantity": {
          "format": "double",
          "type": "number"
        },
        "Rate": {
          "format": "double",
          "type": "number"
        },
        "Subtotal": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "IsRateReadOnly": {
          "type": "boolean"
        },
        "TaxCode": {
          "type": "string"
        }
      }
    },
    "BaseConcurrentRequest": {
      "required": [
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "ConcurrencyId": {
          "format": "int64",
          "description": "Concurrency id for concurrent actions. It will be ignored if set as \"null\".",
          "type": "integer"
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "InvoicingBaseResponse": {
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "ConcurrencyId": {
          "format": "int64",
          "type": "integer"
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "PutInvoice": {
      "required": [
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Invoice": {
          "$ref": "#/definitions/BaseEditableInvoice"
        },
        "Comment": {
          "description": "Additional comment.",
          "maxLength": 3000,
          "minLength": 5,
          "type": "string"
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "BaseEditableInvoice": {
      "type": "object",
      "properties": {
        "InvoiceNumber": {
          "maxLength": 32,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceDate": {
          "format": "date-time",
          "type": "string"
        },
        "ServiceDate": {
          "format": "date-time",
          "type": "string"
        },
        "DiscountAmount": {
          "format": "double",
          "type": "number"
        },
        "ConcurrencyId": {
          "format": "int64",
          "type": "integer"
        },
        "LineItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceLineItem"
          }
        }
      }
    },
    "SubmitInvoice": {
      "required": [
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "SubmitAnyway": {
          "description": "If true, indicates that an invoice will be submitted, even if a warning about tax validation appears.",
          "type": "boolean"
        },
        "ConcurrencyId": {
          "format": "int64",
          "description": "Concurrency id for concurrent actions. It will be ignored if set as \"null\".",
          "type": "integer"
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "DetailedErrorResponse[TaxValidationResultModel]": {
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Details": {
          "$ref": "#/definitions/TaxValidationResultModel",
          "description": "Error advanced info."
        },
        "Code": {
          "format": "int32",
          "description": "The error code number.",
          "type": "integer"
        },
        "Message": {
          "description": "Error message.",
          "type": "string"
        },
        "ValidationErrors": {
          "description": "Model validation errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InputValidationError"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "TaxValidationResultModel": {
      "type": "object",
      "properties": {
        "LineItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItemValidationResultModel"
          }
        },
        "TaxCodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxCodeValidationResultModel"
          }
        },
        "Status": {
          "enum": [
            "Failure",
            "None",
            "Success",
            "Provider"
          ],
          "type": "string"
        },
        "TotalTaxAmount": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "TotalTaxSubmitted": {
          "format": "double",
          "type": "number"
        },
        "TaxValidationNecessity": {
          "enum": [
            "Enabled",
            "Disabled",
            "Warning"
          ],
          "type": "string"
        },
        "CanSubmitAnyway": {
          "type": "boolean"
        }
      }
    },
    "InputValidationError": {
      "description": "Description of an invalid field of a request model.",
      "type": "object",
      "properties": {
        "FieldName": {
          "description": "Name of the invalid field.\r\n<br />\r\nFor complex structure ‘.’ is used as separator for nested types.\r\nExample:. <span class=\"propOptKey\">PerformedBy.Name</span>",
          "type": "string"
        },
        "ErrorType": {
          "description": "Type of an error.",
          "enum": [
            "Mandatory",
            "IncorrectType",
            "RangeExceeded",
            "DateRangeExceeded",
            "MaxLength",
            "MinLength",
            "InvalidPhone",
            "InvalidDate",
            "DataValueIdRangeExceeded",
            "DataValueIdUnmatchedWithValue",
            "HiddenStepCannotBeUpdated",
            "CriticalProcedureShouldNotChooseRequiredChildStep"
          ],
          "type": "string"
        },
        "Message": {
          "description": "The error message description.",
          "type": "string"
        }
      }
    },
    "LineItemValidationResultModel": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string"
        },
        "Category": {
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "SubmittedAmount": {
          "format": "double",
          "type": "number"
        },
        "TaxRate": {
          "format": "double",
          "type": "number"
        },
        "MapKey": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "TaxCodeValidationResultModel": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Code": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "CalculatedAmount": {
          "format": "double",
          "type": "number"
        },
        "TaxableAmount": {
          "format": "double",
          "type": "number"
        },
        "SubmittedAmount": {
          "format": "double",
          "type": "number"
        },
        "CurrencyType": {
          "format": "int32",
          "type": "integer"
        },
        "IsValid": {
          "type": "boolean"
        }
      }
    },
    "RecallInvoice": {
      "required": [
        "RecallReason",
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "RecallReason": {
          "type": "string"
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "GetPriceListRequest": {
      "required": [
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "ServiceDate": {
          "format": "date-time",
          "description": "Date of service",
          "type": "string"
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "PriceListResponse": {
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "PriceList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriceListItem"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "PriceListItem": {
      "type": "object",
      "properties": {
        "PriceListItemId": {
          "format": "int32",
          "type": "integer"
        },
        "Type": {
          "enum": [
            "Labor",
            "Materials",
            "Misc",
            "Shipping",
            "Services",
            "PriceList",
            "Tax"
          ],
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Rate": {
          "format": "double",
          "type": "number"
        },
        "IsRateReadOnly": {
          "type": "boolean"
        },
        "RequestorServiceId": {
          "format": "int32",
          "type": "integer"
        },
        "TaxCode": {
          "type": "string"
        }
      }
    },
    "InvoiceAttachmentList": {
      "required": [
        "InvoiceAttachments",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "InvoiceAttachments": {
          "description": "A list of attachments related to an invoice.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceAttachment"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "InvoiceAttachment": {
      "required": [
        "Id",
        "Name",
        "MimeType"
      ],
      "type": "object",
      "properties": {
        "IsReadOnly": {
          "description": "When true, indicates that the Attachment cannot be removed.",
          "type": "boolean"
        },
        "DocumentType": {
          "description": "Detailed attachment qualification, if any.",
          "enum": [
            "Document",
            "Picture",
            "Signature",
            "InvoicePrintout",
            "ServiceContract",
            "Misc"
          ],
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "description": "A unique attachment identifier.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Name": {
          "description": "The attachment name.",
          "type": "string"
        },
        "MimeType": {
          "description": "The attachment type.",
          "type": "string"
        }
      }
    },
    "UploadAttachment": {
      "description": "The request-model for posting an attachment.",
      "required": [
        "Name",
        "MimeType",
        "File",
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "Attachment name with the extension of the file.",
          "type": "string"
        },
        "MimeType": {
          "description": "Type of the attachment.",
          "type": "string"
        },
        "DocumentType": {
          "description": "Type of the attachment.",
          "enum": [
            "Document",
            "Picture",
            "Signature",
            "InvoicePrintout",
            "ServiceContract",
            "Misc"
          ],
          "type": "string"
        },
        "File": {
          "$ref": "#/definitions/HttpPostedFileMultipart",
          "description": "Attachment to be uploaded."
        },
        "ConcurrencyId": {
          "format": "int64",
          "description": "Concurrency id for concurrent actions. It will be ignored if set as \"null\".",
          "type": "integer"
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "InvoicingAttachmentUploaded": {
      "description": "Attachment uploaded response model.",
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "ConcurrencyId": {
          "format": "int64",
          "type": "integer"
        },
        "AttachmentId": {
          "description": "A unique identifier of the attachment in the CorrigoPro system.",
          "type": "string"
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "UpdateAttachment": {
      "description": "The request-model for editing an attachment.",
      "required": [
        "AttachmentId",
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "AttachmentId": {
          "format": "uuid",
          "description": "A unique attachment identifier.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Title": {
          "description": "The label of this attachment as it appears to other users.",
          "type": "string"
        },
        "DocumentType": {
          "description": "Type of the attachment.",
          "enum": [
            "Document",
            "Picture",
            "Signature",
            "InvoicePrintout",
            "ServiceContract",
            "Misc"
          ],
          "type": "string"
        },
        "ConcurrencyId": {
          "format": "int64",
          "description": "Concurrency id for concurrent actions. It will be ignored if set as \"null\".",
          "type": "integer"
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "DeleteInvoiceAttachment": {
      "required": [
        "AttachmentIds",
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "AttachmentIds": {
          "description": "A unique identifier of the attached file from the CorrigoPro system.",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "ConcurrencyId": {
          "format": "int64",
          "description": "Concurrency id for concurrent actions. It will be ignored if set as \"null\".",
          "type": "integer"
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "GetByCustomerAndBranch": {
      "required": [
        "CustomerId",
        "BranchId",
        "PageSize",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "CustomerId": {
          "format": "int32",
          "type": "integer"
        },
        "BranchId": {
          "format": "int32",
          "type": "integer"
        },
        "LocaleId": {
          "format": "int32",
          "description": "Response language. Defaults to 1033 (en-US).",
          "type": "integer"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Page number. Defaults to 1.",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "Location": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Address": {
          "$ref": "#/definitions/LocationAddress"
        },
        "WorkZone": {
          "$ref": "#/definitions/WorkZone"
        },
        "Customer": {
          "$ref": "#/definitions/Customer"
        }
      }
    },
    "LocationAddress": {
      "type": "object",
      "properties": {
        "Street": {
          "type": "string"
        },
        "Street2": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "State": {
          "type": "string"
        },
        "PostalCode": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        }
      }
    },
    "WorkZone": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Number": {
          "type": "string"
        },
        "Address": {
          "$ref": "#/definitions/LocationAddress"
        }
      }
    },
    "Customer": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Number": {
          "type": "string"
        }
      }
    },
    "PostMessageRequest": {
      "description": "Method allows to send a text message to Customer.",
      "required": [
        "Text",
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Text": {
          "description": "Message text to be sent to a customer.",
          "type": "string"
        },
        "MessageVisibility": {
          "description": "Defines target of message.",
          "enum": [
            "None",
            "CruOnly",
            "CruSubs",
            "CruLeads",
            "CruLead",
            "All"
          ],
          "type": "string"
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "MessageList": {
      "description": "Message list.",
      "required": [
        "Messages",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Messages": {
          "description": "Text messages.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextMessage"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "TextMessage": {
      "description": "Text message.",
      "required": [
        "Text",
        "SentAt",
        "Sender",
        "TextMessageId",
        "WorkOrderId"
      ],
      "type": "object",
      "properties": {
        "Text": {
          "description": "Text of the message.",
          "maxLength": 2000,
          "minLength": 0,
          "type": "string"
        },
        "SentAt": {
          "format": "date-time",
          "description": "Date of an action.",
          "type": "string"
        },
        "Sender": {
          "$ref": "#/definitions/Sender",
          "description": "Sender of the message."
        },
        "SenderName": {
          "description": "Optional field of the message owner name.",
          "type": "string"
        },
        "TextMessageId": {
          "format": "int32",
          "description": "A unique identifier of a message in the CorrigoPro system.",
          "type": "integer"
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        }
      }
    },
    "GetMessagesByFilter": {
      "required": [
        "Parameters",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Parameters": {
          "$ref": "#/definitions/MessageSearchModel",
          "description": "A model with search parameters."
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "MessageSearchModel": {
      "type": "object",
      "properties": {
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "CustomerId": {
          "format": "int32",
          "description": "Identifier of a customer from whom the work order is received.",
          "type": "integer"
        },
        "BranchId": {
          "format": "int32",
          "description": "Identifier of the branch the work order is sent to.",
          "type": "integer"
        },
        "SentAt": {
          "$ref": "#/definitions/DateRange",
          "description": "Work order creation date range.",
          "x-custom-annotations": [
            "At least one of fields 'SentAt' should be specified."
          ]
        }
      }
    },
    "PrioritiesResponse": {
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "BasePriorities": {
          "description": "Base priorities.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FullPriority"
          }
        },
        "OverriddenPriorities": {
          "description": "Priorities overridden by provider location.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FullPriority"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "FullPriority": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "DisplayAs": {
          "type": "string"
        },
        "AcknowledgeInMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "RespondInMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "DueInMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "IsEmergency": {
          "type": "boolean"
        },
        "WorkZoneId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ProcedureListResponse": {
      "description": "Procedures list.",
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Procedures": {
          "description": "Procedures.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Procedure"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "Procedure": {
      "description": "Procedure descriptor.",
      "required": [
        "Id",
        "Order",
        "AllowMarkNotApplicable",
        "Status"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Procedure identifier in a customer system.",
          "type": "integer"
        },
        "Order": {
          "format": "int32",
          "description": "Procedure order in work order.",
          "type": "integer"
        },
        "Name": {
          "description": "Procedure name.",
          "type": "string"
        },
        "AllowMarkNotApplicable": {
          "description": "When true, indicates that the procedure can be mark as not applicable.",
          "type": "boolean"
        },
        "Status": {
          "description": "Status of procedure.",
          "enum": [
            "Unknown",
            "Open",
            "NA",
            "Done"
          ],
          "type": "string"
        },
        "AssetId": {
          "format": "int32",
          "description": "Id of the asset.",
          "type": "integer"
        },
        "AssetName": {
          "description": "An asset name.",
          "maxLength": 128,
          "minLength": 0,
          "type": "string"
        },
        "Steps": {
          "description": "List of steps.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StepDescriptor"
          }
        },
        "Summary": {
          "type": "string"
        },
        "OperationalRisks": {
          "type": "string"
        },
        "BackoutPlan": {
          "type": "string"
        }
      }
    },
    "StepDescriptor": {
      "description": "Step descriptor.",
      "required": [
        "Order",
        "IsRequired",
        "StepType",
        "Id",
        "Status"
      ],
      "type": "object",
      "properties": {
        "Order": {
          "format": "int32",
          "description": "Step order in procedure.",
          "type": "integer"
        },
        "IsRequired": {
          "description": "When true, indicates that it is required to complete this step.",
          "type": "boolean"
        },
        "Description": {
          "description": "A description of the step.",
          "type": "string"
        },
        "StepType": {
          "description": "Type of step.",
          "enum": [
            "Unknown",
            "Text",
            "Field",
            "Attribute",
            "Document"
          ],
          "type": "string"
        },
        "FlagReason": {
          "description": "A flag reason of the step.",
          "type": "string"
        },
        "Label": {
          "description": "A label of the step.",
          "type": "string"
        },
        "DataType": {
          "description": "The step value data type.",
          "enum": [
            "Unknown",
            "String",
            "Integer",
            "Float",
            "Money",
            "PhoneNumber",
            "Date",
            "Time",
            "Bool",
            "Url",
            "Text"
          ],
          "type": "string"
        },
        "MoneyCulture": {
          "description": "The money culture of currency data.",
          "type": "string"
        },
        "ActionsRequired": {
          "description": "A bitmask representing an actions that required for procedure step to be done.",
          "enum": [
            "None",
            "Comment",
            "Document",
            "WorkOrder"
          ],
          "type": "string"
        },
        "ActionsTaken": {
          "description": "A bitmask representing an actions that  have already done for procedure step (including actions from customer side).",
          "enum": [
            "None",
            "Comment",
            "Document",
            "WorkOrder"
          ],
          "type": "string"
        },
        "ConditionType": {
          "enum": [
            "Unknown",
            "Regular",
            "Parent",
            "Conditional"
          ],
          "type": "string"
        },
        "ConditionValueId": {
          "format": "int32",
          "type": "integer"
        },
        "DataValueId": {
          "format": "int32",
          "type": "integer"
        },
        "StepNumber": {
          "type": "string"
        },
        "ParentStepId": {
          "format": "int32",
          "type": "integer"
        },
        "IsVisible": {
          "type": "boolean"
        },
        "Id": {
          "format": "int32",
          "description": "Step identifier in a customer system.",
          "type": "integer"
        },
        "Status": {
          "description": "Status of step.",
          "enum": [
            "Unknown",
            "Open",
            "NA",
            "Done"
          ],
          "type": "string"
        },
        "Value": {
          "description": "A value of the step.",
          "type": "string"
        },
        "Comment": {
          "description": "A comment of the step.",
          "maxLength": 512,
          "type": "string"
        },
        "ActualActionDate": {
          "format": "date-time",
          "description": "A completedon of the step.",
          "type": "string"
        }
      }
    },
    "GetStepDetailsRequest": {
      "required": [
        "StepIds",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "StepIds": {
          "description": "Step identifiers in a customer system.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "StepsDetailsResponse": {
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "StepsDetails": {
          "description": "Steps details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StepDetails"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "StepDetails": {
      "description": "Step details descriptor.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Step identifier in a customer system.",
          "type": "integer"
        },
        "ConditionType": {
          "enum": [
            "Unknown",
            "Regular",
            "Parent",
            "Conditional"
          ],
          "type": "string"
        },
        "ParentStepId": {
          "format": "int32",
          "type": "integer"
        },
        "ConditionValueId": {
          "format": "int32",
          "type": "integer"
        },
        "IsVisible": {
          "type": "boolean"
        },
        "StepNumber": {
          "type": "string"
        },
        "DataValueId": {
          "format": "int32",
          "type": "integer"
        },
        "Order": {
          "format": "int32",
          "type": "integer"
        },
        "Instructions": {
          "description": "An instructions of the step.",
          "type": "string"
        },
        "Options": {
          "description": "<strong>Obsolete field leaved for backward compatible</strong>\r\n<br />\r\n            If available, the step must be one of the values from this list.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "OptionsDetails": {
          "description": "If available, the step must be one of the values from this list. Represents detailed available options information.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StepPickListOption"
          }
        },
        "IsNa": {
          "description": "Is this Attribute applicable to this asset.",
          "type": "boolean"
        },
        "Document": {
          "$ref": "#/definitions/StepDocument",
          "description": "Document info. If step is Document."
        }
      }
    },
    "StepPickListOption": {
      "description": "Represents detailed information about step's pick list option.",
      "type": "object",
      "properties": {
        "DataValueId": {
          "format": "int32",
          "type": "integer"
        },
        "Value": {
          "description": "Represents a step value.",
          "type": "string"
        },
        "ActionsRequired": {
          "description": "A bitmask representing an actions that required for procedure step to be done when the pick list will be selected as step value.",
          "enum": [
            "None",
            "Comment",
            "Document",
            "WorkOrder"
          ],
          "type": "string"
        }
      }
    },
    "StepDocument": {
      "description": "Document info.",
      "type": "object",
      "properties": {
        "Url": {
          "description": "Document temporary URL.",
          "type": "string"
        },
        "Name": {
          "description": "Document name.",
          "type": "string"
        },
        "Description": {
          "description": "Descriptions.",
          "type": "string"
        },
        "MimeType": {
          "description": "File mime type.",
          "type": "string"
        }
      }
    },
    "UpdateProcedureStepRequest": {
      "required": [
        "ProcedureId",
        "Steps",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "ProcedureId": {
          "format": "int32",
          "type": "integer"
        },
        "Steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Step"
          }
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "Step": {
      "description": "Step base.",
      "required": [
        "Id",
        "Status"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Step identifier in a customer system.",
          "type": "integer"
        },
        "Status": {
          "description": "Status of step.",
          "enum": [
            "Unknown",
            "Open",
            "NA",
            "Done"
          ],
          "type": "string"
        },
        "Value": {
          "description": "A value of the step.",
          "type": "string"
        },
        "Comment": {
          "description": "A comment of the step.",
          "maxLength": 512,
          "type": "string"
        },
        "ActualActionDate": {
          "format": "date-time",
          "description": "A completedon of the step.",
          "type": "string"
        },
        "DataValueId": {
          "format": "int32",
          "description": "optional (present for steps of field/attribute type where the field has a pick list and value of the step is not empty), indicates the server id of currently selected pick list item for the step.",
          "type": "integer"
        }
      }
    },
    "GetStepAttachments": {
      "required": [
        "ProcedureId",
        "StepId",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "ProcedureId": {
          "format": "int32",
          "description": "Procedure identifier in a customer system.",
          "type": "integer"
        },
        "StepId": {
          "format": "int32",
          "description": "Step identifier in a customer system.",
          "type": "integer"
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "StepAttachmentList": {
      "required": [
        "StepAttachments",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "StepAttachments": {
          "description": "A list of attachments related to a procedure step.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StepAttachment"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "StepAttachment": {
      "required": [
        "Id",
        "Name",
        "MimeType"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "A unique attachment identifier.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Name": {
          "description": "The attachment name.",
          "type": "string"
        },
        "MimeType": {
          "description": "The attachment type.",
          "type": "string"
        }
      }
    },
    "UploadAttachmentToStep": {
      "description": "The request-model for posting an attachment to Procedure Step.",
      "required": [
        "ProcedureId",
        "StepId",
        "Name",
        "MimeType",
        "File",
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "ProcedureId": {
          "format": "int32",
          "description": "Procedure identifier in a customer system.",
          "type": "integer"
        },
        "StepId": {
          "format": "int32",
          "description": "Step identifier in a customer system.",
          "type": "integer"
        },
        "Name": {
          "description": "Attachment name with the extension of the file.",
          "type": "string"
        },
        "MimeType": {
          "description": "Type of the attachment.",
          "type": "string"
        },
        "DocumentType": {
          "description": "Type of the attachment.",
          "enum": [
            "Document",
            "Picture",
            "Signature",
            "InvoicePrintout",
            "ServiceContract",
            "Misc"
          ],
          "type": "string"
        },
        "File": {
          "$ref": "#/definitions/HttpPostedFileMultipart",
          "description": "Attachment to be uploaded."
        },
        "ConcurrencyId": {
          "format": "int64",
          "description": "Concurrency id for concurrent actions. It will be ignored if set as \"null\".",
          "type": "integer"
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "DeleteStepAttachment": {
      "required": [
        "AttachmentIds",
        "StepId",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "AttachmentIds": {
          "description": "A unique identifier of the attached file from the CorrigoPro system.",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "StepId": {
          "format": "int32",
          "description": "Step identifier in a customer system.",
          "type": "integer"
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "GetStepTasksRequest": {
      "description": "Request model to get step tasks marked as “Corrective” associated with an Asset and will be used to create a new WO from procedure step.",
      "required": [
        "StepId",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "StepId": {
          "format": "int32",
          "description": "Step identifier in a customer system.",
          "type": "integer"
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "StepTasksResponse": {
      "description": "Response model that contains step tasks marked as “Corrective” associated with an Asset and will be used to create a new WO from procedure step.",
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Tasks": {
          "description": "Steps tasks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StepTask"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "StepTask": {
      "description": "Step task marked as “Corrective” associated with an Asset and will be used to create a new WO from procedure step.",
      "required": [
        "Id",
        "Name"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Task identifier in a customer system.",
          "type": "integer"
        },
        "Name": {
          "description": "Task name.",
          "type": "string"
        }
      }
    },
    "CreateCorrectiveWorkOrderRequest": {
      "description": "Request to create the Corrective Work that the client needs to do or have done as a result of this Procedure Step.",
      "required": [
        "ProcedureId",
        "StepId",
        "Comments",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "ProcedureId": {
          "format": "int32",
          "description": "Procedure identifier in a customer system.",
          "type": "integer"
        },
        "StepId": {
          "format": "int32",
          "description": "Step identifier in a customer system.",
          "type": "integer"
        },
        "TaskId": {
          "format": "int32",
          "description": "Task identifier in a customer system.",
          "type": "integer"
        },
        "Comments": {
          "description": "Required information describing the Corrective Work Order.",
          "maxLength": 512,
          "type": "string"
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "MarkProcedureAsNaRequest": {
      "required": [
        "ProcedureId",
        "MarkAsNa",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "ProcedureId": {
          "format": "int32",
          "type": "integer"
        },
        "MarkAsNa": {
          "type": "boolean"
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "GetCircuitRequest": {
      "required": [
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "RefrigerantCircuitsResponse": {
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Circuits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Circuit"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "Circuit": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "DispAs": {
          "type": "string"
        },
        "Number": {
          "type": "string"
        },
        "IsMetric": {
          "type": "boolean"
        },
        "WoLink": {
          "format": "int32",
          "type": "integer"
        },
        "LeakThreshold": {
          "format": "int32",
          "type": "integer"
        },
        "Capacity": {
          "format": "double",
          "type": "number"
        },
        "IsLeakDetecEquip": {
          "type": "boolean"
        },
        "ProductId": {
          "format": "int32",
          "type": "integer"
        },
        "ProductName": {
          "type": "string"
        },
        "StatusID": {
          "format": "int32",
          "type": "integer"
        },
        "EquipmentStatus": {
          "format": "int32",
          "type": "integer"
        },
        "AlarmSetPoint": {
          "format": "double",
          "type": "number"
        },
        "DetectionLimit": {
          "format": "double",
          "type": "number"
        },
        "EquipmentName": {
          "type": "string"
        },
        "AssetName": {
          "type": "string"
        }
      }
    },
    "GetCylinderRequest": {
      "required": [
        "IsRecovery",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "IsRecovery": {
          "type": "boolean"
        },
        "CircuitProductId": {
          "format": "int32",
          "type": "integer"
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "RefrigerantCylindersResponse": {
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Cylinders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cylinder"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "Cylinder": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Number": {
          "type": "string"
        },
        "IsMetric": {
          "type": "boolean"
        }
      }
    },
    "GetRefrigerantTransactionRequest": {
      "required": [
        "TransactionId",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "TransactionId": {
          "format": "int32",
          "type": "integer"
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "RefrigerantTransactionResponse": {
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "RefrigerantTransaction": {
          "$ref": "#/definitions/RefrigerantTransaction"
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "RefrigerantTransaction": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Qty": {
          "format": "double",
          "type": "number"
        },
        "IsMetric": {
          "type": "boolean"
        },
        "CircuitId": {
          "format": "int32",
          "type": "integer"
        },
        "CylinderId": {
          "format": "int32",
          "type": "integer"
        },
        "SkipLeakRate": {
          "type": "boolean"
        },
        "TestMethodId": {
          "format": "int32",
          "type": "integer"
        },
        "TestMethod": {
          "enum": [
            "Unknown",
            "NotTested",
            "Pressurizing",
            "Electronic",
            "DeepVacuum",
            "SoapBubbles",
            "Other",
            "CalibratedLeakDetectionDevice",
            "DyeInject",
            "HalideDetector",
            "OilResidue",
            "ApprovedAlternate"
          ],
          "type": "string"
        },
        "Notified": {
          "type": "boolean"
        },
        "CertNumber": {
          "type": "string"
        },
        "TestSuccessful": {
          "type": "boolean"
        },
        "TypeId": {
          "format": "int32",
          "type": "integer"
        },
        "Type": {
          "enum": [
            "Unknown",
            "Purchased",
            "Disposed",
            "Refilled",
            "CylinderRelease",
            "CircuitRelease",
            "Added",
            "Recovered",
            "Tested",
            "Transferred",
            "LeakIdentified",
            "LeakRepaired",
            "LeakTestFollow",
            "Created",
            "CircuitEdit",
            "Retired",
            "LeakTestInitial",
            "Adjusted",
            "CylinderEdit",
            "LeakInspected",
            "ALDCalibrated",
            "Retrofitted",
            "Activated",
            "ServicedOrLeakRepaired"
          ],
          "type": "string"
        },
        "Comment": {
          "type": "string"
        },
        "DtWhen": {
          "format": "date-time",
          "type": "string"
        },
        "ProviderWorkOrderId": {
          "format": "int32",
          "type": "integer"
        },
        "ExternalCylinder": {
          "type": "string"
        },
        "PerformedBy": {
          "type": "string"
        },
        "CreatedTime": {
          "format": "date-time",
          "type": "string"
        },
        "UpdatedTime": {
          "format": "date-time",
          "type": "string"
        },
        "ParentId": {
          "format": "int32",
          "type": "integer"
        },
        "ParentTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "ParentType": {
          "enum": [
            "Unknown",
            "Purchased",
            "Disposed",
            "Refilled",
            "CylinderRelease",
            "CircuitRelease",
            "Added",
            "Recovered",
            "Tested",
            "Transferred",
            "LeakIdentified",
            "LeakRepaired",
            "LeakTestFollow",
            "Created",
            "CircuitEdit",
            "Retired",
            "LeakTestInitial",
            "Adjusted",
            "CylinderEdit",
            "LeakInspected",
            "ALDCalibrated",
            "Retrofitted",
            "Activated",
            "ServicedOrLeakRepaired"
          ],
          "type": "string"
        },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "CertificationId": {
          "format": "int32",
          "type": "integer"
        },
        "LeakCauseId": {
          "format": "int32",
          "type": "integer"
        },
        "LeakCause": {
          "enum": [
            "Unknown",
            "Corrosion",
            "JointFailure",
            "NormalWear",
            "RubOut",
            "Rupture",
            "SealFailure",
            "Vibration",
            "Abuse",
            "Warranty",
            "MechanicalFailure"
          ],
          "type": "string"
        },
        "CylinderSourceId": {
          "format": "int32",
          "type": "integer"
        },
        "StockTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "StockType": {
          "enum": [
            "Unknown",
            "SupplierStock",
            "OwnerStock"
          ],
          "type": "string"
        },
        "ShippedTo": {
          "type": "string"
        },
        "DtShipment": {
          "format": "date-time",
          "type": "string"
        },
        "ReclamationCompany": {
          "type": "string"
        },
        "AmountReclaimed": {
          "format": "double",
          "type": "number"
        },
        "AmountDestroyed": {
          "format": "double",
          "type": "number"
        },
        "LeaksFoundCount": {
          "format": "int32",
          "type": "integer"
        },
        "IsScheduled": {
          "type": "boolean"
        },
        "ScheduledTransactionId": {
          "format": "int32",
          "type": "integer"
        },
        "DtDue": {
          "format": "date-time",
          "type": "string"
        },
        "IsCalibrationSuccessful": {
          "type": "boolean"
        },
        "IsConfirmed": {
          "type": "boolean"
        },
        "ExtensionReasonId": {
          "format": "int32",
          "type": "integer"
        },
        "ExtensionReason": {
          "enum": [
            "Unknown",
            "NoTechnician",
            "NoParts",
            "RequiresShutdown",
            "RiskRadio",
            "NoComponents",
            "Other"
          ],
          "type": "string"
        },
        "CircuitNumber": {
          "type": "string"
        },
        "EquipmentName": {
          "type": "string"
        },
        "CylinderNumber": {
          "type": "string"
        },
        "LeakRate": {
          "format": "double",
          "type": "number"
        },
        "TimeZoneId": {
          "format": "int32",
          "type": "integer"
        },
        "CylinderSourceNumber": {
          "type": "string"
        },
        "CertClassId": {
          "format": "int32",
          "type": "integer"
        },
        "CertClass": {
          "enum": [
            "None",
            "Class1",
            "Class1AndClass2",
            "Class1AndClass2AndClass3",
            "Class1AndClass3",
            "Class2",
            "Class2AndClass3",
            "Class3",
            "Universal"
          ],
          "type": "string"
        },
        "TechName": {
          "type": "string"
        },
        "QtyCylinder": {
          "format": "double",
          "type": "number"
        },
        "QtyCylinderSource": {
          "format": "double",
          "type": "number"
        },
        "FullChargeCalcMethodId": {
          "format": "int32",
          "type": "integer"
        },
        "FullChargeCalcMethod": {
          "enum": [
            "Unknown",
            "Measured",
            "ManufacturerInfo",
            "Calculated"
          ],
          "type": "string"
        },
        "AlarmSetPoint": {
          "format": "double",
          "type": "number"
        },
        "DetectionLimit": {
          "format": "double",
          "type": "number"
        },
        "TypeOfRepairId": {
          "format": "int32",
          "type": "integer"
        },
        "TypeOfRepairDesc": {
          "type": "string"
        },
        "LeakLocationId": {
          "format": "int32",
          "type": "integer"
        },
        "LeakLocationDetailId": {
          "format": "int32",
          "type": "integer"
        },
        "WasRefrigerantRecovered": {
          "type": "boolean"
        },
        "WasRefrigerantAdded": {
          "type": "boolean"
        }
      }
    },
    "GetAvailableTransactionTypeRequest": {
      "required": [
        "CircuitId",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "CircuitId": {
          "format": "int32",
          "type": "integer"
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "RefrigerantTransactionTypeResponse": {
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "TransactionTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionType"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "TransactionType": {
      "type": "object",
      "properties": {
        "TypeId": {
          "format": "int32",
          "type": "integer"
        },
        "Type": {
          "enum": [
            "Unknown",
            "Purchased",
            "Disposed",
            "Refilled",
            "CylinderRelease",
            "CircuitRelease",
            "Added",
            "Recovered",
            "Tested",
            "Transferred",
            "LeakIdentified",
            "LeakRepaired",
            "LeakTestFollow",
            "Created",
            "CircuitEdit",
            "Retired",
            "LeakTestInitial",
            "Adjusted",
            "CylinderEdit",
            "LeakInspected",
            "ALDCalibration",
            "Retrofitted",
            "Activated",
            "ServicedOrLeakRepaired"
          ],
          "type": "string"
        },
        "ScheduledTransactionId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AddRefrigerantRequest": {
      "required": [
        "TypeId",
        "CircuitId",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "TypeId": {
          "format": "int32",
          "type": "integer"
        },
        "AmountKG": {
          "format": "double",
          "type": "number"
        },
        "AmountLB": {
          "format": "int32",
          "type": "integer"
        },
        "AmountOZ": {
          "format": "int32",
          "type": "integer"
        },
        "IsMetric": {
          "type": "boolean"
        },
        "CircuitId": {
          "format": "int32",
          "type": "integer"
        },
        "CylinderId": {
          "format": "int32",
          "type": "integer"
        },
        "SkipLeakRate": {
          "type": "boolean"
        },
        "TestMethodId": {
          "format": "int32",
          "type": "integer"
        },
        "Notified": {
          "type": "boolean"
        },
        "TestSuccessful": {
          "type": "boolean"
        },
        "Comment": {
          "type": "string"
        },
        "DtWhen": {
          "format": "date-time",
          "type": "string"
        },
        "ExternalCylinder": {
          "type": "string"
        },
        "ClientId": {
          "format": "int32",
          "description": "ClientId only for mode2.",
          "type": "integer"
        },
        "CertificationId": {
          "format": "int32",
          "description": "CertificationId only for mode2.",
          "type": "integer"
        },
        "CertClassId": {
          "description": "CertClassId only for mode2.",
          "enum": [
            "None",
            "Class1",
            "Class1AndClass2",
            "Class1AndClass2AndClass3",
            "Class1AndClass3",
            "Class2",
            "Class2AndClass3",
            "Class3",
            "Universal"
          ],
          "type": "string"
        },
        "CertNumber": {
          "type": "string"
        },
        "IsConfirmed": {
          "description": "IsConfirmed only for mode2.",
          "type": "boolean"
        },
        "LeaksFoundCount": {
          "format": "int32",
          "description": "LeaksFoundCount only for mode2.",
          "maximum": 5,
          "minimum": 0,
          "type": "integer"
        },
        "IsCalibrationSuccessful": {
          "description": "IsCalibrationSuccessful only for mode2.",
          "type": "boolean"
        },
        "LeakCauseId": {
          "description": "LeakCauseId only for mode2.",
          "enum": [
            "Unknown",
            "Corrosion",
            "JointFailure",
            "NormalWear",
            "RubOut",
            "Rupture",
            "SealFailure",
            "Vibration",
            "Abuse",
            "Warranty",
            "MechanicalFailure"
          ],
          "type": "string"
        },
        "TechName": {
          "description": "TechName only for mode2.",
          "type": "string"
        },
        "AlarmSetPoint": {
          "format": "double",
          "description": "AlarmSetPoint only for mode2.",
          "type": "number"
        },
        "DetectionLimit": {
          "format": "double",
          "description": "DetectionLimit only for mode2.",
          "type": "number"
        },
        "LeakLocationId": {
          "description": "LeakLocationId only for mode2.",
          "enum": [
            "Unknown",
            "Compressor",
            "DischargeLine",
            "Condenser",
            "Receiver",
            "LiquidLine",
            "Evaporator",
            "SuctionLine",
            "HeatRecovery",
            "Piping",
            "Purge",
            "Valve",
            "RuptureDisc"
          ],
          "type": "string"
        },
        "LeakLocationDetailId": {
          "description": "LeakLocationDetailId only for mode2.",
          "enum": [
            "Unknown",
            "BodyOrTerminalLugs",
            "Fittings",
            "FlangesOrCouplings",
            "HeadGasket",
            "OilFloat",
            "OilSeparatorOrOilLine",
            "PressureControlTransducer",
            "Schrader",
            "ShaftSeal",
            "VibrationEliminator",
            "LiquidInjectionValve",
            "CompressorRepairNotOtherwiseListed",
            "AmbientValve",
            "BallValve",
            "CheckValve",
            "Header",
            "HotReclaimCoil",
            "HotGasBypass",
            "Muffler",
            "SchraderDisChargeLine",
            "Piping",
            "OilSeparatorOrRes",
            "PressureRegulatingValve",
            "PressureControlTransducerDischargeLine",
            "DischargeLineRepairNotOtherwiseListed",
            "BallValveCondensor",
            "CondenserCoil",
            "HeaderOrPiping",
            "SchraderCondensor",
            "SplittingValve",
            "TubeBundle",
            "PressureControlTransducerCondensor",
            "CondenserRepairNotOtherwiseListed",
            "KingValve",
            "LevelIndicatorOrAlarm",
            "PressureReliefValve",
            "ReceiverRepairNotOtherwiseListed",
            "BallValveLiquidLine",
            "DifferentialValve",
            "Drier",
            "HeaderOrPipingLiquidLine",
            "Pump",
            "SchraderLiquidLine",
            "SightGlass",
            "SolenoidValve",
            "SubCooler",
            "PressureControlTransducerLiquidLine",
            "LiquidLineRepairNotOtherwiseListed",
            "BallValveEvaporator",
            "Coil",
            "Distributor",
            "PipingEvaporator",
            "SchraderEvaporator",
            "ExpansionDevice",
            "SecondaryHeatExchanger",
            "EvaporatorRepairNotOtherwiseListed",
            "Accumulator",
            "CPR",
            "EPR",
            "FilterShell",
            "SchraderSuctionLine",
            "BallValveSuctionLine",
            "PipingOrHeader",
            "PressureControlTransducerSuctionLine",
            "SuctionLineRepairNotOtherwiseListed",
            "Valve",
            "CapillaryTube",
            "JointFlare",
            "JointSoldered",
            "JointThreaded",
            "JointWelded",
            "Other",
            "PipeWear",
            "SolenoidValveForPurge",
            "CondensingUnit",
            "Filter",
            "IsolationValves",
            "RegenerationTank",
            "SystemPiping",
            "TankOrExchanger",
            "PurgeRepairNotOtherwiseListed",
            "ValveService",
            "None"
          ],
          "type": "string"
        },
        "TypeOfRepairId": {
          "description": "TypeOfRepairId only for mode2.",
          "enum": [
            "Unknown",
            "AuditOrInspect",
            "Weld",
            "Replace",
            "Bypass",
            "Repair",
            "Remove",
            "Tighten",
            "Newcap",
            "Relocate",
            "LeakInspection",
            "Calibrate",
            "Other"
          ],
          "type": "string"
        },
        "TypeOfRepairDesc": {
          "description": "TypeOfRepairDesc only for mode2.",
          "type": "string"
        },
        "WasRefrigerantRecovered": {
          "description": "WasRefrigerantRecovered only for mode2.",
          "type": "boolean"
        },
        "WasRefrigerantAdded": {
          "description": "WasRefrigerantAdded only for mode2.",
          "type": "boolean"
        },
        "WasLeakFoundOrCircuitOpened": {
          "description": "WasLeakFoundOrCircuitOpened only for mode2.",
          "type": "boolean"
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "AddRefrigerantResponse": {
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "TransactionId": {
          "format": "int32",
          "type": "integer"
        },
        "LeakRate": {
          "format": "double",
          "type": "number"
        },
        "ScheduledTransactionIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "DeleteRefrigerantRequest": {
      "required": [
        "TransactionId",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "TransactionId": {
          "format": "int32",
          "type": "integer"
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "PutRefrigerantRequest": {
      "required": [
        "Id",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "DtWhen": {
          "format": "date-time",
          "type": "string"
        },
        "CertificationId": {
          "format": "int32",
          "type": "integer"
        },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "TestMethodId": {
          "enum": [
            "Unknown",
            "NotTested",
            "Pressurizing",
            "Electronic",
            "DeepVacuum",
            "SoapBubbles",
            "Other",
            "CalibratedLeakDetectionDevice",
            "DyeInject",
            "HalideDetector",
            "OilResidue",
            "ApprovedAlternate"
          ],
          "type": "string"
        },
        "TestSuccessful": {
          "type": "boolean"
        },
        "Notified": {
          "type": "boolean"
        },
        "LeaksFoundCount": {
          "format": "int32",
          "maximum": 5,
          "minimum": 0,
          "type": "integer"
        },
        "LeakCauseId": {
          "enum": [
            "Unknown",
            "Corrosion",
            "JointFailure",
            "NormalWear",
            "RubOut",
            "Rupture",
            "SealFailure",
            "Vibration",
            "Abuse",
            "Warranty",
            "MechanicalFailure"
          ],
          "type": "string"
        },
        "Comment": {
          "type": "string"
        },
        "DtDue": {
          "format": "date-time",
          "type": "string"
        },
        "LeakLocationId": {
          "enum": [
            "Unknown",
            "Compressor",
            "DischargeLine",
            "Condenser",
            "Receiver",
            "LiquidLine",
            "Evaporator",
            "SuctionLine",
            "HeatRecovery",
            "Piping",
            "Purge",
            "Valve",
            "RuptureDisc"
          ],
          "type": "string"
        },
        "LeakLocationDetailId": {
          "enum": [
            "Unknown",
            "BodyOrTerminalLugs",
            "Fittings",
            "FlangesOrCouplings",
            "HeadGasket",
            "OilFloat",
            "OilSeparatorOrOilLine",
            "PressureControlTransducer",
            "Schrader",
            "ShaftSeal",
            "VibrationEliminator",
            "LiquidInjectionValve",
            "CompressorRepairNotOtherwiseListed",
            "AmbientValve",
            "BallValve",
            "CheckValve",
            "Header",
            "HotReclaimCoil",
            "HotGasBypass",
            "Muffler",
            "SchraderDisChargeLine",
            "Piping",
            "OilSeparatorOrRes",
            "PressureRegulatingValve",
            "PressureControlTransducerDischargeLine",
            "DischargeLineRepairNotOtherwiseListed",
            "BallValveCondensor",
            "CondenserCoil",
            "HeaderOrPiping",
            "SchraderCondensor",
            "SplittingValve",
            "TubeBundle",
            "PressureControlTransducerCondensor",
            "CondenserRepairNotOtherwiseListed",
            "KingValve",
            "LevelIndicatorOrAlarm",
            "PressureReliefValve",
            "ReceiverRepairNotOtherwiseListed",
            "BallValveLiquidLine",
            "DifferentialValve",
            "Drier",
            "HeaderOrPipingLiquidLine",
            "Pump",
            "SchraderLiquidLine",
            "SightGlass",
            "SolenoidValve",
            "SubCooler",
            "PressureControlTransducerLiquidLine",
            "LiquidLineRepairNotOtherwiseListed",
            "BallValveEvaporator",
            "Coil",
            "Distributor",
            "PipingEvaporator",
            "SchraderEvaporator",
            "ExpansionDevice",
            "SecondaryHeatExchanger",
            "EvaporatorRepairNotOtherwiseListed",
            "Accumulator",
            "CPR",
            "EPR",
            "FilterShell",
            "SchraderSuctionLine",
            "BallValveSuctionLine",
            "PipingOrHeader",
            "PressureControlTransducerSuctionLine",
            "SuctionLineRepairNotOtherwiseListed",
            "Valve",
            "CapillaryTube",
            "JointFlare",
            "JointSoldered",
            "JointThreaded",
            "JointWelded",
            "Other",
            "PipeWear",
            "SolenoidValveForPurge",
            "CondensingUnit",
            "Filter",
            "IsolationValves",
            "RegenerationTank",
            "SystemPiping",
            "TankOrExchanger",
            "PurgeRepairNotOtherwiseListed",
            "ValveService",
            "None"
          ],
          "type": "string"
        },
        "TypeOfRepairId": {
          "enum": [
            "Unknown",
            "AuditOrInspect",
            "Weld",
            "Replace",
            "Bypass",
            "Repair",
            "Remove",
            "Tighten",
            "Newcap",
            "Relocate",
            "LeakInspection",
            "Calibrate",
            "Other"
          ],
          "type": "string"
        },
        "TypeOfRepairDesc": {
          "type": "string"
        },
        "WasRefrigerantRecovered": {
          "type": "boolean"
        },
        "WasRefrigerantAdded": {
          "type": "boolean"
        },
        "AmountKG": {
          "format": "double",
          "type": "number"
        },
        "AmountLB": {
          "format": "int32",
          "type": "integer"
        },
        "AmountOZ": {
          "format": "int32",
          "type": "integer"
        },
        "StockTypeId": {
          "enum": [
            "Unknown",
            "SupplierStock",
            "OwnerStock"
          ],
          "type": "string"
        },
        "SkipLeakRate": {
          "type": "boolean"
        },
        "CylinderId": {
          "format": "int32",
          "type": "integer"
        },
        "ExternalCylinder": {
          "type": "string"
        },
        "ShippedTo": {
          "type": "string"
        },
        "DtShipment": {
          "format": "date-time",
          "type": "string"
        },
        "ReclamationCompany": {
          "type": "string"
        },
        "AmountReclaimed": {
          "format": "double",
          "type": "number"
        },
        "AmountDestroyed": {
          "format": "double",
          "type": "number"
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "UpdateRefrigerantResponse": {
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "TransactionId": {
          "format": "int32",
          "type": "integer"
        },
        "LeakRate": {
          "format": "double",
          "type": "number"
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "GetRefrigerantCertificationRequest": {
      "required": [
        "ClientId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "RefrigerantCertificationResponse": {
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "RefrigerantCertification": {
          "$ref": "#/definitions/RefrigerantCertification"
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "RefrigerantCertification": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "CertificationClassId": {
          "format": "int32",
          "type": "integer"
        },
        "CertificationClass": {
          "enum": [
            "None",
            "Class1",
            "Class1AndClass2",
            "Class1AndClass2AndClass3",
            "Class1AndClass3",
            "Class2",
            "Class2AndClass3",
            "Class3",
            "Universal"
          ],
          "type": "string"
        },
        "CertificationNumber": {
          "type": "string"
        },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "CreatedTime": {
          "format": "date-time",
          "type": "string"
        },
        "UpdatedTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "AddRefrigerantCertificationRequest": {
      "required": [
        "CruMemberId",
        "CertificationClass",
        "CertificationNumber",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "CruMemberId": {
          "format": "int32",
          "type": "integer"
        },
        "CertificationClass": {
          "enum": [
            "None",
            "Class1",
            "Class1AndClass2",
            "Class1AndClass2AndClass3",
            "Class1AndClass3",
            "Class2",
            "Class2AndClass3",
            "Class3",
            "Universal"
          ],
          "type": "string"
        },
        "CertificationNumber": {
          "type": "string"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "PutRefrigerantCertificationRequest": {
      "required": [
        "CertificationId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "CertificationId": {
          "format": "int32",
          "type": "integer"
        },
        "CertificationClass": {
          "enum": [
            "None",
            "Class1",
            "Class1AndClass2",
            "Class1AndClass2AndClass3",
            "Class1AndClass3",
            "Class2",
            "Class2AndClass3",
            "Class3",
            "Universal"
          ],
          "type": "string"
        },
        "CertificationNumber": {
          "type": "string"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "DeleteRefrigerantCertificationRequest": {
      "required": [
        "CertificationId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "CertificationId": {
          "format": "int32",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "RequiredDocumentList": {
      "description": "Attachments response model.",
      "required": [
        "RequiredDocuments",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "RequiredDocuments": {
          "description": "A list of required documents.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequiredDocument"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "RequiredDocument": {
      "description": "Required document details.",
      "required": [
        "DocumentId",
        "Title",
        "HasAdditionalWork",
        "RequiredFields",
        "Status"
      ],
      "type": "object",
      "properties": {
        "DocumentId": {
          "format": "int32",
          "description": "Required document identifier in a customer system.",
          "type": "integer"
        },
        "Title": {
          "description": "Name of required document.",
          "type": "string"
        },
        "StartDate": {
          "format": "date-time",
          "description": "Start Date associated with the RD.",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "description": "End Date associated with the RD.",
          "type": "string"
        },
        "DocumentDate": {
          "format": "date-time",
          "description": "Document Date associated with the RD.",
          "type": "string"
        },
        "Description": {
          "description": "Required document description.",
          "type": "string"
        },
        "HasAdditionalWork": {
          "description": "Uses to inform the customer that the Required Document file or description contains outstanding urgent and/or recommended follow-up actions that need to be reviewed.",
          "type": "boolean"
        },
        "RequiredFields": {
          "description": "Fields that mandatory for required document.",
          "enum": [
            "None",
            "StartDate",
            "EndDate",
            "DocumentDate"
          ],
          "type": "string"
        },
        "Status": {
          "description": "Status of required document.",
          "enum": [
            "Incomplete",
            "NoReviewNeeded",
            "NeedsReview",
            "Reviewed"
          ],
          "type": "string"
        },
        "Type": {
          "description": "Gets or sets TypeName of required document.",
          "type": "string"
        },
        "Category": {
          "description": "Gets or sets category of required document.",
          "type": "string"
        },
        "Attachment": {
          "$ref": "#/definitions/Attachment",
          "description": "Required document's attachment."
        }
      }
    },
    "AddRequiredDocumentRequest": {
      "description": "The request-model for add required document with attachment.",
      "required": [
        "Name",
        "MimeType",
        "File",
        "DocumentId",
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "Attachment name with the extension of the file.",
          "type": "string"
        },
        "MimeType": {
          "description": "Type of the attachment.",
          "type": "string"
        },
        "File": {
          "$ref": "#/definitions/HttpPostedFileMultipart",
          "description": "Attachment to be uploaded."
        },
        "StartDate": {
          "format": "date-time",
          "description": "Start Date associated with the RD.",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "description": "End Date associated with the RD.",
          "type": "string"
        },
        "DocumentDate": {
          "format": "date-time",
          "description": "Document Date associated with the RD.",
          "type": "string"
        },
        "Description": {
          "description": "Required document description.",
          "type": "string"
        },
        "HasAdditionalWork": {
          "description": "Uses to inform the customer that the Required Document file or description contains outstanding urgent and/or recommended follow-up actions that need to be reviewed.",
          "type": "boolean"
        },
        "DocumentId": {
          "format": "int32",
          "description": "Required document identifier in a customer system.",
          "type": "integer"
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "RequiredDocumentAdded": {
      "description": "Required document added response model.",
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "DocumentId": {
          "format": "int32",
          "description": "A unique identifier of the required document in the Customer system.",
          "type": "integer"
        },
        "Status": {
          "description": "Required document status.",
          "enum": [
            "Incomplete",
            "NoReviewNeeded",
            "NeedsReview",
            "Reviewed"
          ],
          "type": "string"
        },
        "AttachmentId": {
          "description": "A unique identifier of the attachment in the CorrigoPro system.",
          "type": "string"
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "BaseRequiredDocumentUpdateRequest": {
      "description": "The request-model for update required document info.",
      "required": [
        "DocumentId",
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "StartDate": {
          "format": "date-time",
          "description": "Start Date associated with the RD.",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "description": "End Date associated with the RD.",
          "type": "string"
        },
        "DocumentDate": {
          "format": "date-time",
          "description": "Document Date associated with the RD.",
          "type": "string"
        },
        "Description": {
          "description": "Required document description.",
          "type": "string"
        },
        "HasAdditionalWork": {
          "description": "Uses to inform the customer that the Required Document file or description contains outstanding urgent and/or recommended follow-up actions that need to be reviewed.",
          "type": "boolean"
        },
        "DocumentId": {
          "format": "int32",
          "description": "Required document identifier in a customer system.",
          "type": "integer"
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "RequiredDocumentUpdated": {
      "description": "Required document updated response model.",
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "DocumentId": {
          "format": "int32",
          "description": "A unique identifier of the required document in the Customer system.",
          "type": "integer"
        },
        "Status": {
          "description": "Required document status.",
          "enum": [
            "Incomplete",
            "NoReviewNeeded",
            "NeedsReview",
            "Reviewed"
          ],
          "type": "string"
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "BaseRequiredDocumentRequest": {
      "required": [
        "DocumentId",
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "DocumentId": {
          "format": "int32",
          "description": "Required document identifier in a customer system.",
          "type": "integer"
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "GetSpecialties": {
      "required": [
        "CustomerId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "CustomerId": {
          "format": "int32",
          "type": "integer"
        },
        "LocaleId": {
          "format": "int32",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "SpecialtiesResponse": {
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Specialties": {
          "description": "Specialties list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Specialty"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "Specialty": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "RelatedToId": {
          "format": "int32",
          "type": "integer"
        },
        "RelatedTo": {
          "type": "string"
        }
      }
    },
    "VisitServiceList": {
      "description": "Full information about visit services.",
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "VisitServices": {
          "description": "Gets or sets Detailed information about visit services of the work order specified in the request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VisitService"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "VisitService": {
      "description": "Information about visit service to be provided.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Visit service identifier.",
          "type": "integer"
        },
        "Rate": {
          "format": "double",
          "description": "Service rate.",
          "type": "number"
        },
        "MoneyCulture": {
          "description": "The money culture of currency data.",
          "type": "string"
        },
        "Name": {
          "description": "Name of a service.",
          "type": "string"
        }
      }
    },
    "PutVisitsCheckIn": {
      "required": [
        "Location",
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "ActualActionDate": {
          "format": "date-time",
          "description": "Actual checkin date\r\nIf not defined, will be set from current date\r\nIntroduced to support backdating.",
          "type": "string"
        },
        "IgnoreVerifyVisitWarnings": {
          "type": "boolean"
        },
        "VisitServices": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "WeatherForecast": {
          "type": "string"
        },
        "Location": {
          "$ref": "#/definitions/GeoLocation",
          "description": "Geographic coordinates of the technician at the moment of the action."
        },
        "Comment": {
          "description": "Additional comment.",
          "maxLength": 3000,
          "minLength": 5,
          "type": "string"
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "GeoLocation": {
      "description": "Geographic coordinates of a technician or subcontractor at the moment of checking in a work order.",
      "required": [
        "Latitude",
        "Longitude"
      ],
      "type": "object",
      "properties": {
        "Latitude": {
          "format": "double",
          "description": "<a href=\"https://developers.google.com/maps/documentation/geocoding/intro#ReverseGeocoding\">Google geographic</a> latitude.",
          "maximum": 90,
          "minimum": -90,
          "type": "number"
        },
        "Longitude": {
          "format": "double",
          "description": "<a href=\"https://developers.google.com/maps/documentation/geocoding/intro#ReverseGeocoding\">Google geographic</a> longitude.",
          "maximum": 180,
          "minimum": -180,
          "type": "number"
        }
      }
    },
    "PutVisitsCheckOut": {
      "required": [
        "Location",
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "ActualActionDate": {
          "format": "date-time",
          "description": "Gets or sets actual checkout date\r\nIf not defined, will be set from current date\r\nIntroduced to support backdating.",
          "type": "string"
        },
        "IgnoreVerifyVisitWarnings": {
          "type": "boolean"
        },
        "VisitServices": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "WeatherForecast": {
          "type": "string"
        },
        "Location": {
          "$ref": "#/definitions/GeoLocation",
          "description": "Geographic coordinates of the technician at the moment of the action."
        },
        "Comment": {
          "description": "Additional comment.",
          "maxLength": 3000,
          "minLength": 5,
          "type": "string"
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "VisitResponse": {
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Visits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VisitDetail"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "VisitDetail": {
      "type": "object",
      "properties": {
        "Attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttachmentModel"
          }
        },
        "Id": {
          "format": "int32",
          "description": "Visit identifier.",
          "type": "integer"
        },
        "CheckedIn": {
          "format": "date-time",
          "description": "Date and time of CheckedIn of the visit.",
          "type": "string"
        },
        "CheckedOut": {
          "format": "date-time",
          "description": "Date and time of CheckedOut of the visit.",
          "type": "string"
        },
        "CheckInPhone": {
          "description": "Phone number used for CheckIn.",
          "type": "string"
        },
        "CheckOutPhone": {
          "description": "Phone number used for CheckOut.",
          "type": "string"
        },
        "Comment": {
          "description": "A comment of the visit.",
          "type": "string"
        },
        "CheckInActor": {
          "description": "Name of a person who evaluated CheckIn.",
          "type": "string"
        },
        "CheckOutActor": {
          "description": "Name of a person who evaluated CheckOut.",
          "type": "string"
        },
        "IsCustomerVisit": {
          "description": "When true, indicates that the visit created by the customer.",
          "type": "boolean"
        },
        "VisitStatus": {
          "description": "Verification status of visit.",
          "enum": [
            "None",
            "Bad",
            "Good"
          ],
          "type": "string"
        },
        "VerificationComment": {
          "description": "A comment provided by the customer about the visit verification.",
          "type": "string"
        },
        "VerificationCommentAuthor": {
          "description": "Name of a person who provided verification comment.",
          "type": "string"
        },
        "VisitCommentAuthor": {
          "description": "Name of a person who provided visit comment.",
          "type": "string"
        },
        "DtCreated": {
          "format": "date-time",
          "description": "Creation date of the visit.",
          "type": "string"
        },
        "CheckInWeather": {
          "description": "Weather forecast during CheckIn.",
          "type": "string"
        },
        "CheckOutWeather": {
          "description": "Weather forecast during CheckOut.",
          "type": "string"
        },
        "VisitProvidedServices": {
          "description": "Visit services that were provided.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VisitProvidedService"
          }
        }
      }
    },
    "AttachmentModel": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "AttachmentId": {
          "format": "int32",
          "type": "integer"
        },
        "ObjectId": {
          "format": "int32",
          "type": "integer"
        },
        "ProviderWorkOrderId": {
          "format": "int32",
          "type": "integer"
        },
        "SenderProviderId": {
          "format": "int32",
          "type": "integer"
        },
        "PublicId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "DisplayAs": {
          "type": "string"
        },
        "DocumentType": {
          "enum": [
            "Document",
            "Picture",
            "Signature",
            "InvoicePrintout",
            "ServiceContract",
            "Misc"
          ],
          "type": "string"
        },
        "Key": {
          "type": "string"
        },
        "DtCreated": {
          "format": "date-time",
          "type": "string"
        },
        "DtUpdated": {
          "format": "date-time",
          "type": "string"
        },
        "AttachmentMetaData": {
          "$ref": "#/definitions/AttachmentMetaData"
        },
        "IsReadOnly": {
          "type": "boolean"
        },
        "IsSharedWithCustomer": {
          "type": "boolean"
        },
        "Area": {
          "enum": [
            "WorkOrder",
            "Invoice",
            "Signature",
            "Visit",
            "Procedure",
            "Customer",
            "RequiredDocument"
          ],
          "type": "string"
        },
        "IsPublic": {
          "type": "boolean"
        },
        "Visibility": {
          "enum": [
            "None",
            "Customer",
            "CruMember",
            "CruLead",
            "CruOnly",
            "CruLeads",
            "All"
          ],
          "type": "string"
        },
        "SenderName": {
          "type": "string"
        },
        "SenderPhone": {
          "type": "string"
        },
        "SenderType": {
          "enum": [
            "Customer",
            "Pro",
            "Bot",
            "Direct"
          ],
          "type": "string"
        }
      }
    },
    "VisitProvidedService": {
      "description": "Description of the visit provided service.",
      "type": "object",
      "properties": {
        "ServiceId": {
          "format": "int32",
          "description": "Service identifier.",
          "type": "integer"
        },
        "Verification": {
          "format": "double",
          "description": "Amount of credit for Visit.",
          "type": "number"
        },
        "Name": {
          "description": "The service name.",
          "type": "string"
        }
      }
    },
    "AttachmentMetaData": {
      "type": "object",
      "properties": {
        "Thumbnail": {
          "$ref": "#/definitions/ThumbnailMetaData"
        },
        "IsMetadataCompleted": {
          "type": "boolean"
        },
        "FileName": {
          "type": "string"
        },
        "MimeType": {
          "type": "string"
        },
        "ContentLength": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "ThumbnailMetaData": {
      "type": "object",
      "properties": {
        "ThumbnailHeight": {
          "format": "int32",
          "type": "integer"
        },
        "ThumbnailWidth": {
          "format": "int32",
          "type": "integer"
        },
        "ThumbnailKey": {
          "type": "string"
        },
        "IsThumbnailPresent": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "AddVisitsAttachment": {
      "required": [
        "VisitId",
        "File",
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "VisitId": {
          "format": "int32",
          "description": "Visit identifier in a customer system.",
          "type": "integer"
        },
        "File": {
          "$ref": "#/definitions/HttpPostedFileMultipart",
          "description": "Attachment to be uploaded."
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "DeleteVisitsAttachment": {
      "required": [
        "VisitId",
        "AttachmentId",
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "VisitId": {
          "format": "int32",
          "description": "Visit identifier in a customer system.",
          "type": "integer"
        },
        "AttachmentId": {
          "format": "uuid",
          "description": "Required document identifier in a customer system.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "GetByWorkOrders": {
      "required": [
        "Ids",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Ids": {
          "description": "Unique identifiers of  work orders in the CorrigoPro system.",
          "maxItems": 50,
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "WorkOrderList": {
      "description": "Full information about WorkOrders.",
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "WorkOrders": {
          "description": "Detailed information about work orders specified in the request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkOrder"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "WorkOrder": {
      "description": "Detailed description of a work order.",
      "required": [
        "WorkOrderNumber",
        "WorkOrderId",
        "BranchId",
        "Schedule",
        "Type",
        "WorkType",
        "AccompanyingMessage",
        "Nte",
        "Sla",
        "WorkDetails",
        "Customer",
        "IsPrebilled",
        "IsWarranty",
        "Created",
        "LastUpdate",
        "Status",
        "Currency"
      ],
      "type": "object",
      "properties": {
        "WorkOrderNumber": {
          "description": "An alphanumeric identifier of a work order in a customer system.",
          "maxLength": 32,
          "minLength": 0,
          "type": "string"
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "BranchId": {
          "format": "int32",
          "description": "Identifier of the branch the work order is sent to.",
          "type": "integer"
        },
        "IVRInfo": {
          "$ref": "#/definitions/IVRInfo",
          "description": "Information for using Interactive Voice Response."
        },
        "Schedule": {
          "$ref": "#/definitions/ScheduleInfo",
          "description": "Information about the work order schedule."
        },
        "Type": {
          "description": "The work order type.",
          "enum": [
            "PMRM",
            "Request",
            "Visit"
          ],
          "type": "string"
        },
        "WorkType": {
          "$ref": "#/definitions/WorkType",
          "description": "The work order detailed type."
        },
        "AccompanyingMessage": {
          "description": "Descriptive summary of a work order provided by the requestor.",
          "maxLength": 3072,
          "minLength": 0,
          "type": "string"
        },
        "Nte": {
          "$ref": "#/definitions/Nte",
          "description": "<span class=\"propOptKey\">Not To Exceed</span> includes information about amount and quote request."
        },
        "Sla": {
          "$ref": "#/definitions/SLA",
          "description": "<span class=\"propOptKey\">Service Level Agreement</span> includes information about priority and term of execution work."
        },
        "WorkDetails": {
          "$ref": "#/definitions/WorkDetails",
          "description": "Details about services to be provided and checklist to be filled out."
        },
        "CompletionDetails": {
          "$ref": "#/definitions/CompletionDetails",
          "description": "Work order completion details."
        },
        "Contact": {
          "$ref": "#/definitions/Contact",
          "description": "Information about a person who requested work."
        },
        "ServiceLocation": {
          "$ref": "#/definitions/Placemark",
          "description": "Information about work location."
        },
        "Customer": {
          "$ref": "#/definitions/CustomerDetails",
          "description": "Information about a customer."
        },
        "IsPrebilled": {
          "description": "If true, an invoice should be submitted before the work order is accepted.",
          "type": "boolean"
        },
        "IsWarranty": {
          "description": "If true, the work order possibly covered by warranty.",
          "type": "boolean"
        },
        "Created": {
          "format": "date-time",
          "description": "Creation date of the work order.",
          "type": "string"
        },
        "LastUpdate": {
          "format": "date-time",
          "description": "Date and time when the work order was last modified. This value changes if there are any changes in the work order data model.\r\n<strong>Note</strong>: When a work order is in <strong>New</strong> status, changes to the work order are not tracked, and the LastUpdate value corresponds to the <strong>Created</strong> value.",
          "type": "string"
        },
        "Feedback": {
          "$ref": "#/definitions/Feedback",
          "description": "Customer rating of completed work. The value is available only for work order in the <strong>Verified</strong> status."
        },
        "Status": {
          "description": "Status of the work order.",
          "enum": [
            "New",
            "Accepted",
            "Recalled",
            "Rejected",
            "CheckedIn",
            "Paused",
            "CheckedOut",
            "OnHold",
            "Verified",
            "NeedsCompletionDetails"
          ],
          "type": "string"
        },
        "Currency": {
          "description": "ISO 4217 alphabetic currency code.",
          "maxLength": 3,
          "minLength": 3,
          "type": "string"
        },
        "TimeZone": {
          "description": "Information about work time zone.",
          "type": "string"
        },
        "WorkZoneNumber": {
          "description": "An alphanumeric identifier of a work zone number in a customer system.",
          "type": "string"
        },
        "WorkZoneID": {
          "format": "int32",
          "description": "An alphanumeric identifier of a work zone number in a customer system.",
          "type": "integer"
        },
        "InternalNote": {
          "description": "Internal note field.",
          "maxLength": 3000,
          "minLength": 0,
          "type": "string"
        },
        "AdditionalFields": {
          "description": "The list of custom fields and their values. Array.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalField"
          }
        },
        "LastAction": {
          "$ref": "#/definitions/WoActionInfo[ActionWithComment]",
          "description": "Work order last action."
        },
        "IsmStatus": {
          "description": "Status of the Induction and Safety Management.",
          "enum": [
            "NotApplicable",
            "NotRequired",
            "Waiting",
            "Started",
            "Passed",
            "ManuallyPassed"
          ],
          "type": "string"
        },
        "RefrigerantTransactions": {
          "description": "Refrigerant Transactions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RefrigerantTransaction"
          }
        }
      }
    },
    "IVRInfo": {
      "description": "Information for using Interactive Voice Response.",
      "type": "object",
      "properties": {
        "IvrNumber": {
          "description": "Phone number to access IVR application.",
          "type": "string"
        },
        "WonInfo": {
          "description": "An optional customer-specific instructions.",
          "type": "string"
        },
        "IvrCode": {
          "description": "IVR code, usable only if IvrNumber is specified.",
          "type": "string"
        }
      }
    },
    "ScheduleInfo": {
      "description": "Information about work schedule.",
      "required": [
        "Pte"
      ],
      "type": "object",
      "properties": {
        "ScheduledStart": {
          "format": "date-time",
          "description": "Scheduled start date of a work order.",
          "type": "string"
        },
        "Pte": {
          "description": "<span class=\"propOptKey\">Permission To Enter</span> describes what technician should do before arriving on site.",
          "enum": [
            "Unknown",
            "Pte",
            "Appointment",
            "CallFirst",
            "Na"
          ],
          "type": "string"
        }
      }
    },
    "WorkType": {
      "description": "Detailed work order type.",
      "type": "object",
      "properties": {
        "Category": {
          "description": "Work category.",
          "enum": [
            "Basic",
            "PMRM",
            "Turn",
            "Request"
          ],
          "type": "string"
        },
        "Id": {
          "format": "int32",
          "description": "Work type id.",
          "type": "integer"
        },
        "Name": {
          "description": "Subtype name.",
          "type": "string"
        },
        "IsVisit": {
          "description": "Visit work order type flag.",
          "type": "boolean"
        }
      }
    },
    "Nte": {
      "description": "Description of a quote amount request.",
      "required": [
        "Amount",
        "IsQuoteMultiline",
        "DtLastUpdate"
      ],
      "type": "object",
      "properties": {
        "Amount": {
          "format": "double",
          "description": "Not to exceed amount. When it is set to 0, NTE is not applied.",
          "type": "number"
        },
        "Quote": {
          "$ref": "#/definitions/Quote",
          "description": "Is available if the quote is submitted by a provider."
        },
        "IsQuoteMultiline": {
          "description": "Flag to show if nte is applicable to line item (true) or work order (false).",
          "type": "boolean"
        },
        "DtLastUpdate": {
          "format": "date-time",
          "description": "NTE last updated date.",
          "type": "string"
        }
      }
    },
    "SLA": {
      "description": "<span class=\"propOptKey\">Service Level Agreement</span> includes information about priority and deadlines of a work.",
      "required": [
        "PriorityId",
        "PriorityName",
        "IsEmergency"
      ],
      "type": "object",
      "properties": {
        "DueDate": {
          "format": "date-time",
          "description": "Work order completion deadline.",
          "type": "string"
        },
        "OnSiteBy": {
          "format": "date-time",
          "description": "Work order start deadline.",
          "type": "string"
        },
        "AcknowledgeBy": {
          "format": "date-time",
          "description": "Accept/reject deadline date.",
          "type": "string"
        },
        "PriorityId": {
          "format": "int32",
          "description": "Id of the priority.",
          "type": "integer"
        },
        "PriorityName": {
          "description": "Work order priority.",
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "IsEmergency": {
          "description": "Indicates if the work order is an emergency case.",
          "type": "boolean"
        }
      }
    },
    "WorkDetails": {
      "description": "Details about services to be provided and checklist to be filled out.",
      "required": [
        "Assets"
      ],
      "type": "object",
      "properties": {
        "CheckList": {
          "description": "Items to be checked during the work process.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CheckListItemDescriptor"
          }
        },
        "Procedures": {
          "description": "Procedures with steps to be completed during the work process.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Procedure"
          }
        },
        "Assets": {
          "description": "Information about services to be provided.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Asset"
          }
        },
        "VisitInfo": {
          "$ref": "#/definitions/VisitInfo",
          "description": "Visit work order information."
        },
        "Specialty": {
          "$ref": "#/definitions/CustomerSpecialty",
          "description": "Specialty work order information."
        },
        "Flags": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CompletionDetails": {
      "description": "Describes completion details of workorder.",
      "type": "object",
      "properties": {
        "CompletedOn": {
          "format": "date-time",
          "description": "Date and time of workorder completion.",
          "type": "string"
        },
        "RepairCategoryId": {
          "format": "int32",
          "description": "Selected repair category id.",
          "type": "integer"
        },
        "RepairCategory": {
          "description": "Selected repair category name.",
          "type": "string"
        },
        "RepairCodeId": {
          "format": "int32",
          "description": "Selected repair code id.",
          "type": "integer"
        },
        "RepairCode": {
          "description": "Selected repair code name.",
          "type": "string"
        },
        "Comment": {
          "description": "Completion comment.",
          "type": "string"
        },
        "CustomFields": {
          "description": "List of available custom fields with their values.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomField"
          }
        }
      }
    },
    "Contact": {
      "description": "Information about a contact.",
      "required": [
        "FullName",
        "ContactAt"
      ],
      "type": "object",
      "properties": {
        "FullName": {
          "description": "Name of a person who created a request.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "ContactAt": {
          "description": "The contact information represented as a single string (email, phone).",
          "maxLength": 512,
          "minLength": 0,
          "type": "string"
        },
        "Phones": {
          "description": "A parsed phone part from the <strong>ContactAt</strong>.\r\n<br />\r\nIt can also include additional phone numbers not listed in the. <strong>ContactAt</strong>",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Emails": {
          "description": "A parsed email part from the <strong>ContactAt</strong>.\r\n<br />\r\nIt can also include additional emails not listed in the. <strong>ContactAt</strong>",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Placemark": {
      "description": "Information about location of service requested in a work order.",
      "required": [
        "OccupantID",
        "Geo"
      ],
      "type": "object",
      "properties": {
        "OccupantID": {
          "format": "int32",
          "description": "Id of the placemark. Equals to 0 for all work orders created before 2017-10-13.",
          "type": "integer"
        },
        "Address": {
          "$ref": "#/definitions/Address",
          "description": "Address of the placemark."
        },
        "Geo": {
          "$ref": "#/definitions/GeoLocation",
          "description": "The geographic coordinates of the placemark."
        },
        "OccupantName": {
          "description": "Name of the placemark.",
          "maxLength": 64,
          "minLength": 0,
          "type": "string"
        },
        "SpaceName": {
          "type": "string"
        },
        "SpaceId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CustomerDetails": {
      "description": "Information about a customer.",
      "required": [
        "Id",
        "Name"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "A unique identifier of a customer.",
          "type": "integer"
        },
        "Name": {
          "description": "The customer name.",
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "Feedback": {
      "description": "Customer rating for completed work.",
      "required": [
        "TimeStamp",
        "Actor",
        "Type"
      ],
      "type": "object",
      "properties": {
        "TimeStamp": {
          "format": "date-time",
          "description": "Date and time when a work order was evaluated.",
          "type": "string"
        },
        "Actor": {
          "description": "Name of a person who evaluated the work order.",
          "type": "string"
        },
        "Comment": {
          "description": "An optional comment from an evaluator of the work order.",
          "type": "string"
        },
        "Type": {
          "description": "Work order evaluation result type.",
          "enum": [
            "Negative",
            "Neutral",
            "Positive",
            "NotCompleted"
          ],
          "type": "string"
        }
      }
    },
    "AdditionalField": {
      "description": "AdditionalField descriptor.",
      "required": [
        "AdditionalFieldId",
        "FieldLabel",
        "Value"
      ],
      "type": "object",
      "properties": {
        "AdditionalFieldId": {
          "format": "int32",
          "description": "Unique identifiers of a custom field in requestor’s system.",
          "type": "integer"
        },
        "FieldLabel": {
          "description": "A label of the custom field.",
          "type": "string"
        },
        "UrlLabel": {
          "description": "Applicable only for URL. Label used for URL.",
          "type": "string"
        },
        "Value": {
          "description": "A value of the custom field.",
          "type": "string"
        }
      }
    },
    "WoActionInfo[ActionWithComment]": {
      "description": "Describes Work order action info.",
      "type": "object",
      "properties": {
        "DtStamp": {
          "format": "date-time",
          "description": "Date and time of action.",
          "type": "string"
        },
        "EventType": {
          "description": "Type of action event.",
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/ActionWithComment",
          "description": "Data of action event."
        }
      }
    },
    "Quote": {
      "description": "A request from a provider to increase <strong>NTE</strong> amount.",
      "required": [
        "Amount",
        "QuoteStatus",
        "Comment",
        "RejectionReason"
      ],
      "type": "object",
      "properties": {
        "Amount": {
          "format": "double",
          "description": "If the quote is approved by a customer, the <strong>WorkOrder.Nte.Amount</strong> becomes equal to the quoted amount.",
          "type": "number"
        },
        "QuoteStatus": {
          "description": "A status of the request.",
          "enum": [
            "Submitted",
            "Approved",
            "Rejected",
            "Requested",
            "Draft",
            "Recalled"
          ],
          "type": "string"
        },
        "Comment": {
          "description": "Descriptive text with a reason why the provider needs to increase the NTE.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "RejectionReason": {
          "description": "Quote rejection reason.",
          "maxLength": 6144,
          "minLength": 0,
          "type": "string"
        },
        "DiscountAmount": {
          "format": "double",
          "description": "Calculated discount amount.",
          "type": "number"
        },
        "DiscountType": {
          "description": "Represents quote discount type.",
          "enum": [
            "None",
            "Percentage",
            "Amount"
          ],
          "type": "string"
        },
        "QuoteLineItems": {
          "description": "The list of quote items added to the work order. Array.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuoteLineItem"
          }
        },
        "RecalledReason": {
          "type": "string"
        }
      }
    },
    "Asset": {
      "description": "Description of the requested service.",
      "required": [
        "Id",
        "Task",
        "AssetName"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Id of the asset.",
          "type": "integer"
        },
        "Path": {
          "description": "Hierarchical path describes the type of work.\r\n<br />\r\n“&gt;” is used as a separator in the path.",
          "maxLength": 128,
          "minLength": 0,
          "type": "string"
        },
        "Task": {
          "description": "Description of what should be done.",
          "maxLength": 512,
          "minLength": 0,
          "type": "string"
        },
        "AssetName": {
          "description": "An asset name.",
          "maxLength": 128,
          "minLength": 0,
          "type": "string"
        },
        "Comment": {
          "description": "Additional information about the service.",
          "maxLength": 3096,
          "minLength": 0,
          "type": "string"
        },
        "Type": {
          "description": "Name of the asset type.",
          "enum": [
            "Unknown",
            "Regular",
            "Building",
            "Unit",
            "Community",
            "RoomArea",
            "Floor",
            "Utility",
            "Equipment"
          ],
          "type": "string"
        },
        "TypeId": {
          "format": "int32",
          "description": "Id of the asset type in the customer system.",
          "type": "integer"
        },
        "Model": {
          "$ref": "#/definitions/AssetModel",
          "description": "Description of a model the asset is created from."
        }
      }
    },
    "VisitInfo": {
      "description": "Visit work order information.",
      "type": "object",
      "properties": {
        "Visits": {
          "description": "List of visits.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Visit"
          }
        },
        "VisitWoDetails": {
          "$ref": "#/definitions/VisitWoDetails",
          "description": "Information about a visit wo flow, instruction, schedule etc."
        },
        "VisitServices": {
          "description": "Information about visit services to be provided.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VisitService"
          }
        }
      }
    },
    "CustomerSpecialty": {
      "description": "Specialty of the customer.",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Name of the specialty.",
          "type": "string"
        }
      }
    },
    "CustomField": {
      "description": "Additional field that can be required for completion of a work order.",
      "required": [
        "Id",
        "Value"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Corresponds to a. <strong>CustomFieldDescriptor.Id</strong>",
          "type": "integer"
        },
        "Value": {
          "description": "Value of a custom field set by the provider.\r\nThe provided value must meet the requirements defined by the. <strong>CustomFieldDescriptor</strong>",
          "maxLength": 1024,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "Address": {
      "description": "Address information as received from a customer.",
      "type": "object",
      "properties": {
        "City": {
          "description": "A city name.",
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "Country": {
          "description": "Name or abbreviation of a country.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "State": {
          "description": "Name or abbreviation of a state.",
          "maxLength": 128,
          "minLength": 0,
          "type": "string"
        },
        "Street1": {
          "description": "A street (line 1).",
          "maxLength": 128,
          "minLength": 0,
          "type": "string"
        },
        "Street2": {
          "description": "A street (line 2).\r\n<br />\r\nThis field is used if the street information does not fit the <strong>Street1</strong> field.",
          "maxLength": 128,
          "minLength": 0,
          "type": "string"
        },
        "PostalCode": {
          "description": "A postal code/ZIP code.",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "ActionWithComment": {
      "description": "Describes Work order action with comment.",
      "type": "object",
      "properties": {
        "Comment": {
          "description": "Action comment.",
          "type": "string"
        }
      }
    },
    "QuoteLineItem": {
      "description": "Used for GET api/workOrder call.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Category": {
          "enum": [
            "Labor",
            "Materials",
            "Misc",
            "Shipping",
            "Services",
            "PriceList",
            "Tax"
          ],
          "type": "string"
        },
        "PriceListItemId": {
          "format": "int32",
          "type": "integer"
        },
        "RequestorServiceId": {
          "format": "int32",
          "type": "integer"
        },
        "PriceListItemName": {
          "type": "string"
        },
        "Description": {
          "maxLength": 3000,
          "minLength": 0,
          "type": "string"
        },
        "Quantity": {
          "format": "double",
          "type": "number"
        },
        "Rate": {
          "format": "double",
          "type": "number"
        },
        "Subtotal": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "IsRateReadOnly": {
          "type": "boolean"
        },
        "TaxCode": {
          "type": "string"
        }
      }
    },
    "AssetModel": {
      "description": "Description of a model an asset item is created from.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Id of an asset model in the customer system.",
          "type": "integer"
        },
        "Name": {
          "description": "Name of the asset model in the customer system.",
          "maxLength": 128,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "Visit": {
      "description": "Visit info.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Visit identifier.",
          "type": "integer"
        },
        "CheckedIn": {
          "format": "date-time",
          "description": "Date and time of CheckedIn of the visit.",
          "type": "string"
        },
        "CheckedOut": {
          "format": "date-time",
          "description": "Date and time of CheckedOut of the visit.",
          "type": "string"
        },
        "CheckInPhone": {
          "description": "Phone number used for CheckIn.",
          "type": "string"
        },
        "CheckOutPhone": {
          "description": "Phone number used for CheckOut.",
          "type": "string"
        },
        "Comment": {
          "description": "A comment of the visit.",
          "type": "string"
        },
        "CheckInActor": {
          "description": "Name of a person who evaluated CheckIn.",
          "type": "string"
        },
        "CheckOutActor": {
          "description": "Name of a person who evaluated CheckOut.",
          "type": "string"
        },
        "IsCustomerVisit": {
          "description": "When true, indicates that the visit created by the customer.",
          "type": "boolean"
        },
        "VisitStatus": {
          "description": "Verification status of visit.",
          "enum": [
            "None",
            "Bad",
            "Good"
          ],
          "type": "string"
        },
        "VerificationComment": {
          "description": "A comment provided by the customer about the visit verification.",
          "type": "string"
        },
        "VerificationCommentAuthor": {
          "description": "Name of a person who provided verification comment.",
          "type": "string"
        },
        "VisitCommentAuthor": {
          "description": "Name of a person who provided visit comment.",
          "type": "string"
        },
        "DtCreated": {
          "format": "date-time",
          "description": "Creation date of the visit.",
          "type": "string"
        },
        "CheckInWeather": {
          "description": "Weather forecast during CheckIn.",
          "type": "string"
        },
        "CheckOutWeather": {
          "description": "Weather forecast during CheckOut.",
          "type": "string"
        },
        "VisitProvidedServices": {
          "description": "Visit services that were provided.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VisitProvidedService"
          }
        }
      }
    },
    "VisitWoDetails": {
      "description": "Information about a visit wo flow.",
      "type": "object",
      "properties": {
        "IvrCode": {
          "description": "IVR code, usable only if IvrNumber is specified.",
          "type": "string"
        },
        "Instruction": {
          "description": "Instruction for visit.",
          "type": "string"
        },
        "MaxNumberOfVisits": {
          "format": "int32",
          "description": "Max number of possible visits.",
          "type": "integer"
        },
        "WindowSchedule": {
          "$ref": "#/definitions/WindowSchedule",
          "description": "Schedule for visits."
        },
        "DtStart": {
          "format": "date-time",
          "description": "Start of the time period covered by visits schedule.",
          "type": "string"
        },
        "DtEnd": {
          "format": "date-time",
          "description": "End of the time period covered by visits schedule.",
          "type": "string"
        },
        "WeatherForecast": {
          "description": "Optional element containing WO trigger event information supplied by third-party application, such as weather forecast.",
          "type": "string"
        }
      }
    },
    "WindowSchedule": {
      "description": "Visits schedule.",
      "type": "object",
      "properties": {
        "VisitDays": {
          "description": "A bitmask representing visits schedule.",
          "enum": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ],
          "type": "string"
        },
        "LocalWindowStart": {
          "description": "Start of the arrival time window.",
          "type": "string"
        },
        "WindowDurationInMinutes": {
          "format": "int32",
          "description": "Visit time window duration in minutes.",
          "type": "integer"
        }
      }
    },
    "GetByFilter": {
      "required": [
        "Parameters",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Parameters": {
          "$ref": "#/definitions/SearchModel",
          "description": "A model with search parameters."
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "SearchModel": {
      "description": "Description of work orders search.\r\nAll search criteria are united with logical operator <strong>AND</strong>. Only <strong>Statuses</strong> criteria are united with logical operator <strong>OR</strong>.",
      "type": "object",
      "properties": {
        "WorkOrderNumber": {
          "description": "Search for work orders where <strong>WorkOrderNumber</strong> contains a provided value.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "CustomerId": {
          "format": "int32",
          "description": "Identifier of a customer from whom the work order is received.",
          "type": "integer"
        },
        "BranchId": {
          "format": "int32",
          "description": "Identifier of the branch the work order is sent to.",
          "type": "integer"
        },
        "Created": {
          "$ref": "#/definitions/DateRange",
          "description": "Work order creation date range.",
          "x-custom-annotations": [
            "At least one of fields 'Created', 'AcknowledgeBy', 'OnSiteBy', 'DueDate', 'LastUpdate' should be specified."
          ]
        },
        "AcknowledgeBy": {
          "$ref": "#/definitions/DateRange",
          "description": "Work orders that should be accepted/rejected within the provided. <strong>DateRange</strong>",
          "x-custom-annotations": [
            "At least one of fields 'Created', 'AcknowledgeBy', 'OnSiteBy', 'DueDate', 'LastUpdate' should be specified."
          ]
        },
        "OnSiteBy": {
          "$ref": "#/definitions/DateRange",
          "description": "Work orders that should be started within the provided. <strong>DateRange</strong>",
          "x-custom-annotations": [
            "At least one of fields 'Created', 'AcknowledgeBy', 'OnSiteBy', 'DueDate', 'LastUpdate' should be specified."
          ]
        },
        "DueDate": {
          "$ref": "#/definitions/DateRange",
          "description": "Work orders that should be completed within the provided. <strong>DateRange</strong>",
          "x-custom-annotations": [
            "At least one of fields 'Created', 'AcknowledgeBy', 'OnSiteBy', 'DueDate', 'LastUpdate' should be specified."
          ]
        },
        "LastUpdate": {
          "$ref": "#/definitions/DateRange",
          "description": "Work orders that were changed within the provided. <strong>DateRange</strong>",
          "x-custom-annotations": [
            "At least one of fields 'Created', 'AcknowledgeBy', 'OnSiteBy', 'DueDate', 'LastUpdate' should be specified."
          ]
        },
        "Statuses": {
          "description": "List of work order statuses.",
          "type": "array",
          "items": {
            "enum": [
              "New",
              "Accepted",
              "Recalled",
              "Rejected",
              "CheckedIn",
              "Paused",
              "CheckedOut",
              "OnHold",
              "Verified",
              "NeedsCompletionDetails"
            ],
            "type": "string"
          }
        }
      }
    },
    "LightweightWorkOrderList": {
      "required": [
        "WorkOrders",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "WorkOrders": {
          "description": "Contains basic information about  the work order.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkOrderSearchResult"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "WorkOrderSearchResult": {
      "description": "Basic description of a work order.",
      "required": [
        "WorkOrderNumber",
        "WorkOrderId",
        "BranchId",
        "Type",
        "WorkType",
        "Sla",
        "Status",
        "Customer",
        "LastUpdate",
        "Created"
      ],
      "type": "object",
      "properties": {
        "WorkOrderNumber": {
          "description": "A unique alphanumeric identifier of a work order in a customer system.",
          "maxLength": 32,
          "minLength": 0,
          "type": "string"
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "Unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "BranchId": {
          "format": "int32",
          "description": "Identifier of the branch the work order is sent to.",
          "type": "integer"
        },
        "Type": {
          "description": "The work order type.",
          "enum": [
            "PMRM",
            "Request",
            "Visit"
          ],
          "type": "string"
        },
        "WorkType": {
          "$ref": "#/definitions/WorkType",
          "description": "The work order detailed type."
        },
        "Sla": {
          "$ref": "#/definitions/SLA",
          "description": "<span class=\"propOptKey\">Service Level Agreement</span> includes information about priority and term of execution of work."
        },
        "Status": {
          "description": "Status of  the work order.",
          "enum": [
            "New",
            "Accepted",
            "Recalled",
            "Rejected",
            "CheckedIn",
            "Paused",
            "CheckedOut",
            "OnHold",
            "Verified",
            "NeedsCompletionDetails"
          ],
          "type": "string"
        },
        "Customer": {
          "$ref": "#/definitions/CustomerDetails",
          "description": "Information about a customer."
        },
        "LastUpdate": {
          "format": "date-time",
          "description": "Date and time when the work order was last modified. This value changes if there are any changes in the work order data model.\r\n<strong>Note</strong>: When a work order is in <strong>New</strong> status, changes to the work order are not tracked, and the LastUpdate value corresponds to the <strong>Created</strong> value.",
          "type": "string"
        },
        "Created": {
          "format": "date-time",
          "description": "Date and time of creation of the work order.",
          "type": "string"
        }
      }
    },
    "PutBaseWorkOrderManagement": {
      "required": [
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Comment": {
          "description": "Additional comment.",
          "maxLength": 3000,
          "minLength": 5,
          "type": "string"
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "PutRejectWorkOrder": {
      "description": "Reject work order request model.",
      "required": [
        "Comment",
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Comment": {
          "description": "A text field for describing a reason of rejecting the work order.",
          "type": "string"
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "PutQuoteSubmit": {
      "description": "Quote submit request model.",
      "required": [
        "Comment",
        "Amount",
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Comment": {
          "description": "Required information describing a reason for changing the NTE amount.",
          "maxLength": 6144,
          "minLength": 5,
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "description": "Quote amount containing a new value.",
          "type": "number"
        },
        "DiscountAmount": {
          "format": "double",
          "description": "Amount of discount.",
          "type": "number"
        },
        "QuoteLineItems": {
          "description": "The list of quote items that would be sent to your customer.Array.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuoteLineItem"
          }
        },
        "ServiceDate": {
          "format": "date-time",
          "description": "Date of service",
          "type": "string"
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "RecallQuote": {
      "required": [
        "RecallReason",
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "RecallReason": {
          "type": "string"
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "PutCheckIn": {
      "required": [
        "Location",
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "ActualActionDate": {
          "format": "date-time",
          "description": "Actual checkin date\r\nIf not defined, will be set from current date\r\nIntroduced to support backdating.",
          "type": "string"
        },
        "Location": {
          "$ref": "#/definitions/GeoLocation",
          "description": "Geographic coordinates of the technician at the moment of the action."
        },
        "Comment": {
          "description": "Additional comment.",
          "maxLength": 3000,
          "minLength": 5,
          "type": "string"
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "PutPause": {
      "required": [
        "Location",
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "ActualActionDate": {
          "format": "date-time",
          "description": "Actual checkin date\r\nIf not defined, will be set from current date\r\nIntroduced to support backdating.",
          "type": "string"
        },
        "Location": {
          "$ref": "#/definitions/GeoLocation",
          "description": "Geographic coordinates of the technician at the moment of the action."
        },
        "Comment": {
          "description": "Additional comment.",
          "maxLength": 3000,
          "minLength": 5,
          "type": "string"
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "PutCheckOut": {
      "description": "Complete work order request model.",
      "required": [
        "Location",
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "CheckList": {
          "description": "Contains information about the checklist.\r\nMandatory if defined in the work order. All items should be in state other than. <strong>Uncompleted</strong>",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CheckListItem"
          }
        },
        "RepairInfo": {
          "$ref": "#/definitions/RepairInfoHeader",
          "description": "Contains <strong>Repair Code ID</strong> and <strong>Repair Category ID</strong>.\r\nIs mandatory if defined in the customer settings."
        },
        "CustomFields": {
          "description": "Contains custom field values.\r\nIs mandatory if defined in the customer settings.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomField"
          }
        },
        "ActualActionDate": {
          "format": "date-time",
          "description": "Actual checkout date\r\nIf not defined, will be set from current date\r\nIntroduced to support backdating.",
          "type": "string"
        },
        "Location": {
          "$ref": "#/definitions/GeoLocation",
          "description": "Geographic coordinates of the technician at the moment of the action."
        },
        "Comment": {
          "description": "Additional comment.",
          "maxLength": 3000,
          "minLength": 5,
          "type": "string"
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "RepairInfoHeader": {
      "description": "Description of a repair category and code identifiers.",
      "required": [
        "CategoryId"
      ],
      "type": "object",
      "properties": {
        "CodeId": {
          "format": "int32",
          "description": "Selected repair code identifier.",
          "type": "integer"
        },
        "CategoryId": {
          "format": "int32",
          "description": "Selected repair category identifier.",
          "type": "integer"
        }
      }
    },
    "PutWorkDoneDetails": {
      "required": [
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "RepairInfo": {
          "$ref": "#/definitions/RepairInfoHeader",
          "description": "Contains <strong>Repair Code ID</strong> and <strong>Repair Category ID</strong>.\r\nIs mandatory if defined in the customer settings."
        },
        "CustomFields": {
          "description": "Contains custom field values.\r\nIs mandatory if defined in the customer settings.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomField"
          }
        },
        "Comment": {
          "description": "Additional comment.",
          "maxLength": 3000,
          "minLength": 5,
          "type": "string"
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "PutAppointmentInfo": {
      "required": [
        "Pte",
        "ScheduledStart",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Pte": {
          "enum": [
            "Unknown",
            "Pte",
            "Appointment",
            "CallFirst",
            "Na"
          ],
          "type": "string"
        },
        "ScheduledStart": {
          "format": "date-time",
          "type": "string"
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "InternalNoteHistoryList": {
      "description": "Represents internal note history.",
      "required": [
        "InternalNotes",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "InternalNotes": {
          "description": "Contains a list of values with the corresponding internal notes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InternalNote"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "InternalNote": {
      "description": "Internal Note.",
      "type": "object",
      "properties": {
        "DtStamp": {
          "format": "date-time",
          "description": "Date and time when the internal note was added.",
          "type": "string"
        },
        "UpdatedBy": {
          "description": "Name of a person who evaluated the internal note.",
          "type": "string"
        },
        "InternalNoteText": {
          "description": "Internal Note value.",
          "type": "string"
        }
      }
    },
    "PutInternalNote": {
      "description": "Put internal note request model.",
      "required": [
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "InternalNote": {
          "description": "Internal note.",
          "maxLength": 3000,
          "minLength": 0,
          "type": "string"
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "UpdateAdditionalFieldsRequest": {
      "required": [
        "AdditionalFields",
        "PerformedBy",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "AdditionalFields": {
          "description": "The list of custom fields and their values. Array.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalField"
          }
        },
        "PerformedBy": {
          "$ref": "#/definitions/PerformedBy",
          "description": "Information about a person who changed the work order."
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "AdditionalFieldHistoryRequest": {
      "required": [
        "AdditionalFieldId",
        "WorkOrderId",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "AdditionalFieldId": {
          "format": "int32",
          "description": "Unique identifiers of a custom field in requestor’s system.",
          "type": "integer"
        },
        "WorkOrderId": {
          "format": "int32",
          "description": "A unique identifier of a work order in the CorrigoPro system.",
          "type": "integer"
        },
        "MessageId": {
          "description": "A unique identifier of the request.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "AdditionalFieldHistoryList": {
      "description": "Represents AdditionalField history.",
      "required": [
        "Values",
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "Values": {
          "description": "Contains a list of values with the corresponding DateTime stamps.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalFieldHistory"
          }
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    },
    "AdditionalFieldHistory": {
      "description": "AdditionalField history.",
      "required": [
        "Value",
        "DtStamp",
        "UpdatedBy"
      ],
      "type": "object",
      "properties": {
        "UrlLabel": {
          "description": "Applicable only for URL. Label used for URL.",
          "type": "string"
        },
        "Value": {
          "description": "A value of the custom field.",
          "type": "string"
        },
        "DtStamp": {
          "format": "date-time",
          "description": "Date and time of field value changes.",
          "type": "string"
        },
        "UpdatedBy": {
          "description": "A person who updated a custom field value.",
          "type": "string"
        }
      }
    },
    "IsmSettingsResponse": {
      "description": "Represents Induction and Safety Management Settings.",
      "required": [
        "MessageId"
      ],
      "type": "object",
      "properties": {
        "IsmProcedureInstructions": {
          "description": "Induction and Safety Management procedure instructions.",
          "type": "string"
        },
        "IsmProcedureUrl": {
          "description": "A link to the Induction and Safety Management procedure.",
          "type": "string"
        },
        "MessageId": {
          "description": "The unique message identifier of the request.",
          "type": "string"
        }
      }
    }
  },
  "x-explorer-enabled": false,
  "x-samples-languages": [
    "python",
    "java",
    "csharp"
  ]
}